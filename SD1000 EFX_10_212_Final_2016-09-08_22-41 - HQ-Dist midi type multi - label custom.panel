<?xml version="1.0" encoding="UTF-8"?>

<panel name="SD1000 EFX" panelShowDialogs="1" panelMessageTime="10000"
       panelAuthorName="Aryan and Mario" panelAuthorEmail="" panelAuthorUrl=""
       panelAuthorDesc="Hochschule Kaiserslautern" panelVersionMajor="10"
       panelVersionMinor="212" panelVersionName="Final" panelVendor=""
       panelDevice="" panelMidiSnapshotAfterLoad="0" panelMidiSnapshotAfterProgramChange="0"
       panelMidiSnapshotDelay="10" panelMidiSnapshotShowProgress="0"
       panelMidiInputChannelDevice="1" panelMidiInputDevice="-- None"
       panelMidiControllerChannelDevice="1" panelMidiControllerDevice="SD1000"
       panelMidiOutputChannelDevice="4" panelMidiOutputDevice="SD1000"
       panelMidiInputFromHost="0" panelMidiInputChannelHost="1" panelMidiOutputToHost="0"
       panelMidiOutputChannelHost="1" panelMidiThruH2H="0" panelMidiThruH2HChannelize="0"
       panelMidiThruH2D="0" panelMidiThruH2DChannelize="0" panelMidiThruD2D="0"
       panelMidiThruD2DChannelize="0" panelMidiThruD2H="0" panelMidiThruD2HChannelize="0"
       panelMidiRealtimeIgnore="1" panelMidiInputThreadPriority="7"
       panelMidiProgram="0" panelMidiBankLsb="0" panelMidiBankMsb="0"
       panelMidiSendProgramChangeOnLoad="0" panelMidiProgramCalloutOnprogramChange="0"
       panelMidiMatchCacheSize="32" panelMidiGlobalDelay="0" panelMidiPauseOut="0"
       panelMidiPauseIn="0" panelOSCEnabled="0" panelOSCPort="-1" panelOSCProtocol="0"
       luaPanelMidiChannelChanged="-- None" luaPanelMidiReceived="-- None"
       luaPanelMidiMultiReceived="-- None" luaPanelLoaded="finishedLoading"
       luaPanelBeforeLoad="-- None" luaPanelSaved="-- None" luaPanelResourcesLoaded="-- None"
       luaPanelProgramChanged="-- None" luaPanelGlobalChanged="-- None"
       luaPanelMessageHandler="-- None" luaPanelModulatorValueChanged="-- None"
       luaPanelSaveState="-- None" luaPanelRestoreState="-- None" luaPanelMidiSnapshotPost="-- None"
       luaPanelMidiSnapshotPre="-- None" luaAudioProcessBlock="-- None"
       luaPanelOSCReceived="-- None" panelFilePath="C:\Users\it\Seafile\Tatooine - Studium\Praxissemester\1_work\v7\SD1000 EFX_10_212_Final_2016-09-08_22-23 - HQ-Dist send Preset and Param.panel"
       panelUID="8.cuem0Bgv7SK" panelInstanceUID="x3CF" panelInstanceManufacturerID="3EDN"
       panelModulatorListColumns="&lt;TABLELAYOUT sortedCol=&quot;611&quot; sortForwards=&quot;0&quot;&gt;&lt;COLUMN id=&quot;612&quot; visible=&quot;1&quot; width=&quot;183&quot;/&gt;&lt;COLUMN id=&quot;1&quot; visible=&quot;1&quot; width=&quot;143&quot;/&gt;&lt;COLUMN id=&quot;611&quot; visible=&quot;1&quot; width=&quot;143&quot;/&gt;&lt;COLUMN id=&quot;613&quot; visible=&quot;1&quot; width=&quot;144&quot;/&gt;&lt;COLUMN id=&quot;123&quot; visible=&quot;1&quot; width=&quot;143&quot;/&gt;&lt;COLUMN id=&quot;127&quot; visible=&quot;1&quot; width=&quot;145&quot;/&gt;&lt;COLUMN id=&quot;128&quot; visible=&quot;1&quot; width=&quot;142&quot;/&gt;&lt;COLUMN id=&quot;135&quot; visible=&quot;1&quot; width=&quot;142&quot;/&gt;&lt;COLUMN id=&quot;555&quot; visible=&quot;1&quot; width=&quot;142&quot;/&gt;&lt;COLUMN id=&quot;552&quot; visible=&quot;1&quot; width=&quot;142&quot;/&gt;&lt;COLUMN id=&quot;556&quot; visible=&quot;1&quot; width=&quot;149&quot;/&gt;&lt;COLUMN id=&quot;18&quot; visible=&quot;1&quot; width=&quot;140&quot;/&gt;&lt;COLUMN id=&quot;19&quot; visible=&quot;1&quot; width=&quot;140&quot;/&gt;&lt;/TABLELAYOUT&gt;"
       panelModulatorListCsvDelimiter="," panelModulatorListXmlRoot="ctrlrModulatorList"
       panelModulatorListXmlModulator="ctrlrModulator" panelModulatorListSortOption="1"
       panelGlobalVariables="0:0:-1:-1:-1:0:0:-1:-1:0:29:69:17:60:34:0:26:0:-1:0:-1:-1:-1:0:0:0:-1:-1:-1:-1:-1:0:0:-1:0:-1:0:-1:-1:-1:0:-1:0:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:0:-1:0"
       panelResources="-- None" panelPropertyDisplayIDs="1" ctrlrMenuItemBackgroundColour="ffffffff"
       ctrlrMenuItemTextColour="ff000000" ctrlrMenuItemHighlightedTextColour="ffffffff"
       ctrlrMenuItemHighlightColour="ff4364ff" ctrlrMenuItemFont="&lt;Sans-Serif&gt;;18;0;0;0;0;1;3"
       ctrlrMenuItemSeparatorColour="44000000" ctrlrMenuItemHeaderColour="ff000000"
       ctrlrMenuBarBackgroundColour1="fff7f7f7" ctrlrMenuBarBackgroundColour2="ffcccccc"
       ctrlrMenuBarTextColour="ff000000" ctrlrMenuBarHighlightedTextColour="ffffffff"
       ctrlrMenuBarHighlightColour="ff4364ff" ctrlrMenuBarFont="&lt;Sans-Serif&gt;;18;0;0;0;0;1;3"
       ctrlrUseEditorWrapper="0" panelIndex="4" uiPanelModulatorListViewTree="0">
  <uiWindowManager>
    <uiChildWindow uiChildWindowName="LuaMethodEditor" uiChildWindowState="0 31 1920 1027">
      <uiChildWindowContentState luaMethodEditor="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#13;&#10;&#13;&#10;&lt;OPEN id=&quot;LUA&quot; scrollPos=&quot;221&quot;&gt;&#13;&#10;  &lt;OPEN id=&quot;Dialog&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;Efx&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;MIDI&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;Serializing&quot;/&gt;&#13;&#10;  &lt;OPEN id=&quot;Development&quot;/&gt;&#13;&#10;  &lt;SELECTED id=&quot;/LUA/setCurrentPresetLabel&quot;/&gt;&#13;&#10;&lt;/OPEN&gt;&#13;&#10;;9bf3edb39fd64cc3981902770217d493:6162f378fc294f9c9c105923fb1e8c5e:4e622df60052431a9bb7f053603471a4:00712fa5f6234ca89ae9dd034d040e74:2a31c51cdf4c4d518821cd9b56357020:e0b9986e42b548e192eb47953a25e218:17d31b8655ce4cefb712bfc0c62a264a"/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="ModulatorList" uiChildWindowState="fs 0 0 800 500">
      <uiChildWindowContentState/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="LayerEditor" uiChildWindowState="368 167 800 500">
      <uiChildWindowContentState/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="MIDILibrary" uiChildWindowState="560 276 800 500">
      <uiChildWindowContentState/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="LuaConsole" uiChildWindowState="fs 439 178 800 500">
      <uiChildWindowContentState/>
    </uiChildWindow>
  </uiWindowManager>
  <midiLibrary uuid="1c774fe761604408a6eef282f4aca9a8" luaTransInfo="-- None"
               midiLibraryParameterIndexProperty="modulatorCustomIndex" midiLibraryMidiProgramChangeControl="0"
               midiLibrarySendSnapAfterPChg="0" midiLibraryDefaultBankName="New Bank - %H:%M:%S"
               midiLibraryDefaultProgramName="SD1000 - %H:%M:%S" midiLibraryDefaultSnapshotName="Snapshot - %H:%M:%S"
               midiLibraryCustomRequests="" midiLibraryTreeState="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#13;&#10;&#13;&#10;&lt;OPEN id=&quot;midiLibrary&quot; scrollPos=&quot;0&quot;/&gt;&#13;&#10;">
    <midiLibrarySnapshots name="Snapshots"/>
    <midiLibraryFirmware name="Firmware"/>
    <midiLibraryEditBuffer name="Edit buffer"/>
    <midiLibraryTransactions name="Transactions"/>
  </midiLibrary>
  <luaManager>
    <luaManagerMethods>
      <luaMethodGroup name="Built-In" uuid="ae8e563c69054ba2b79b5e8224d63ad9">
        <luaMethod luaMethodName="table_dump" luaMethodCode="-- @1.1&#13;&#10;--&#13;&#10;-- Print table contents&#13;&#10;--&#13;&#10;function table_dump(table)&#13;&#10;&#9;for key,value in ipairs(table) do&#13;&#10;&#9;&#9;_DBG (&quot;KEY= [&quot;..key..&quot;]&quot;)&#13;&#10;&#13;&#10;&#9;&#9;if (type(value) == &quot;table&quot;) then&#13;&#10;&#9;&#9;&#9;table_dump(value)&#13;&#10;&#9;&#9;elseif (type(value) == &quot;nil&quot;) then&#13;&#10;&#9;&#9;&#9;_DBG (&quot; = NIL&quot;)&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;what (value)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000001"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="what" luaMethodCode="-- @1.1&#13;&#10;--&#13;&#10;-- Print methods for an object&#13;&#10;--&#13;&#10;function what(o)&#13;&#10;&#9;info = class_info(o)&#13;&#10;&#9;if info ~= nil then&#13;&#10;&#9;&#9;ret = &quot;Object type [&quot; .. info.name .. &quot;]\n-----------------------------------------------------------------\n\n&quot;..&quot;Members:\n&quot;&#13;&#10;&#13;&#10;&#9;&#9;if info.name == &quot;table&quot; then&#13;&#10;&#9;&#9;&#9;table_dump(o)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;for k, v in pairs(info.methods) do&#13;&#10;&#9;&#9;&#9;ret = ret .. string.format (&quot;\t%30s:\t%5s\n&quot;, k, type(v))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;ret = ret .. &quot;\n\nAttributes:\n&quot;&#13;&#10;&#9;&#9;for k, v in pairs(info.attributes) do&#13;&#10;&#9;&#9;&#9;ret = ret .. string.format (&quot;\t%30s:\t%5s\n&quot;, k, type(v))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;ret = ret .. &quot;\n-----------------------------------------------------------------&quot;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;console (ret)&#13;&#10;&#9;return ret&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000002"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="how" luaMethodCode="-- @1.1&#13;&#10;--&#13;&#10;-- Print all available classes&#13;&#10;--&#13;&#10;function how()&#13;&#10;&#9;ret = &quot;Available classes:\n&quot;&#13;&#10;&#9;ret = ret .. &quot;\n-----------------------------------------------------------------&quot;&#13;&#10;&#9;for i,v in ipairs(class_names()) do&#13;&#10;&#9;&#9;ret = ret .. &quot;\t&quot;.. v .. &quot;\n&quot;&#13;&#10;&#9;end&#13;&#10;&#9;ret = ret .. &quot;\n-----------------------------------------------------------------&quot;&#13;&#10;&#9;console (J(ret))&#13;&#10;&#9;return ret&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000003"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="json4lua" luaMethodCode="-----------------------------------------------------------------------------&#13;&#10;-- JSON4Lua: JSON encoding / decoding support for the Lua language.&#13;&#10;-- json Module.&#13;&#10;-- Author: Craig Mason-Jones&#13;&#10;-- Homepage: http://json.luaforge.net/&#13;&#10;-- Version: 0.9.40&#13;&#10;-- This module is released under the MIT License (MIT).&#13;&#10;-- Please see LICENCE.txt for details.&#13;&#10;--&#13;&#10;-- USAGE:&#13;&#10;-- This module exposes two functions:&#13;&#10;--   encode(o)&#13;&#10;--     Returns the table / string / boolean / number / nil / json.null value as a JSON-encoded string.&#13;&#10;--   decode(json_string)&#13;&#10;--     Returns a Lua object populated with the data encoded in the JSON string json_string.&#13;&#10;--&#13;&#10;-- REQUIREMENTS:&#13;&#10;--   compat-5.1 if using Lua 5.0&#13;&#10;--&#13;&#10;-- CHANGELOG&#13;&#10;--   0.9.20 Introduction of local Lua functions for private functions (removed _ function prefix). &#13;&#10;--          Fixed Lua 5.1 compatibility issues.&#13;&#10;--   &#9;&#9;Introduced json.null to have null values in associative arrays.&#13;&#10;--          encode() performance improvement (more than 50%) through table.concat rather than ..&#13;&#10;--          Introduced decode ability to ignore /**/ comments in the JSON string.&#13;&#10;--   0.9.10 Fix to array encoding / decoding to correctly manage nil/null values in arrays.&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;-- Imports and dependencies&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;local math = require('math')&#13;&#10;local string = require(&quot;string&quot;)&#13;&#10;local table = require(&quot;table&quot;)&#13;&#10;&#13;&#10;local base = _G&#13;&#10;&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;-- Module declaration&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;module(&quot;json&quot;)&#13;&#10;&#13;&#10;-- Public functions&#13;&#10;&#13;&#10;-- Private functions&#13;&#10;local decode_scanArray&#13;&#10;local decode_scanComment&#13;&#10;local decode_scanConstant&#13;&#10;local decode_scanNumber&#13;&#10;local decode_scanObject&#13;&#10;local decode_scanString&#13;&#10;local decode_scanWhitespace&#13;&#10;local encodeString&#13;&#10;local isArray&#13;&#10;local isEncodable&#13;&#10;&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;-- PUBLIC FUNCTIONS&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;--- Encodes an arbitrary Lua object / variable.&#13;&#10;-- @param v The Lua object / variable to be JSON encoded.&#13;&#10;-- @return String containing the JSON encoding in internal Lua string format (i.e. not unicode)&#13;&#10;function encode (v)&#13;&#10;  -- Handle nil values&#13;&#10;  if v==nil then&#13;&#10;    return &quot;null&quot;&#13;&#10;  end&#13;&#10;  &#13;&#10;  local vtype = base.type(v)  &#13;&#10;&#13;&#10;  -- Handle strings&#13;&#10;  if vtype=='string' then    &#13;&#10;    return '&quot;' .. encodeString(v) .. '&quot;'&#9;    -- Need to handle encoding in string&#13;&#10;  end&#13;&#10;  &#13;&#10;  -- Handle booleans&#13;&#10;  if vtype=='number' or vtype=='boolean' then&#13;&#10;    return base.tostring(v)&#13;&#10;  end&#13;&#10;  &#13;&#10;  -- Handle tables&#13;&#10;  if vtype=='table' then&#13;&#10;    local rval = {}&#13;&#10;    -- Consider arrays separately&#13;&#10;    local bArray, maxCount = isArray(v)&#13;&#10;    if bArray then&#13;&#10;      for i = 1,maxCount do&#13;&#10;        table.insert(rval, encode(v[i]))&#13;&#10;      end&#13;&#10;    else&#9;-- An object, not an array&#13;&#10;      for i,j in base.pairs(v) do&#13;&#10;        if isEncodable(i) and isEncodable(j) then&#13;&#10;          table.insert(rval, '&quot;' .. encodeString(i) .. '&quot;:' .. encode(j))&#13;&#10;        end&#13;&#10;      end&#13;&#10;    end&#13;&#10;    if bArray then&#13;&#10;      return '[' .. table.concat(rval,',') ..']'&#13;&#10;    else&#13;&#10;      return '{' .. table.concat(rval,',') .. '}'&#13;&#10;    end&#13;&#10;  end&#13;&#10;  &#13;&#10;  -- Handle null values&#13;&#10;  if vtype=='function' and v==null then&#13;&#10;    return 'null'&#13;&#10;  end&#13;&#10;  &#13;&#10;  base.assert(false,'encode attempt to encode unsupported type ' .. vtype .. ':' .. base.tostring(v))&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;--- Decodes a JSON string and returns the decoded value as a Lua data structure / value.&#13;&#10;-- @param s The string to scan.&#13;&#10;-- @param [startPos] Optional starting position where the JSON string is located. Defaults to 1.&#13;&#10;-- @param Lua object, number The object that was scanned, as a Lua table / string / number / boolean or nil,&#13;&#10;-- and the position of the first character after&#13;&#10;-- the scanned JSON object.&#13;&#10;function decode(s, startPos)&#13;&#10;  startPos = startPos and startPos or 1&#13;&#10;  startPos = decode_scanWhitespace(s,startPos)&#13;&#10;  base.assert(startPos&lt;=string.len(s), 'Unterminated JSON encoded object found at position in [' .. s .. ']')&#13;&#10;  local curChar = string.sub(s,startPos,startPos)&#13;&#10;  -- Object&#13;&#10;  if curChar=='{' then&#13;&#10;    return decode_scanObject(s,startPos)&#13;&#10;  end&#13;&#10;  -- Array&#13;&#10;  if curChar=='[' then&#13;&#10;    return decode_scanArray(s,startPos)&#13;&#10;  end&#13;&#10;  -- Number&#13;&#10;  if string.find(&quot;+-0123456789.e&quot;, curChar, 1, true) then&#13;&#10;    return decode_scanNumber(s,startPos)&#13;&#10;  end&#13;&#10;  -- String&#13;&#10;  if curChar==[[&quot;]] or curChar==[[']] then&#13;&#10;    return decode_scanString(s,startPos)&#13;&#10;  end&#13;&#10;  if string.sub(s,startPos,startPos+1)=='/*' then&#13;&#10;    return decode(s, decode_scanComment(s,startPos))&#13;&#10;  end&#13;&#10;  -- Otherwise, it must be a constant&#13;&#10;  return decode_scanConstant(s,startPos)&#13;&#10;end&#13;&#10;&#13;&#10;--- The null function allows one to specify a null value in an associative array (which is otherwise&#13;&#10;-- discarded if you set the value with 'nil' in Lua. Simply set t = { first=json.null }&#13;&#10;function null()&#13;&#10;  return null -- so json.null() will also return null ;-)&#13;&#10;end&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;-- Internal, PRIVATE functions.&#13;&#10;-- Following a Python-like convention, I have prefixed all these 'PRIVATE'&#13;&#10;-- functions with an underscore.&#13;&#10;-----------------------------------------------------------------------------&#13;&#10;&#13;&#10;--- Scans an array from JSON into a Lua object&#13;&#10;-- startPos begins at the start of the array.&#13;&#10;-- Returns the array and the next starting position&#13;&#10;-- @param s The string being scanned.&#13;&#10;-- @param startPos The starting position for the scan.&#13;&#10;-- @return table, int The scanned array as a table, and the position of the next character to scan.&#13;&#10;function decode_scanArray(s,startPos)&#13;&#10;  local array = {}&#9;-- The return value&#13;&#10;  local stringLen = string.len(s)&#13;&#10;  base.assert(string.sub(s,startPos,startPos)=='[','decode_scanArray called but array does not start at position ' .. startPos .. ' in string:\n'..s )&#13;&#10;  startPos = startPos + 1&#13;&#10;  -- Infinite loop for array elements&#13;&#10;  repeat&#13;&#10;    startPos = decode_scanWhitespace(s,startPos)&#13;&#10;    base.assert(startPos&lt;=stringLen,'JSON String ended unexpectedly scanning array.')&#13;&#10;    local curChar = string.sub(s,startPos,startPos)&#13;&#10;    if (curChar==']') then&#13;&#10;      return array, startPos+1&#13;&#10;    end&#13;&#10;    if (curChar==',') then&#13;&#10;      startPos = decode_scanWhitespace(s,startPos+1)&#13;&#10;    end&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON String ended unexpectedly scanning array.')&#13;&#10;    object, startPos = decode(s,startPos)&#13;&#10;    table.insert(array,object)&#13;&#10;  until false&#13;&#10;end&#13;&#10;&#13;&#10;--- Scans a comment and discards the comment.&#13;&#10;-- Returns the position of the next character following the comment.&#13;&#10;-- @param string s The JSON string to scan.&#13;&#10;-- @param int startPos The starting position of the comment&#13;&#10;function decode_scanComment(s, startPos)&#13;&#10;  base.assert( string.sub(s,startPos,startPos+1)=='/*', &quot;decode_scanComment called but comment does not start at position &quot; .. startPos)&#13;&#10;  local endPos = string.find(s,'*/',startPos+2)&#13;&#10;  base.assert(endPos~=nil, &quot;Unterminated comment in string at &quot; .. startPos)&#13;&#10;  return endPos+2  &#13;&#10;end&#13;&#10;&#13;&#10;--- Scans for given constants: true, false or null&#13;&#10;-- Returns the appropriate Lua type, and the position of the next character to read.&#13;&#10;-- @param s The string being scanned.&#13;&#10;-- @param startPos The position in the string at which to start scanning.&#13;&#10;-- @return object, int The object (true, false or nil) and the position at which the next character should be &#13;&#10;-- scanned.&#13;&#10;function decode_scanConstant(s, startPos)&#13;&#10;  local consts = { [&quot;true&quot;] = true, [&quot;false&quot;] = false, [&quot;null&quot;] = nil }&#13;&#10;  local constNames = {&quot;true&quot;,&quot;false&quot;,&quot;null&quot;}&#13;&#10;&#13;&#10;  for i,k in base.pairs(constNames) do&#13;&#10;    --print (&quot;[&quot; .. string.sub(s,startPos, startPos + string.len(k) -1) ..&quot;]&quot;, k)&#13;&#10;    if string.sub(s,startPos, startPos + string.len(k) -1 )==k then&#13;&#10;      return consts[k], startPos + string.len(k)&#13;&#10;    end&#13;&#10;  end&#13;&#10;  base.assert(nil, 'Failed to scan constant from string ' .. s .. ' at starting position ' .. startPos)&#13;&#10;end&#13;&#10;&#13;&#10;--- Scans a number from the JSON encoded string.&#13;&#10;-- (in fact, also is able to scan numeric +- eqns, which is not&#13;&#10;-- in the JSON spec.)&#13;&#10;-- Returns the number, and the position of the next character&#13;&#10;-- after the number.&#13;&#10;-- @param s The string being scanned.&#13;&#10;-- @param startPos The position at which to start scanning.&#13;&#10;-- @return number, int The extracted number and the position of the next character to scan.&#13;&#10;function decode_scanNumber(s,startPos)&#13;&#10;  local endPos = startPos+1&#13;&#10;  local stringLen = string.len(s)&#13;&#10;  local acceptableChars = &quot;+-0123456789.e&quot;&#13;&#10;  while (string.find(acceptableChars, string.sub(s,endPos,endPos), 1, true)&#13;&#10;&#9;and endPos&lt;=stringLen&#13;&#10;&#9;) do&#13;&#10;    endPos = endPos + 1&#13;&#10;  end&#13;&#10;  local stringValue = 'return ' .. string.sub(s,startPos, endPos-1)&#13;&#10;  local stringEval = base.loadstring(stringValue)&#13;&#10;  base.assert(stringEval, 'Failed to scan number [ ' .. stringValue .. '] in JSON string at position ' .. startPos .. ' : ' .. endPos)&#13;&#10;  return stringEval(), endPos&#13;&#10;end&#13;&#10;&#13;&#10;--- Scans a JSON object into a Lua object.&#13;&#10;-- startPos begins at the start of the object.&#13;&#10;-- Returns the object and the next starting position.&#13;&#10;-- @param s The string being scanned.&#13;&#10;-- @param startPos The starting position of the scan.&#13;&#10;-- @return table, int The scanned object as a table and the position of the next character to scan.&#13;&#10;function decode_scanObject(s,startPos)&#13;&#10;  local object = {}&#13;&#10;  local stringLen = string.len(s)&#13;&#10;  local key, value&#13;&#10;  base.assert(string.sub(s,startPos,startPos)=='{','decode_scanObject called but object does not start at position ' .. startPos .. ' in string:\n' .. s)&#13;&#10;  startPos = startPos + 1&#13;&#10;  repeat&#13;&#10;    startPos = decode_scanWhitespace(s,startPos)&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON string ended unexpectedly while scanning object.')&#13;&#10;    local curChar = string.sub(s,startPos,startPos)&#13;&#10;    if (curChar=='}') then&#13;&#10;      return object,startPos+1&#13;&#10;    end&#13;&#10;    if (curChar==',') then&#13;&#10;      startPos = decode_scanWhitespace(s,startPos+1)&#13;&#10;    end&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON string ended unexpectedly scanning object.')&#13;&#10;    -- Scan the key&#13;&#10;    key, startPos = decode(s,startPos)&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON string ended unexpectedly searching for value of key ' .. key)&#13;&#10;    startPos = decode_scanWhitespace(s,startPos)&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON string ended unexpectedly searching for value of key ' .. key)&#13;&#10;    base.assert(string.sub(s,startPos,startPos)==':','JSON object key-value assignment mal-formed at ' .. startPos)&#13;&#10;    startPos = decode_scanWhitespace(s,startPos+1)&#13;&#10;    base.assert(startPos&lt;=stringLen, 'JSON string ended unexpectedly searching for value of key ' .. key)&#13;&#10;    value, startPos = decode(s,startPos)&#13;&#10;    object[key]=value&#13;&#10;  until false&#9;-- infinite loop while key-value pairs are found&#13;&#10;end&#13;&#10;&#13;&#10;-- START SoniEx2&#13;&#10;-- Initialize some things used by decode_scanString&#13;&#10;-- You know, for efficiency&#13;&#10;local escapeSequences = {&#13;&#10;  [&quot;\\t&quot;] = &quot;\t&quot;,&#13;&#10;  [&quot;\\f&quot;] = &quot;\f&quot;,&#13;&#10;  [&quot;\\r&quot;] = &quot;\r&quot;,&#13;&#10;  [&quot;\\n&quot;] = &quot;\n&quot;,&#13;&#10;  [&quot;\\b&quot;] = &quot;\b&quot;&#13;&#10;}&#13;&#10;base.setmetatable(escapeSequences, {__index = function(t,k)&#13;&#10;  -- skip &quot;\&quot; aka strip escape&#13;&#10;  return string.sub(k,2)&#13;&#10;end})&#13;&#10;-- END SoniEx2&#13;&#10;&#13;&#10;--- Scans a JSON string from the opening inverted comma or single quote to the&#13;&#10;-- end of the string.&#13;&#10;-- Returns the string extracted as a Lua string,&#13;&#10;-- and the position of the next non-string character&#13;&#10;-- (after the closing inverted comma or single quote).&#13;&#10;-- @param s The string being scanned.&#13;&#10;-- @param startPos The starting position of the scan.&#13;&#10;-- @return string, int The extracted string as a Lua string, and the next character to parse.&#13;&#10;function decode_scanString(s,startPos)&#13;&#10;  base.assert(startPos, 'decode_scanString(..) called without start position')&#13;&#10;  local startChar = string.sub(s,startPos,startPos)&#13;&#10;  -- START SoniEx2&#13;&#10;  -- PS: I don't think single quotes are valid JSON&#13;&#10;  base.assert(startChar == [[&quot;]] or startChar == [[']],'decode_scanString called for a non-string')&#13;&#10;  --base.assert(startPos, &quot;String decoding failed: missing closing &quot; .. startChar .. &quot; for string at position &quot; .. oldStart)&#13;&#10;  local t = {}&#13;&#10;  local i,j = startPos,startPos&#13;&#10;  while string.find(s, startChar, j+1) ~= j+1 do&#13;&#10;    local oldj = j&#13;&#10;    i,j = string.find(s, &quot;\\.&quot;, j+1)&#13;&#10;    local x,y = string.find(s, startChar, oldj+1)&#13;&#10;    if not i or x &lt; i then&#13;&#10;      base.print(s, startPos, string.sub(s,startPos,oldj))&#13;&#10;      i,j = x,y-1&#13;&#10;      if not x then base.print(s, startPos, string.sub(s,startPos,oldj)) end&#13;&#10;    end&#13;&#10;    table.insert(t, string.sub(s, oldj+1, i-1))&#13;&#10;    if string.sub(s, i, j) == &quot;\\u&quot; then&#13;&#10;      local a = string.sub(s,j+1,j+4)&#13;&#10;      j = j + 4&#13;&#10;      local n = base.tonumber(a, 16)&#13;&#10;      base.assert(n, &quot;String decoding failed: bad Unicode escape &quot; .. a .. &quot; at position &quot; .. i .. &quot; : &quot; .. j)&#13;&#10;      -- math.floor(x/2&#94;y) == lazy right shift&#13;&#10;      -- a % 2&#94;b == bitwise_and(a, (2&#94;b)-1)&#13;&#10;      -- 64 = 2&#94;6&#13;&#10;      -- 4096 = 2&#94;12 (or 2&#94;6 * 2&#94;6)&#13;&#10;      local x&#13;&#10;      if n &lt; 0x80 then&#13;&#10;        x = string.char(n % 0x80)&#13;&#10;      elseif n &lt; 0x800 then&#13;&#10;        -- [110x xxxx] [10xx xxxx]&#13;&#10;        x = string.char(0xC0 + (math.floor(n/64) % 0x20), 0x80 + (n % 0x40))&#13;&#10;      else&#13;&#10;        -- [1110 xxxx] [10xx xxxx] [10xx xxxx]&#13;&#10;        x = string.char(0xE0 + (math.floor(n/4096) % 0x10), 0x80 + (math.floor(n/64) % 0x40), 0x80 + (n % 0x40))&#13;&#10;      end&#13;&#10;      table.insert(t, x)&#13;&#10;    else&#13;&#10;      table.insert(t, escapeSequences[string.sub(s, i, j)])&#13;&#10;    end&#13;&#10;  end&#13;&#10;  table.insert(t,string.sub(j, j+1))&#13;&#10;  base.assert(string.find(s, startChar, j+1), &quot;String decoding failed: missing closing &quot; .. startChar .. &quot; at position &quot; .. j .. &quot;(for string at position &quot; .. startPos .. &quot;)&quot;)&#13;&#10;  return table.concat(t,&quot;&quot;), j+2&#13;&#10;  -- END SoniEx2&#13;&#10;end&#13;&#10;&#13;&#10;--- Scans a JSON string skipping all whitespace from the current start position.&#13;&#10;-- Returns the position of the first non-whitespace character, or nil if the whole end of string is reached.&#13;&#10;-- @param s The string being scanned&#13;&#10;-- @param startPos The starting position where we should begin removing whitespace.&#13;&#10;-- @return int The first position where non-whitespace was encountered, or string.len(s)+1 if the end of string&#13;&#10;-- was reached.&#13;&#10;function decode_scanWhitespace(s,startPos)&#13;&#10;  local whitespace=&quot; \n\r\t&quot;&#13;&#10;  local stringLen = string.len(s)&#13;&#10;  while ( string.find(whitespace, string.sub(s,startPos,startPos), 1, true)  and startPos &lt;= stringLen) do&#13;&#10;    startPos = startPos + 1&#13;&#10;  end&#13;&#10;  return startPos&#13;&#10;end&#13;&#10;&#13;&#10;--- Encodes a string to be JSON-compatible.&#13;&#10;-- This just involves back-quoting inverted commas, back-quotes and newlines, I think ;-)&#13;&#10;-- @param s The string to return as a JSON encoded (i.e. backquoted string)&#13;&#10;-- @return The string appropriately escaped.&#13;&#10;&#13;&#10;local escapeList = {&#13;&#10;    ['&quot;']  = '\\&quot;',&#13;&#10;    ['\\'] = '\\\\',&#13;&#10;    ['/']  = '\\/', &#13;&#10;    ['\b'] = '\\b',&#13;&#10;    ['\f'] = '\\f',&#13;&#10;    ['\n'] = '\\n',&#13;&#10;    ['\r'] = '\\r',&#13;&#10;    ['\t'] = '\\t'&#13;&#10;}&#13;&#10;&#13;&#10;function encodeString(s)&#13;&#10; return s:gsub(&quot;.&quot;, function(c) return escapeList[c] end) -- SoniEx2: 5.0 compat&#13;&#10;end&#13;&#10;&#13;&#10;-- Determines whether the given Lua type is an array or a table / dictionary.&#13;&#10;-- We consider any table an array if it has indexes 1..n for its n items, and no&#13;&#10;-- other data in the table.&#13;&#10;-- I think this method is currently a little 'flaky', but can't think of a good way around it yet...&#13;&#10;-- @param t The table to evaluate as an array&#13;&#10;-- @return boolean, number True if the table can be represented as an array, false otherwise. If true,&#13;&#10;-- the second returned value is the maximum&#13;&#10;-- number of indexed elements in the array. &#13;&#10;function isArray(t)&#13;&#10;  -- Next we count all the elements, ensuring that any non-indexed elements are not-encodable &#13;&#10;  -- (with the possible exception of 'n')&#13;&#10;  local maxIndex = 0&#13;&#10;  for k,v in base.pairs(t) do&#13;&#10;    if (base.type(k)=='number' and math.floor(k)==k and 1&lt;=k) then&#9;-- k,v is an indexed pair&#13;&#10;      if (not isEncodable(v)) then return false end&#9;-- All array elements must be encodable&#13;&#10;      maxIndex = math.max(maxIndex,k)&#13;&#10;    else&#13;&#10;      if (k=='n') then&#13;&#10;        if v ~= table.getn(t) then return false end  -- False if n does not hold the number of elements&#13;&#10;      else -- Else of (k=='n')&#13;&#10;        if isEncodable(v) then return false end&#13;&#10;      end  -- End of (k~='n')&#13;&#10;    end -- End of k,v not an indexed pair&#13;&#10;  end  -- End of loop across all pairs&#13;&#10;  return true, maxIndex&#13;&#10;end&#13;&#10;&#13;&#10;--- Determines whether the given Lua object / table / variable can be JSON encoded. The only&#13;&#10;-- types that are JSON encodable are: string, boolean, number, nil, table and json.null.&#13;&#10;-- In this implementation, all other types are ignored.&#13;&#10;-- @param o The object to examine.&#13;&#10;-- @return boolean True if the object should be JSON encoded, false if it should be ignored.&#13;&#10;function isEncodable(o)&#13;&#10;  local t = base.type(o)&#13;&#10;  return (t=='string' or t=='boolean' or t=='number' or t=='nil' or t=='table') or (t=='function' and o==null) &#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000004"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="debugger.lua" luaMethodCode="--{{{  history&#13;&#10;&#13;&#10;--15/03/06 DCN Created based on RemDebug&#13;&#10;--28/04/06 DCN Update for Lua 5.1&#13;&#10;--01/06/06 DCN Fix command argument parsing&#13;&#10;--             Add step/over N facility&#13;&#10;--             Add trace lines facility&#13;&#10;--05/06/06 DCN Add trace call/return facility&#13;&#10;--06/06/06 DCN Make it behave when stepping through the creation of a coroutine&#13;&#10;--06/06/06 DCN Integrate the simple debugger into the main one&#13;&#10;--07/06/06 DCN Provide facility to step into coroutines&#13;&#10;--13/06/06 DCN Fix bug that caused the function environment to get corrupted with the global one&#13;&#10;--14/06/06 DCN Allow 'sloppy' file names when setting breakpoints&#13;&#10;--04/08/06 DCN Allow for no space after command name&#13;&#10;--11/08/06 DCN Use io.write not print&#13;&#10;--30/08/06 DCN Allow access to array elements in 'dump'&#13;&#10;--10/10/06 DCN Default to breakfile for all commands that require a filename and give '-'&#13;&#10;--06/12/06 DCN Allow for punctuation characters in DUMP variable names&#13;&#10;--03/01/07 DCN Add pause on/off facility&#13;&#10;--19/06/07 DCN Allow for duff commands being typed in the debugger (thanks to Michael.Bringmann@lsi.com)&#13;&#10;--             Allow for case sensitive file systems               (thanks to Michael.Bringmann@lsi.com)&#13;&#10;--04/08/09 DCN Add optional line count param to pause&#13;&#10;--05/08/09 DCN Reset the debug hook in Pause() even if we think we're started&#13;&#10;--30/09/09 DCN Re-jig to not use co-routines (makes debugging co-routines awkward)&#13;&#10;--01/10/09 DCN Add ability to break on reaching any line in a file&#13;&#10;--24/07/13 TWW Added code for emulating setfenv/getfenv in Lua 5.2 as per&#13;&#10;--             http://lua-users.org/lists/lua-l/2010-06/msg00313.html&#13;&#10;--25/07/13 TWW Copied Alex Parrill's fix for errors when tracing back across a C frame&#13;&#10;--             (https://github.com/ColonelThirtyTwo/clidebugger, 26/01/12)&#13;&#10;--25/07/13 DCN Allow for windows and unix file name conventions in has_breakpoint&#13;&#10;--26/07/13 DCN Allow for \ being interpreted as an escape inside a [] pattern in 5.2&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  description&#13;&#10;&#13;&#10;--A simple command line debug system for Lua written by Dave Nichols of&#13;&#10;--Match-IT Limited. Its public domain software. Do with it as you wish.&#13;&#10;&#13;&#10;--This debugger was inspired by:&#13;&#10;-- RemDebug 1.0 Beta&#13;&#10;-- Copyright Kepler Project 2005 (http://www.keplerproject.org/remdebug)&#13;&#10;&#13;&#10;--Usage:&#13;&#10;--  require('debugger')        --load the debug library&#13;&#10;--  pause(message)             --start/resume a debug session&#13;&#10;&#13;&#10;--An assert() failure will also invoke the debugger.&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;local IsWindows = string.find(string.lower(os.getenv('OS') or ''),'&#94;windows')&#13;&#10;&#13;&#10;local coro_debugger&#13;&#10;local events = { BREAK = 1, WATCH = 2, STEP = 3, SET = 4 }&#13;&#10;breakpoints = {}&#13;&#10;local watches = {}&#13;&#10;local step_into   = false&#13;&#10;local step_over   = false&#13;&#10;local step_lines  = 0&#13;&#10;local step_level  = {main=0}&#13;&#10;local stack_level = {main=0}&#13;&#10;local trace_level = {main=0}&#13;&#10;local trace_calls = false&#13;&#10;local trace_returns = false&#13;&#10;local trace_lines = false&#13;&#10;local ret_file, ret_line, ret_name&#13;&#10;local current_thread = 'main'&#13;&#10;local started = false&#13;&#10;local pause_off = false&#13;&#10;local _g      = _G&#13;&#10;local cocreate, cowrap = coroutine.create, coroutine.wrap&#13;&#10;local pausemsg = 'pause'&#13;&#10;&#13;&#10;--{{{  make Lua 5.2 compatible&#13;&#10;&#13;&#10;if not setfenv then -- Lua 5.2&#13;&#10;  --[[&#13;&#10;  As far as I can see, the only missing detail of these functions (except&#13;&#10;  for occasional bugs) to achieve 100% compatibility is the case of&#13;&#10;  'getfenv' over a function that does not have an _ENV variable (that is,&#13;&#10;  it uses no globals).&#13;&#10;&#13;&#10;  We could use a weak table to keep the environments of these functions&#13;&#10;  when set by setfenv, but that still misses the case of a function&#13;&#10;  without _ENV that was not subjected to setfenv.&#13;&#10;&#13;&#10;  -- Roberto&#13;&#10;  ]]--&#13;&#10;&#13;&#10;  setfenv = setfenv or function(f, t)&#13;&#10;    f = (type(f) == 'function' and f or debug.getinfo(f + 1, 'f').func)&#13;&#10;    local name&#13;&#10;    local up = 0&#13;&#10;    repeat&#13;&#10;      up = up + 1&#13;&#10;      name = debug.getupvalue(f, up)&#13;&#10;    until name == '_ENV' or name == nil&#13;&#10;    if name then&#13;&#10;      debug.upvaluejoin(f, up, function() return name end, 1) -- use unique upvalue&#13;&#10;      debug.setupvalue(f, up, t)&#13;&#10;    end&#13;&#10;  end&#13;&#10;&#13;&#10;  getfenv = getfenv or function(f)&#13;&#10;    f = (type(f) == 'function' and f or debug.getinfo(f + 1, 'f').func)&#13;&#10;    local name, val&#13;&#10;    local up = 0&#13;&#10;    repeat&#13;&#10;      up = up + 1&#13;&#10;      name, val = debug.getupvalue(f, up)&#13;&#10;    until name == '_ENV' or name == nil&#13;&#10;    return val&#13;&#10;  end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{  local hints -- command help&#13;&#10;--The format in here is name=summary|description&#13;&#10;local hints = {&#13;&#10;&#13;&#10;pause =   [[&#13;&#10;pause(msg[,lines][,force]) -- start/resume a debugger session|&#13;&#10;&#13;&#10;This can only be used in your code or from the console as a means to&#13;&#10;start/resume a debug session.&#13;&#10;If msg is given that is shown when the session starts/resumes. Useful to&#13;&#10;give a context if you've instrumented your code with pause() statements.&#13;&#10;&#13;&#10;If lines is given, the script pauses after that many lines, else it pauses&#13;&#10;immediately.&#13;&#10;&#13;&#10;If force is true, the pause function is honoured even if poff has been used.&#13;&#10;This is useful when in an interactive console session to regain debugger&#13;&#10;control.&#13;&#10;]],&#13;&#10;&#13;&#10;poff =    [[&#13;&#10;poff                -- turn off pause() command|&#13;&#10;&#13;&#10;This causes all pause() commands to be ignored. This is useful if you have&#13;&#10;instrumented your code in a busy loop and want to continue normal execution&#13;&#10;with no further interruption.&#13;&#10;]],&#13;&#10;&#13;&#10;pon =     [[&#13;&#10;pon                 -- turn on pause() command|&#13;&#10;&#13;&#10;This re-instates honouring the pause() commands you may have instrumented&#13;&#10;your code with.&#13;&#10;]],&#13;&#10;&#13;&#10;setb =    [[&#13;&#10;setb [line file]    -- set a breakpoint to line/file|, line 0 means 'any'&#13;&#10;&#13;&#10;If file is omitted or is &quot;-&quot; the breakpoint is set at the file for the&#13;&#10;currently set level (see &quot;set&quot;). Execution pauses when this line is about&#13;&#10;to be executed and the debugger session is re-activated.&#13;&#10;&#13;&#10;The file can be given as the fully qualified name, partially qualified or&#13;&#10;just the file name. E.g. if file is set as &quot;myfile.lua&quot;, then whenever&#13;&#10;execution reaches any file that ends with &quot;myfile.lua&quot; it will pause. If&#13;&#10;no extension is given, any extension will do.&#13;&#10;&#13;&#10;If the line is given as 0, then reaching any line in the file will do.&#13;&#10;]],&#13;&#10;&#13;&#10;delb =    [[&#13;&#10;delb [line file]    -- removes a breakpoint|&#13;&#10;&#13;&#10;If file is omitted or is &quot;-&quot; the breakpoint is removed for the file of the&#13;&#10;currently set level (see &quot;set&quot;).&#13;&#10;]],&#13;&#10;&#13;&#10;delallb = [[&#13;&#10;delallb             -- removes all breakpoints|&#13;&#10;]],&#13;&#10;&#13;&#10;setw =    [[&#13;&#10;setw &lt;exp&gt;          -- adds a new watch expression|&#13;&#10;&#13;&#10;The expression is evaluated before each line is executed. If the expression&#13;&#10;yields true then execution is paused and the debugger session re-activated.&#13;&#10;The expression is executed in the context of the line about to be executed.&#13;&#10;]],&#13;&#10;&#13;&#10;delw =    [[&#13;&#10;delw &lt;index&gt;        -- removes the watch expression at index|&#13;&#10;&#13;&#10;The index is that returned when the watch expression was set by setw.&#13;&#10;]],&#13;&#10;&#13;&#10;delallw = [[&#13;&#10;delallw             -- removes all watch expressions|&#13;&#10;]],&#13;&#10;&#13;&#10;run     = [[&#13;&#10;run                 -- run until next breakpoint or watch expression|&#13;&#10;]],&#13;&#10;&#13;&#10;step    = [[&#13;&#10;step [N]            -- run next N lines, stepping into function calls|&#13;&#10;&#13;&#10;If N is omitted, use 1.&#13;&#10;]],&#13;&#10;&#13;&#10;over    = [[&#13;&#10;over [N]            -- run next N lines, stepping over function calls|&#13;&#10;&#13;&#10;If N is omitted, use 1.&#13;&#10;]],&#13;&#10;&#13;&#10;out     = [[&#13;&#10;out [N]             -- run lines until stepped out of N functions|&#13;&#10;&#13;&#10;If N is omitted, use 1.&#13;&#10;If you are inside a function, using &quot;out 1&quot; will run until you return&#13;&#10;from that function to the caller.&#13;&#10;]],&#13;&#10;&#13;&#10;gotoo   = [[&#13;&#10;gotoo [line file]    -- step to line in file|&#13;&#10;&#13;&#10;This is equivalent to 'setb line file', followed by 'run', followed&#13;&#10;by 'delb line file'.&#13;&#10;]],&#13;&#10;&#13;&#10;listb   = [[&#13;&#10;listb               -- lists breakpoints|&#13;&#10;]],&#13;&#10;&#13;&#10;listw   = [[&#13;&#10;listw               -- lists watch expressions|&#13;&#10;]],&#13;&#10;&#13;&#10;set     = [[&#13;&#10;set [level]         -- set context to stack level, omitted=show|&#13;&#10;&#13;&#10;If level is omitted it just prints the current level set.&#13;&#10;This sets the current context to the level given. This affects the&#13;&#10;context used for several other functions (e.g. vars). The possible&#13;&#10;levels are those shown by trace.&#13;&#10;]],&#13;&#10;&#13;&#10;vars    = [[&#13;&#10;vars [depth]        -- list context locals to depth, omitted=1|&#13;&#10;&#13;&#10;If depth is omitted then uses 1.&#13;&#10;Use a depth of 0 for the maximum.&#13;&#10;Lists all non-nil local variables and all non-nil upvalues in the&#13;&#10;currently set context. For variables that are tables, lists all fields&#13;&#10;to the given depth.&#13;&#10;]],&#13;&#10;&#13;&#10;fenv    = [[&#13;&#10;fenv [depth]        -- list context function env to depth, omitted=1|&#13;&#10;&#13;&#10;If depth is omitted then uses 1.&#13;&#10;Use a depth of 0 for the maximum.&#13;&#10;Lists all function environment variables in the currently set context.&#13;&#10;For variables that are tables, lists all fields to the given depth.&#13;&#10;]],&#13;&#10;&#13;&#10;glob    = [[&#13;&#10;glob [depth]        -- list globals to depth, omitted=1|&#13;&#10;&#13;&#10;If depth is omitted then uses 1.&#13;&#10;Use a depth of 0 for the maximum.&#13;&#10;Lists all global variables.&#13;&#10;For variables that are tables, lists all fields to the given depth.&#13;&#10;]],&#13;&#10;&#13;&#10;ups     = [[&#13;&#10;ups                 -- list all the upvalue names|&#13;&#10;&#13;&#10;These names will also be in the &quot;vars&quot; list unless their value is nil.&#13;&#10;This provides a means to identify which vars are upvalues and which are&#13;&#10;locals. If a name is both an upvalue and a local, the local value takes&#13;&#10;precedance.&#13;&#10;]],&#13;&#10;&#13;&#10;locs    = [[&#13;&#10;locs                -- list all the locals names|&#13;&#10;&#13;&#10;These names will also be in the &quot;vars&quot; list unless their value is nil.&#13;&#10;This provides a means to identify which vars are upvalues and which are&#13;&#10;locals. If a name is both an upvalue and a local, the local value takes&#13;&#10;precedance.&#13;&#10;]],&#13;&#10;&#13;&#10;dump    = [[&#13;&#10;dump &lt;var&gt; [depth]  -- dump all fields of variable to depth|&#13;&#10;&#13;&#10;If depth is omitted then uses 1.&#13;&#10;Use a depth of 0 for the maximum.&#13;&#10;Prints the value of &lt;var&gt; in the currently set context level. If &lt;var&gt;&#13;&#10;is a table, lists all fields to the given depth. &lt;var&gt; can be just a&#13;&#10;name, or name.field or name.# to any depth, e.g. t.1.f accesses field&#13;&#10;'f' in array element 1 in table 't'.&#13;&#10;&#13;&#10;Can also be called from a script as dump(var,depth).&#13;&#10;]],&#13;&#10;&#13;&#10;tron    = [[&#13;&#10;tron [crl]          -- turn trace on for (c)alls, (r)etuns, (l)lines|&#13;&#10;&#13;&#10;If no parameter is given then tracing is turned off.&#13;&#10;When tracing is turned on a line is printed to the console for each&#13;&#10;debug 'event' selected. c=function calls, r=function returns, l=lines.&#13;&#10;]],&#13;&#10;&#13;&#10;trace   = [[&#13;&#10;trace               -- dumps a stack trace|&#13;&#10;&#13;&#10;Format is [level] = file,line,name&#13;&#10;The level is a candidate for use by the 'set' command.&#13;&#10;]],&#13;&#10;&#13;&#10;info    = [[&#13;&#10;info                -- dumps the complete debug info captured|&#13;&#10;&#13;&#10;Only useful as a diagnostic aid for the debugger itself. This information&#13;&#10;can be HUGE as it dumps all variables to the maximum depth, so be careful.&#13;&#10;]],&#13;&#10;&#13;&#10;show    = [[&#13;&#10;show line file X Y  -- show X lines before and Y after line in file|&#13;&#10;&#13;&#10;If line is omitted or is '-' then the current set context line is used.&#13;&#10;If file is omitted or is '-' then the current set context file is used.&#13;&#10;If file is not fully qualified and cannot be opened as specified, then&#13;&#10;a search for the file in the package[path] is performed using the usual&#13;&#10;&quot;require&quot; searching rules. If no file extension is given, .lua is used.&#13;&#10;Prints the lines from the source file around the given line.&#13;&#10;]],&#13;&#10;&#13;&#10;exit    = [[&#13;&#10;exit                -- exits debugger, re-start it using pause()|&#13;&#10;]],&#13;&#10;&#13;&#10;help    = [[&#13;&#10;help [command]      -- show this list or help for command|&#13;&#10;]],&#13;&#10;&#13;&#10;[&quot;&lt;statement&gt;&quot;] = [[&#13;&#10;&lt;statement&gt;         -- execute a statement in the current context|&#13;&#10;&#13;&#10;The statement can be anything that is legal in the context, including&#13;&#10;assignments. Such assignments affect the context and will be in force&#13;&#10;immediately. Any results returned are printed. Use '=' as a short-hand&#13;&#10;for 'return', e.g. &quot;=func(arg)&quot; will call 'func' with 'arg' and print&#13;&#10;the results, and &quot;=var&quot; will just print the value of 'var'.&#13;&#10;]],&#13;&#10;&#13;&#10;what    = [[&#13;&#10;what &lt;func&gt;         -- show where &lt;func&gt; is defined (if known)|&#13;&#10;]],&#13;&#10;&#13;&#10;}&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{ Local function to get table size&#13;&#10;local function tsize(t)&#13;&#10;    local count=0&#13;&#10;&#13;&#10;    for k,v in pairs(t) do&#13;&#10;        count = count + 1&#13;&#10;    end&#13;&#10;&#13;&#10;    return count&#13;&#10;end&#13;&#10;---}}}&#13;&#10;&#13;&#10;---{{{ Global utility function to set breakpoints, used inside Ctrlr&#13;&#10;function setBreakpoint(line, file, shouldBeSet)&#13;&#10;    if not breakpoints[line] then&#13;&#10;        breakpoints[line] = {}&#13;&#10;    end&#13;&#10;&#13;&#10;    if shouldBeSet then&#13;&#10;        breakpoints[line][file] = true&#13;&#10;    else&#13;&#10;        breakpoints[line] = nil&#13;&#10;    end&#13;&#10;end&#13;&#10;---}}}&#13;&#10;&#13;&#10;&#13;&#10;--{{{  local function getinfo(level,field)&#13;&#10;&#13;&#10;--like debug.getinfo but copes with no activation record at the given level&#13;&#10;--and knows how to get 'field'. 'field' can be the name of any of the&#13;&#10;--activation record fields or any of the 'what' names or nil for everything.&#13;&#10;--only valid when using the stack level to get info, not a function name.&#13;&#10;&#13;&#10;local function getinfo(level,field)&#13;&#10;  level = level + 1  --to get to the same relative level as the caller&#13;&#10;  if not field then return debug.getinfo(level) end&#13;&#10;  local what&#13;&#10;  if field == 'name' or field == 'namewhat' then&#13;&#10;    what = 'n'&#13;&#10;  elseif field == 'what' or field == 'source' or field == 'linedefined' or field == 'lastlinedefined' or field == 'short_src' then&#13;&#10;    what = 'S'&#13;&#10;  elseif field == 'currentline' then&#13;&#10;    what = 'l'&#13;&#10;  elseif field == 'nups' then&#13;&#10;    what = 'u'&#13;&#10;  elseif field == 'func' then&#13;&#10;    what = 'f'&#13;&#10;  else&#13;&#10;    return debug.getinfo(level,field)&#13;&#10;  end&#13;&#10;  local ar = debug.getinfo(level,what)&#13;&#10;  if ar then return ar[field] else return nil end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function indented( level, ... )&#13;&#10;&#13;&#10;local function indented( level, ... )&#13;&#10;  ctrlrDebugger:write( string.format (&quot;%s%s\n&quot;, string.rep('  ',level), table.concat({...}) ))&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function dumpval( level, name, value, limit )&#13;&#10;&#13;&#10;local dumpvisited&#13;&#10;&#13;&#10;local function dumpval( level, name, value, limit )&#13;&#10;    local index&#13;&#10;&#13;&#10;    if type(name) == 'number' then&#13;&#10;        index = string.format(&quot;%q,&quot;,name)&#13;&#10;    elseif type(name) == 'string' and (name == '__VARSLEVEL__' or name == '__ENVIRONMENT__' or name == '__GLOBALS__' or name == '__UPVALUES__' or name == '__LOCALS__') then&#13;&#10;        --ignore these, they are debugger generated&#13;&#10;        return&#13;&#10;    elseif type(name) == 'string' and string.find(name,'&#94;[_%a][_.%w]*$') then&#13;&#10;        index = string.format (&quot;%q: &quot;, name);&#13;&#10;    else&#13;&#10;        index = string.format (&quot;%q,&quot;, tostring(name))&#13;&#10;    end&#13;&#10;&#13;&#10;    if type(value) == 'table' then&#13;&#10;        if dumpvisited[value] then&#13;&#10;            indented (level, index, string.format(&quot;%q&quot;, dumpvisited[value]))&#13;&#10;        else&#13;&#10;            dumpvisited[value] = string.format (&quot;\&quot;table\&quot;: \&quot;%d\&quot;,&quot;, tsize (value))&#13;&#10;            if (limit or 0) &gt; 0 and level+1 &gt;= limit then&#13;&#10;                indented (level, index, string.format (&quot;{%s&quot;, string.gsub(dumpvisited[value], &quot;,&quot;, &quot;},&quot;)))&#13;&#10;            else&#13;&#10;                indented (level, index, &quot;{\n&quot;, dumpvisited[value])&#13;&#10;&#13;&#10;                for n,v in pairs(value) do&#13;&#10;                    dumpval (level+1, n, v, limit)&#13;&#10;                end&#13;&#10;&#13;&#10;                indented (level, &quot;}&quot;)&#13;&#10;            end&#13;&#10;        end&#13;&#10;    else&#13;&#10;        if type(value) == 'string' then&#13;&#10;            indented (level, index, string.format(&quot;{\&quot;string\&quot;: %q}&quot;,value), ',')&#13;&#10;        end&#13;&#10;&#13;&#10;        if type(value) == 'userdata' then&#13;&#10;            info = class_info (value)&#13;&#10;            indented (level, index, string.format (&quot;{\&quot;userdata\&quot;: %q}&quot;, info.name) , ',')&#13;&#10;        end&#13;&#10;&#13;&#10;        if type(value) == 'number' then&#13;&#10;            indented (level, index, string.format (&quot;{\&quot;number\&quot;: %q}&quot;,tostring(value)), ',')&#13;&#10;        end&#13;&#10;    end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function dumpvar( value, limit, name )&#13;&#10;&#13;&#10;local function dumpvar( value, limit, name )&#13;&#10;  ctrlrDebugger:write (&quot;\n::start dumpvar\n&quot;)&#13;&#10;  dumpvisited = {}&#13;&#10;  dumpval( 0, name or tostring(value), value, limit )&#13;&#10;  ctrlrDebugger:write (&quot;::end\n&quot;)&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function show(file,line,before,after)&#13;&#10;&#13;&#10;--show +/-N lines of a file around line M&#13;&#10;&#13;&#10;local function show(file,line,before,after)&#13;&#10;&#13;&#10;  line   = tonumber(line   or 1)&#13;&#10;  before = tonumber(before or 10)&#13;&#10;  after  = tonumber(after  or before)&#13;&#10;&#13;&#10;  if not string.find(file,'%.') then file = file..'.lua' end&#13;&#10;&#13;&#10;  local f = io.open(file,'r')&#13;&#10;  if not f then&#13;&#10;    --{{{  try to find the file in the path&#13;&#10;&#13;&#10;    --&#13;&#10;    -- looks for a file in the package path&#13;&#10;    --&#13;&#10;    local path = package.path or LUA_PATH or ''&#13;&#10;    for c in string.gmatch (path, &quot;[&#94;;]+&quot;) do&#13;&#10;      local c = string.gsub (c, &quot;%?%.lua&quot;, file)&#13;&#10;      f = io.open (c,'r')&#13;&#10;      if f then&#13;&#10;        break&#13;&#10;      end&#13;&#10;    end&#13;&#10;&#13;&#10;    --}}}&#13;&#10;    if not f then&#13;&#10;      ctrlrDebugger:write('Cannot find '..file..'\n')&#13;&#10;      return&#13;&#10;    end&#13;&#10;  end&#13;&#10;&#13;&#10;  local i = 0&#13;&#10;  for l in f:lines() do&#13;&#10;    i = i + 1&#13;&#10;    if i &gt;= (line-before) then&#13;&#10;      if i &gt; (line+after) then break end&#13;&#10;      if i == line then&#13;&#10;        ctrlrDebugger:write(i..'***\t'..l..'\n')&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(i..'\t'..l..'\n')&#13;&#10;      end&#13;&#10;    end&#13;&#10;  end&#13;&#10;&#13;&#10;  f:close()&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function tracestack(l)&#13;&#10;&#13;&#10;local function gi( i )&#13;&#10;  return function() i=i+1 return debug.getinfo(i),i end&#13;&#10;end&#13;&#10;&#13;&#10;local function gl( level, j )&#13;&#10;  return function() j=j+1 return debug.getlocal( level, j ) end&#13;&#10;end&#13;&#10;&#13;&#10;local function gu( func, k )&#13;&#10;  return function() k=k+1 return debug.getupvalue( func, k ) end&#13;&#10;end&#13;&#10;&#13;&#10;local  traceinfo&#13;&#10;&#13;&#10;local function tracestack(l)&#13;&#10;  local l = l + 1                        --NB: +1 to get level relative to caller&#13;&#10;  traceinfo = {}&#13;&#10;  traceinfo.pausemsg = pausemsg&#13;&#10;  for ar,i in gi(l) do&#13;&#10;    table.insert( traceinfo, ar )&#13;&#10;    if ar.what ~= 'C' then&#13;&#10;      local names  = {}&#13;&#10;      local values = {}&#13;&#10;      for n,v in gl(i,0) do&#13;&#10;        if string.sub(n,1,1) ~= '(' then   --ignore internal control variables&#13;&#10;          table.insert( names, n )&#13;&#10;          table.insert( values, v )&#13;&#10;        end&#13;&#10;      end&#13;&#10;      if #names &gt; 0 then&#13;&#10;        ar.lnames  = names&#13;&#10;        ar.lvalues = values&#13;&#10;      end&#13;&#10;    end&#13;&#10;    if ar.func then&#13;&#10;      local names  = {}&#13;&#10;      local values = {}&#13;&#10;      for n,v in gu(ar.func,0) do&#13;&#10;        if string.sub(n,1,1) ~= '(' then   --ignore internal control variables&#13;&#10;          table.insert( names, n )&#13;&#10;          table.insert( values, v )&#13;&#10;        end&#13;&#10;      end&#13;&#10;      if #names &gt; 0 then&#13;&#10;        ar.unames  = names&#13;&#10;        ar.uvalues = values&#13;&#10;      end&#13;&#10;    end&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function trace()&#13;&#10;&#13;&#10;local function trace(set)&#13;&#10;  ctrlrDebugger:write (&quot;\n::start trace\n&quot;)&#13;&#10;  local mark&#13;&#10;  for level,ar in ipairs(traceinfo) do&#13;&#10;    if level == set then&#13;&#10;      mark = '***'&#13;&#10;    else&#13;&#10;      mark = ''&#13;&#10;    end&#13;&#10;    ctrlrDebugger:write('['..level..']'..mark..'\t'..(ar.name or ar.what)..' in '..ar.short_src..':'..ar.currentline..'\n')&#13;&#10;  end&#13;&#10;&#13;&#10;  ctrlrDebugger:write (&quot;::end\n&quot;)&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function info()&#13;&#10;&#13;&#10;local function info()&#13;&#10;    dumpvar( traceinfo, 0, 'traceinfo' )&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{  local function set_breakpoint(file, line, once)&#13;&#10;&#13;&#10;local function set_breakpoint(file, line, once)&#13;&#10;  if not breakpoints[line] then&#13;&#10;    breakpoints[line] = {}&#13;&#10;  end&#13;&#10;  if once then&#13;&#10;    breakpoints[line][file] = 1&#13;&#10;  else&#13;&#10;    breakpoints[line][file] = true&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function remove_breakpoint(file, line)&#13;&#10;&#13;&#10;local function remove_breakpoint(file, line)&#13;&#10;  if breakpoints[line] then&#13;&#10;    breakpoints[line][file] = nil&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function has_breakpoint(file, line)&#13;&#10;&#13;&#10;--allow for 'sloppy' file names&#13;&#10;--search for file and all variations walking up its directory hierachy&#13;&#10;--ditto for the file with no extension&#13;&#10;--a breakpoint can be permenant or once only, if once only its removed&#13;&#10;--after detection here, these are used for temporary breakpoints in the&#13;&#10;--debugger loop when executing the 'gotoo' command&#13;&#10;--a breakpoint on line 0 of a file means any line in that file&#13;&#10;&#13;&#10;local function has_breakpoint(file, line)&#13;&#10;  local isLine = breakpoints[line]&#13;&#10;  local isZero = breakpoints[0]&#13;&#10;  if not isLine and not isZero then return false end&#13;&#10;  local noext = string.gsub(file,&quot;(%..-)$&quot;,'',1)&#13;&#10;  if noext == file then noext = nil end&#13;&#10;  while file do&#13;&#10;    if isLine and isLine[file] then&#13;&#10;      if isLine[file] == 1 then isLine[file] = nil end&#13;&#10;      return true&#13;&#10;    end&#13;&#10;    if isZero and isZero[file] then&#13;&#10;      if isZero[file] == 1 then isZero[file] = nil end&#13;&#10;      return true&#13;&#10;    end&#13;&#10;    if IsWindows then&#13;&#10;      file = string.match(file,&quot;[:/\\](.+)$&quot;)&#13;&#10;    else&#13;&#10;      file = string.match(file,&quot;[:/](.+)$&quot;)&#13;&#10;    end&#13;&#10;  end&#13;&#10;  while noext do&#13;&#10;    if isLine and isLine[noext] then&#13;&#10;      if isLine[noext] == 1 then isLine[noext] = nil end&#13;&#10;      return true&#13;&#10;    end&#13;&#10;    if isZero and isZero[noext] then&#13;&#10;      if isZero[noext] == 1 then isZero[noext] = nil end&#13;&#10;      return true&#13;&#10;    end&#13;&#10;    if IsWindows then&#13;&#10;      noext = string.match(noext,&quot;[:/\\](.+)$&quot;)&#13;&#10;    else&#13;&#10;      noext = string.match(noext,&quot;[:/](.+)$&quot;)&#13;&#10;    end&#13;&#10;  end&#13;&#10;  return false&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function capture_vars(ref,level,line)&#13;&#10;&#13;&#10;local function capture_vars(ref,level,line)&#13;&#10;  --get vars, file and line for the given level relative to debug_hook offset by ref&#13;&#10;&#13;&#10;  local lvl = ref + level                --NB: This includes an offset of +1 for the call to here&#13;&#10;&#13;&#10;  --{{{  capture variables&#13;&#10;&#13;&#10;  local ar = debug.getinfo(lvl, &quot;f&quot;)&#13;&#10;  if not ar then return {},'?',0 end&#13;&#10;&#13;&#10;  local vars = {__UPVALUES__={}, __LOCALS__={}}&#13;&#10;  local i&#13;&#10;&#13;&#10;  local func = ar.func&#13;&#10;  if func then&#13;&#10;    i = 1&#13;&#10;    while true do&#13;&#10;      local name, value = debug.getupvalue(func, i)&#13;&#10;      if not name then break end&#13;&#10;      if string.sub(name,1,1) ~= '(' then  --NB: ignoring internal control variables&#13;&#10;        vars[name] = value&#13;&#10;        vars.__UPVALUES__[i] = name&#13;&#10;      end&#13;&#10;      i = i + 1&#13;&#10;    end&#13;&#10;    vars.__ENVIRONMENT__ = getfenv(func)&#13;&#10;  end&#13;&#10;&#13;&#10;  vars.__GLOBALS__ = getfenv(0)&#13;&#10;&#13;&#10;  i = 1&#13;&#10;  while true do&#13;&#10;    local name, value = debug.getlocal(lvl, i)&#13;&#10;    if not name then break end&#13;&#10;    if string.sub(name,1,1) ~= '(' then    --NB: ignoring internal control variables&#13;&#10;      vars[name] = value&#13;&#10;      vars.__LOCALS__[i] = name&#13;&#10;    end&#13;&#10;    i = i + 1&#13;&#10;  end&#13;&#10;&#13;&#10;  vars.__VARSLEVEL__ = level&#13;&#10;&#13;&#10;  if func then&#13;&#10;    --NB: Do not do this until finished filling the vars table&#13;&#10;    setmetatable(vars, { __index = getfenv(func), __newindex = getfenv(func) })&#13;&#10;  end&#13;&#10;&#13;&#10;  --NB: Do not read or write the vars table anymore else the metatable functions will get invoked!&#13;&#10;&#13;&#10;  --}}}&#13;&#10;&#13;&#10;  local file = getinfo(lvl, &quot;source&quot;)&#13;&#10;  if string.find(file, &quot;@&quot;) == 1 then&#13;&#10;    file = string.sub(file, 2)&#13;&#10;  end&#13;&#10;  if IsWindows then file = string.lower(file) end&#13;&#10;&#13;&#10;  if not line then&#13;&#10;    line = getinfo(lvl, &quot;currentline&quot;)&#13;&#10;  end&#13;&#10;&#13;&#10;  return vars,file,line&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function restore_vars(ref,vars)&#13;&#10;&#13;&#10;local function restore_vars(ref,vars)&#13;&#10;&#13;&#10;  if type(vars) ~= 'table' then return end&#13;&#10;&#13;&#10;  local level = vars.__VARSLEVEL__       --NB: This level is relative to debug_hook offset by ref&#13;&#10;  if not level then return end&#13;&#10;&#13;&#10;  level = level + ref                    --NB: This includes an offset of +1 for the call to here&#13;&#10;&#13;&#10;  local i&#13;&#10;  local written_vars = {}&#13;&#10;&#13;&#10;  i = 1&#13;&#10;  while true do&#13;&#10;    local name, value = debug.getlocal(level, i)&#13;&#10;    if not name then break end&#13;&#10;    if vars[name] and string.sub(name,1,1) ~= '(' then     --NB: ignoring internal control variables&#13;&#10;      debug.setlocal(level, i, vars[name])&#13;&#10;      written_vars[name] = true&#13;&#10;    end&#13;&#10;    i = i + 1&#13;&#10;  end&#13;&#10;&#13;&#10;  local ar = debug.getinfo(level, &quot;f&quot;)&#13;&#10;  if not ar then return end&#13;&#10;&#13;&#10;  local func = ar.func&#13;&#10;  if func then&#13;&#10;&#13;&#10;    i = 1&#13;&#10;    while true do&#13;&#10;      local name, value = debug.getupvalue(func, i)&#13;&#10;      if not name then break end&#13;&#10;      if vars[name] and string.sub(name,1,1) ~= '(' then   --NB: ignoring internal control variables&#13;&#10;        if not written_vars[name] then&#13;&#10;          debug.setupvalue(func, i, vars[name])&#13;&#10;        end&#13;&#10;        written_vars[name] = true&#13;&#10;      end&#13;&#10;      i = i + 1&#13;&#10;    end&#13;&#10;&#13;&#10;  end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function trace_event(event, line, level)&#13;&#10;&#13;&#10;local function print_trace(level,depth,event,file,line,name)&#13;&#10;&#13;&#10;  --NB: level here is relative to the caller of trace_event, so offset by 2 to get to there&#13;&#10;  level = level + 2&#13;&#10;&#13;&#10;  local file = file or getinfo(level,'short_src')&#13;&#10;  local line = line or getinfo(level,'currentline')&#13;&#10;  local name = name or getinfo(level,'name')&#13;&#10;&#13;&#10;  local prefix = ''&#13;&#10;  if current_thread ~= 'main' then prefix = '['..tostring(current_thread)..'] ' end&#13;&#10;&#13;&#10;  ctrlrDebugger:write(prefix..&#13;&#10;           string.format('%08.2f:%02i.',os.clock(),depth)..&#13;&#10;           string.rep('.',depth%32)..&#13;&#10;           (file or '')..' ('..(line or '')..') '..&#13;&#10;           (name or '')..&#13;&#10;           ' ('..event..')\n')&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;local function trace_event(event, line, level)&#13;&#10;&#13;&#10;  if event == 'return' and trace_returns then&#13;&#10;    --note the line info for later&#13;&#10;    ret_file = getinfo(level+1,'short_src')&#13;&#10;    ret_line = getinfo(level+1,'currentline')&#13;&#10;    ret_name = getinfo(level+1,'name')&#13;&#10;  end&#13;&#10;&#13;&#10;  if event ~= 'line' then return end&#13;&#10;&#13;&#10;  local slevel = stack_level[current_thread]&#13;&#10;  local tlevel = trace_level[current_thread]&#13;&#10;&#13;&#10;  if trace_calls and slevel &gt; tlevel then&#13;&#10;    --we are now in the function called, so look back 1 level further to find the calling file and line&#13;&#10;    print_trace(level+1,slevel-1,'c',nil,nil,getinfo(level+1,'name'))&#13;&#10;  end&#13;&#10;&#13;&#10;  if trace_returns and slevel &lt; tlevel then&#13;&#10;    print_trace(level,slevel,'r',ret_file,ret_line,ret_name)&#13;&#10;  end&#13;&#10;&#13;&#10;  if trace_lines then&#13;&#10;    print_trace(level,slevel,'l')&#13;&#10;  end&#13;&#10;&#13;&#10;  trace_level[current_thread] = stack_level[current_thread]&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function report(ev, vars, file, line, idx_watch)&#13;&#10;&#13;&#10;local function report(ev, vars, file, line, idx_watch)&#13;&#10;  local vars = vars or {}&#13;&#10;  local file = file or '?'&#13;&#10;  local line = line or 0&#13;&#10;  local prefix = ''&#13;&#10;  if current_thread ~= 'main' then prefix = '['..tostring(current_thread)..'] ' end&#13;&#10;  if ev == events.STEP then&#13;&#10;    ctrlrDebugger:write(prefix..&quot;Paused at file &quot;..file..&quot; line &quot;..line..' ('..stack_level[current_thread]..')\n')&#13;&#10;  elseif ev == events.BREAK then&#13;&#10;    ctrlrDebugger:write(prefix..&quot;Paused at file &quot;..file..&quot; line &quot;..line..' ('..stack_level[current_thread]..') (breakpoint)\n')&#13;&#10;  elseif ev == events.WATCH then&#13;&#10;    ctrlrDebugger:write(prefix..&quot;Paused at file &quot;..file..&quot; line &quot;..line..' ('..stack_level[current_thread]..')'..&quot; (watch expression &quot;..idx_watch.. &quot;: [&quot;..watches[idx_watch].exp..&quot;])\n&quot;)&#13;&#10;  elseif ev == events.SET then&#13;&#10;    --do nothing&#13;&#10;  else&#13;&#10;    ctrlrDebugger:write(prefix..&quot;Error in application: &quot;..file..&quot; line &quot;..line..&quot;\n&quot;)&#13;&#10;  end&#13;&#10;  if ev ~= events.SET then&#13;&#10;    if pausemsg and pausemsg ~= '' then ctrlrDebugger:write('Message: '..pausemsg..'\n') end&#13;&#10;    pausemsg = ''&#13;&#10;  end&#13;&#10;  return vars, file, line&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{  local function debugger_loop(ev, vars, file, line, idx_watch)&#13;&#10;&#13;&#10;local function debugger_loop(ev, vars, file, line, idx_watch)&#13;&#10;&#13;&#10;  local eval_env  = vars or {}&#13;&#10;  local breakfile = file or '?'&#13;&#10;  local breakline = line or 0&#13;&#10;&#13;&#10;  local command, args&#13;&#10;&#13;&#10;  --{{{  local function getargs(spec)&#13;&#10;&#13;&#10;  --get command arguments according to the given spec from the args string&#13;&#10;  --the spec has a single character for each argument, arguments are separated&#13;&#10;  --by white space, the spec characters can be one of:&#13;&#10;  -- F for a filename    (defaults to breakfile if - given in args)&#13;&#10;  -- L for a line number (defaults to breakline if - given in args)&#13;&#10;  -- N for a number&#13;&#10;  -- V for a variable name&#13;&#10;  -- S for a string&#13;&#10;&#13;&#10;  local function getargs(spec)&#13;&#10;    local res={}&#13;&#10;    local char,arg&#13;&#10;    local ptr=1&#13;&#10;    for i=1,string.len(spec) do&#13;&#10;      char = string.sub(spec,i,i)&#13;&#10;      if     char == 'F' then&#13;&#10;        _,ptr,arg = string.find(args..' ',&quot;%s*([%w%p]*)%s*&quot;,ptr)&#13;&#10;        if not arg or arg == '' then arg = '-' end&#13;&#10;        if arg == '-' then arg = breakfile end&#13;&#10;      elseif char == 'L' then&#13;&#10;        _,ptr,arg = string.find(args..' ',&quot;%s*([%w%p]*)%s*&quot;,ptr)&#13;&#10;        if not arg or arg == '' then arg = '-' end&#13;&#10;        if arg == '-' then arg = breakline end&#13;&#10;        arg = tonumber(arg) or 0&#13;&#10;      elseif char == 'N' then&#13;&#10;        _,ptr,arg = string.find(args..' ',&quot;%s*([%w%p]*)%s*&quot;,ptr)&#13;&#10;        if not arg or arg == '' then arg = '0' end&#13;&#10;        arg = tonumber(arg) or 0&#13;&#10;      elseif char == 'V' then&#13;&#10;        _,ptr,arg = string.find(args..' ',&quot;%s*([%w%p]*)%s*&quot;,ptr)&#13;&#10;        if not arg or arg == '' then arg = '' end&#13;&#10;      elseif char == 'S' then&#13;&#10;        _,ptr,arg = string.find(args..' ',&quot;%s*([%w%p]*)%s*&quot;,ptr)&#13;&#10;        if not arg or arg == '' then arg = '' end&#13;&#10;      else&#13;&#10;        arg = ''&#13;&#10;      end&#13;&#10;      table.insert(res,arg or '')&#13;&#10;    end&#13;&#10;    return unpack(res)&#13;&#10;  end&#13;&#10;&#13;&#10;  --}}}&#13;&#10;&#13;&#10;  while true do&#13;&#10;    -- io.write(&quot;[DEBUG]&gt; &quot;)&#13;&#10;    ctrlrDebugger:write(&quot;[DEBUG]&gt; &quot;)&#13;&#10;    -- local line = io.read(&quot;*line&quot;)&#13;&#10;    local line = ctrlrDebugger:read()&#13;&#10;    if line == nil then ctrlrDebugger:write('\n'); line = 'exit' end&#13;&#10;&#13;&#10;    if string.find(line, &quot;&#94;[a-z]+&quot;) then&#13;&#10;      command = string.sub(line, string.find(line, &quot;&#94;[a-z]+&quot;))&#13;&#10;      args    = string.gsub(line,&quot;&#94;[a-z]+%s*&quot;,'',1)            --strip command off line&#13;&#10;    else&#13;&#10;      command = ''&#13;&#10;    end&#13;&#10;&#13;&#10;    if command == &quot;setb&quot; then&#13;&#10;      --{{{  set breakpoint&#13;&#10;&#13;&#10;      local line, filename  = getargs('LF')&#13;&#10;      if filename ~= '' and line ~= '' then&#13;&#10;        set_breakpoint(filename,line)&#13;&#10;        ctrlrDebugger:write(&quot;Breakpoint set in file &quot;..filename..' line '..line..'\n')&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;delb&quot; then&#13;&#10;      --{{{  delete breakpoint&#13;&#10;&#13;&#10;      local line, filename = getargs('LF')&#13;&#10;      if filename ~= '' and line ~= '' then&#13;&#10;        remove_breakpoint(filename, line)&#13;&#10;        ctrlrDebugger:write(&quot;Breakpoint deleted from file &quot;..filename..' line '..line..&quot;\n&quot;)&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;delallb&quot; then&#13;&#10;      --{{{  delete all breakpoints&#13;&#10;      breakpoints = {}&#13;&#10;      ctrlrDebugger:write('All breakpoints deleted\n')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;listb&quot; then&#13;&#10;      --{{{  list breakpoints&#13;&#10;      for i, v in pairs(breakpoints) do&#13;&#10;        for ii, vv in pairs(v) do&#13;&#10;          ctrlrDebugger:write(&quot;Break at: &quot;..i..' in '..ii..'\n')&#13;&#10;        end&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;setw&quot; then&#13;&#10;      --{{{  set watch expression&#13;&#10;&#13;&#10;      if args and args ~= '' then&#13;&#10;        local func = loadstring(&quot;return(&quot; .. args .. &quot;)&quot;)&#13;&#10;        local newidx = #watches + 1&#13;&#10;        watches[newidx] = {func = func, exp = args}&#13;&#10;        ctrlrDebugger:write(&quot;Set watch exp no. &quot; .. newidx..'\n')&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;delw&quot; then&#13;&#10;      --{{{  delete watch expression&#13;&#10;&#13;&#10;      local index = tonumber(args)&#13;&#10;      if index then&#13;&#10;        watches[index] = nil&#13;&#10;        ctrlrDebugger:write(&quot;Watch expression deleted\n&quot;)&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;delallw&quot; then&#13;&#10;      --{{{  delete all watch expressions&#13;&#10;      watches = {}&#13;&#10;      ctrlrDebugger:write('All watch expressions deleted\n')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;listw&quot; then&#13;&#10;      --{{{  list watch expressions&#13;&#10;      for i, v in pairs(watches) do&#13;&#10;        ctrlrDebugger:write(&quot;Watch exp. &quot; .. i .. &quot;: &quot; .. v.exp..'\n')&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;run&quot; then&#13;&#10;      --{{{  run until breakpoint&#13;&#10;      step_into = false&#13;&#10;      step_over = false&#13;&#10;      return 'cont'&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;step&quot; then&#13;&#10;      --{{{  step N lines (into functions)&#13;&#10;      local N = tonumber(args) or 1&#13;&#10;      step_over  = false&#13;&#10;      step_into  = true&#13;&#10;      step_lines = tonumber(N or 1)&#13;&#10;      return 'cont'&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;over&quot; then&#13;&#10;      --{{{  step N lines (over functions)&#13;&#10;      local N = tonumber(args) or 1&#13;&#10;      step_into  = false&#13;&#10;      step_over  = true&#13;&#10;      step_lines = tonumber(N or 1)&#13;&#10;      step_level[current_thread] = stack_level[current_thread]&#13;&#10;      return 'cont'&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;out&quot; then&#13;&#10;      --{{{  step N lines (out of functions)&#13;&#10;      local N = tonumber(args) or 1&#13;&#10;      step_into  = false&#13;&#10;      step_over  = true&#13;&#10;      step_lines = 1&#13;&#10;      step_level[current_thread] = stack_level[current_thread] - tonumber(N or 1)&#13;&#10;      return 'cont'&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;gotoo&quot; then&#13;&#10;      --{{{  step until reach line&#13;&#10;      local line, filename = getargs('LF')&#13;&#10;      if line ~= '' then&#13;&#10;        step_over  = false&#13;&#10;        step_into  = false&#13;&#10;        if has_breakpoint(filename,line) then&#13;&#10;          return 'cont'&#13;&#10;        else&#13;&#10;          set_breakpoint(filename,line,true)&#13;&#10;          return 'cont'&#13;&#10;        end&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;set&quot; then&#13;&#10;      --{{{  set/show context level&#13;&#10;      local level = args&#13;&#10;      if level and level == '' then level = nil end&#13;&#10;      if level then return level end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;vars&quot; then&#13;&#10;      --{{{  list context variables&#13;&#10;      local depth = args&#13;&#10;      if depth and depth == '' then depth = nil end&#13;&#10;      depth = tonumber(depth) or 1&#13;&#10;      dumpvar(eval_env, depth+1, 'variables')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;glob&quot; then&#13;&#10;      --{{{  list global variables&#13;&#10;      local depth = args&#13;&#10;      if depth and depth == '' then depth = nil end&#13;&#10;      depth = tonumber(depth) or 1&#13;&#10;      dumpvar(eval_env.__GLOBALS__,depth+1,'globals')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;fenv&quot; then&#13;&#10;      --{{{  list function environment variables&#13;&#10;      local depth = args&#13;&#10;      if depth and depth == '' then depth = nil end&#13;&#10;      depth = tonumber(depth) or 1&#13;&#10;      dumpvar(eval_env.__ENVIRONMENT__,depth+1,'environment')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;ups&quot; then&#13;&#10;      --{{{  list upvalue names&#13;&#10;      dumpvar(eval_env.__UPVALUES__,2,'upvalues')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;locs&quot; then&#13;&#10;      --{{{  list locals names&#13;&#10;      dumpvar(eval_env.__LOCALS__,2,'upvalues')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;what&quot; then&#13;&#10;      --{{{  show where a function is defined&#13;&#10;      if args and args ~= '' then&#13;&#10;        local v = eval_env&#13;&#10;        local n = nil&#13;&#10;        for w in string.gmatch(args,&quot;[%w_]+&quot;) do&#13;&#10;          v = v[w]&#13;&#10;          if n then n = n..'.'..w else n = w end&#13;&#10;          if not v then break end&#13;&#10;        end&#13;&#10;        if type(v) == 'function' then&#13;&#10;          local def = debug.getinfo(v,'S')&#13;&#10;          if def then&#13;&#10;            ctrlrDebugger:write(def.what..' in '..def.short_src..' '..def.linedefined..'..'..def.lastlinedefined..'\n')&#13;&#10;          else&#13;&#10;            ctrlrDebugger:write('Cannot get info for '..v..'\n')&#13;&#10;          end&#13;&#10;        else&#13;&#10;          ctrlrDebugger:write(v..' is not a function\n')&#13;&#10;        end&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;dump&quot; then&#13;&#10;      --{{{  dump a variable&#13;&#10;      local name, depth = getargs('VN')&#13;&#10;      if name ~= '' then&#13;&#10;        if depth == '' or depth == 0 then depth = nil end&#13;&#10;        depth = tonumber(depth or 1)&#13;&#10;        local v = eval_env&#13;&#10;        local n = nil&#13;&#10;        for w in string.gmatch(name,&quot;[&#94;%.]+&quot;) do     --get everything between dots&#13;&#10;          if tonumber(w) then&#13;&#10;            v = v[tonumber(w)]&#13;&#10;          else&#13;&#10;            v = v[w]&#13;&#10;          end&#13;&#10;          if n then n = n..'.'..w else n = w end&#13;&#10;          if not v then break end&#13;&#10;        end&#13;&#10;        dumpvar(v,depth+1,n)&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write(&quot;Bad request\n&quot;)&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;show&quot; then&#13;&#10;      --{{{  show file around a line or the current breakpoint&#13;&#10;&#13;&#10;      local line, file, before, after = getargs('LFNN')&#13;&#10;      if before == 0 then before = 10     end&#13;&#10;      if after  == 0 then after  = before end&#13;&#10;&#13;&#10;      if file ~= '' and file ~= &quot;=stdin&quot; then&#13;&#10;        show(file,line,before,after)&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write('Nothing to show\n')&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;poff&quot; then&#13;&#10;      --{{{  turn pause command off&#13;&#10;      pause_off = true&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;pon&quot; then&#13;&#10;      --{{{  turn pause command on&#13;&#10;      pause_off = false&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;tron&quot; then&#13;&#10;      --{{{  turn tracing on/off&#13;&#10;      local option = getargs('S')&#13;&#10;      trace_calls   = false&#13;&#10;      trace_returns = false&#13;&#10;      trace_lines   = false&#13;&#10;      if string.find(option,'c') then trace_calls   = true end&#13;&#10;      if string.find(option,'r') then trace_returns = true end&#13;&#10;      if string.find(option,'l') then trace_lines   = true end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;trace&quot; then&#13;&#10;      --{{{  dump a stack trace&#13;&#10;      trace(eval_env.__VARSLEVEL__)&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;info&quot; then&#13;&#10;      --{{{  dump all debug info captured&#13;&#10;      info()&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;pause&quot; then&#13;&#10;      --{{{  not allowed in here&#13;&#10;      ctrlrDebugger:write('pause() should only be used in the script you are debugging\n')&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;help&quot; then&#13;&#10;      --{{{  help&#13;&#10;      local command = getargs('S')&#13;&#10;      if command ~= '' and hints[command] then&#13;&#10;        ctrlrDebugger:write(hints[command]..'\n')&#13;&#10;      else&#13;&#10;        for _,v in pairs(hints) do&#13;&#10;          local _,_,h = string.find(v,&quot;(.+)|&quot;)&#13;&#10;          ctrlrDebugger:write(h..'\n')&#13;&#10;        end&#13;&#10;      end&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif command == &quot;exit&quot; then&#13;&#10;      --{{{  exit debugger&#13;&#10;      return 'stop'&#13;&#10;      --}}}&#13;&#10;&#13;&#10;    elseif line ~= '' then&#13;&#10;      --{{{  just execute whatever it is in the current context&#13;&#10;&#13;&#10;      --map line starting with &quot;=...&quot; to &quot;return ...&quot;&#13;&#10;      if string.sub(line,1,1) == '=' then line = string.gsub(line,'=','return ',1) end&#13;&#10;&#13;&#10;      local ok, func = pcall(loadstring,line)&#13;&#10;      if func == nil then                             --Michael.Bringmann@lsi.com&#13;&#10;        ctrlrDebugger:write(&quot;Compile error: &quot;..line..'\n')&#13;&#10;      elseif not ok then&#13;&#10;        ctrlrDebugger:write(&quot;Compile error: &quot;..func..'\n')&#13;&#10;      else&#13;&#10;        setfenv(func, eval_env)&#13;&#10;        local res = {pcall(func)}&#13;&#10;        if res[1] then&#13;&#10;          if res[2] then&#13;&#10;            table.remove(res,1)&#13;&#10;            for _,v in ipairs(res) do&#13;&#10;              ctrlrDebugger:write(tostring(v))&#13;&#10;              ctrlrDebugger:write('\t')&#13;&#10;            end&#13;&#10;            ctrlrDebugger:write('\n')&#13;&#10;          end&#13;&#10;          --update in the context&#13;&#10;          return 0&#13;&#10;        else&#13;&#10;          ctrlrDebugger:write(&quot;Run error: &quot;..res[2]..'\n')&#13;&#10;        end&#13;&#10;      end&#13;&#10;&#13;&#10;      --}}}&#13;&#10;    end&#13;&#10;  end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  local function debug_hook(event, line, level, thread)&#13;&#10;&#13;&#10;local function debug_hook(event, line, level, thread)&#13;&#10;  if not started then debug.sethook(); coro_debugger = nil; return end&#13;&#10;  current_thread = thread or 'main'&#13;&#10;  local level = level or 2&#13;&#10;  trace_event(event,line,level)&#13;&#10;  if event == &quot;call&quot; then&#13;&#10;    stack_level[current_thread] = stack_level[current_thread] + 1&#13;&#10;  elseif event == &quot;return&quot; then&#13;&#10;    stack_level[current_thread] = stack_level[current_thread] - 1&#13;&#10;    if stack_level[current_thread] &lt; 0 then stack_level[current_thread] = 0 end&#13;&#10;  else&#13;&#10;    local vars,file,line = capture_vars(level,1,line)&#13;&#10;    local stop, ev, idx = false, events.STEP, 0&#13;&#10;    while true do&#13;&#10;      for index, value in pairs(watches) do&#13;&#10;        setfenv(value.func, vars)&#13;&#10;        local status, res = pcall(value.func)&#13;&#10;        if status and res then&#13;&#10;          ev, idx = events.WATCH, index&#13;&#10;          stop = true&#13;&#10;          break&#13;&#10;        end&#13;&#10;      end&#13;&#10;      if stop then break end&#13;&#10;      if (step_into)&#13;&#10;      or (step_over and (stack_level[current_thread] &lt;= step_level[current_thread] or stack_level[current_thread] == 0)) then&#13;&#10;        step_lines = step_lines - 1&#13;&#10;        if step_lines &lt; 1 then&#13;&#10;          ev, idx = events.STEP, 0&#13;&#10;          break&#13;&#10;        end&#13;&#10;      end&#13;&#10;      if has_breakpoint(file, line) then&#13;&#10;        ev, idx = events.BREAK, 0&#13;&#10;        break&#13;&#10;      end&#13;&#10;      return&#13;&#10;    end&#13;&#10;    if not coro_debugger then&#13;&#10;      ctrlrDebugger:write(&quot;Lua Debugger\n&quot;)&#13;&#10;      vars, file, line = report(ev, vars, file, line, idx)&#13;&#10;      ctrlrDebugger:write(&quot;Type 'help' for commands\n&quot;)&#13;&#10;      coro_debugger = true&#13;&#10;    else&#13;&#10;      vars, file, line = report(ev, vars, file, line, idx)&#13;&#10;    end&#13;&#10;    tracestack(level)&#13;&#10;    local last_next = 1&#13;&#10;    local next = 'ask'&#13;&#10;    local silent = false&#13;&#10;    while true do&#13;&#10;      if next == 'ask' then&#13;&#10;        next = debugger_loop(ev, vars, file, line, idx)&#13;&#10;      elseif next == 'cont' then&#13;&#10;        return&#13;&#10;      elseif next == 'stop' then&#13;&#10;        started = false&#13;&#10;        debug.sethook()&#13;&#10;        coro_debugger = nil&#13;&#10;        return&#13;&#10;      elseif tonumber(next) then --get vars for given level or last level&#13;&#10;        next = tonumber(next)&#13;&#10;        if next == 0 then silent = true; next = last_next else silent = false end&#13;&#10;        last_next = next&#13;&#10;        restore_vars(level,vars)&#13;&#10;        vars, file, line = capture_vars(level,next)&#13;&#10;        if not silent then&#13;&#10;          if vars and vars.__VARSLEVEL__ then&#13;&#10;            ctrlrDebugger:write('Level: '..vars.__VARSLEVEL__..'\n')&#13;&#10;          else&#13;&#10;            ctrlrDebugger:write('No level set\n')&#13;&#10;          end&#13;&#10;        end&#13;&#10;        ev = events.SET&#13;&#10;        next = 'ask'&#13;&#10;      else&#13;&#10;        ctrlrDebugger:write('Unknown command from debugger_loop: '..tostring(next)..'\n')&#13;&#10;        ctrlrDebugger:write('Stopping debugger\n')&#13;&#10;        next = 'stop'&#13;&#10;      end&#13;&#10;    end&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{  coroutine.create&#13;&#10;&#13;&#10;--This function overrides the built-in for the purposes of propagating&#13;&#10;--the debug hook settings from the creator into the created coroutine.&#13;&#10;&#13;&#10;_G.coroutine.create = function(f)&#13;&#10;  local thread&#13;&#10;  local hook, mask, count = debug.gethook()&#13;&#10;  if hook then&#13;&#10;    local function thread_hook(event,line)&#13;&#10;      hook(event,line,3,thread)&#13;&#10;    end&#13;&#10;    thread = cocreate(function(...)&#13;&#10;                        stack_level[thread] = 0&#13;&#10;                        trace_level[thread] = 0&#13;&#10;                        step_level [thread] = 0&#13;&#10;                        debug.sethook(thread_hook,mask,count)&#13;&#10;                        return f(...)&#13;&#10;                      end)&#13;&#10;    return thread&#13;&#10;  else&#13;&#10;    return cocreate(f)&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  coroutine.wrap&#13;&#10;&#13;&#10;--This function overrides the built-in for the purposes of propagating&#13;&#10;--the debug hook settings from the creator into the created coroutine.&#13;&#10;&#13;&#10;_G.coroutine.wrap = function(f)&#13;&#10;  local thread&#13;&#10;  local hook, mask, count = debug.gethook()&#13;&#10;  if hook then&#13;&#10;    local function thread_hook(event,line)&#13;&#10;      hook(event,line,3,thread)&#13;&#10;    end&#13;&#10;    thread = cowrap(function(...)&#13;&#10;                      stack_level[thread] = 0&#13;&#10;                      trace_level[thread] = 0&#13;&#10;                      step_level [thread] = 0&#13;&#10;                      debug.sethook(thread_hook,mask,count)&#13;&#10;                      return f(...)&#13;&#10;                    end)&#13;&#10;    return thread&#13;&#10;  else&#13;&#10;    return cowrap(f)&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;&#13;&#10;--{{{  function pause(x,l,f)&#13;&#10;&#13;&#10;--&#13;&#10;-- Starts/resumes a debug session&#13;&#10;--&#13;&#10;&#13;&#10;function pause(x,l,f)&#13;&#10;  if not f and pause_off then return end       --being told to ignore pauses&#13;&#10;  pausemsg = x or 'pause'&#13;&#10;  local lines&#13;&#10;  local src = getinfo(2,'short_src')&#13;&#10;  if l then&#13;&#10;    lines = l   --being told when to stop&#13;&#10;  elseif src == &quot;stdin&quot; then&#13;&#10;    lines = 1   --if in a console session, stop now&#13;&#10;  else&#13;&#10;    lines = 2   --if in a script, stop when get out of pause()&#13;&#10;  end&#13;&#10;  if started then&#13;&#10;    --we'll stop now 'cos the existing debug hook will grab us&#13;&#10;    step_lines = lines&#13;&#10;    step_into  = true&#13;&#10;    debug.sethook(debug_hook, &quot;crl&quot;)         --reset it in case some external agent fiddled with it&#13;&#10;  else&#13;&#10;    --set to stop when get out of pause()&#13;&#10;    trace_level[current_thread] = 0&#13;&#10;    step_level [current_thread] = 0&#13;&#10;    stack_level[current_thread] = 1&#13;&#10;    step_lines = lines&#13;&#10;    step_into  = true&#13;&#10;    started    = true&#13;&#10;    debug.sethook(debug_hook, &quot;crl&quot;)         --NB: this will cause an immediate entry to the debugger_loop&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  function dump(v,depth)&#13;&#10;&#13;&#10;--shows the value of the given variable, only really useful&#13;&#10;--when the variable is a table&#13;&#10;--see dump debug command hints for full semantics&#13;&#10;&#13;&#10;function dump(v,depth)&#13;&#10;  dumpvar(v,(depth or 1)+1,tostring(v))&#13;&#10;end&#13;&#10;&#13;&#10;--}}}&#13;&#10;--{{{  function debug.traceback(x)&#13;&#10;&#13;&#10;local _traceback = debug.traceback       --note original function&#13;&#10;&#13;&#10;--override standard function&#13;&#10;debug.traceback = function(x)&#13;&#10;  local assertmsg = _traceback(x)        --do original function&#13;&#10;  pause(x)                               --let user have a look at stuff&#13;&#10;  return assertmsg                       --carry on&#13;&#10;end&#13;&#10;&#13;&#10;_TRACEBACK = debug.traceback             --Lua 5.0 function&#13;&#10;&#13;&#10;--}}}"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000005"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="inspect" luaMethodCode="function getInspect()&#13;&#10;local inspect ={&#13;&#10;  _VERSION = 'inspect.lua 3.0.0',&#13;&#10;  _URL     = 'http://github.com/kikito/inspect.lua',&#13;&#10;  _DESCRIPTION = 'human-readable representations of tables',&#13;&#10;  _LICENSE = [[&#13;&#10;    MIT LICENSE&#13;&#10;&#13;&#10;    Copyright (c) 2013 Enrique Garc&#237;a Cota&#13;&#10;&#13;&#10;    Permission is hereby granted, free of charge, to any person obtaining a&#13;&#10;    copy of this software and associated documentation files (the&#13;&#10;    &quot;Software&quot;), to deal in the Software without restriction, including&#13;&#10;    without limitation the rights to use, copy, modify, merge, publish,&#13;&#10;    distribute, sublicense, and/or sell copies of the Software, and to&#13;&#10;    permit persons to whom the Software is furnished to do so, subject to&#13;&#10;    the following conditions:&#13;&#10;&#13;&#10;    The above copyright notice and this permission notice shall be included&#13;&#10;    in all copies or substantial portions of the Software.&#13;&#10;&#13;&#10;    THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS&#13;&#10;    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF&#13;&#10;    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.&#13;&#10;    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY&#13;&#10;    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,&#13;&#10;    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE&#13;&#10;    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&#13;&#10;  ]]&#13;&#10;}&#13;&#10;&#13;&#10;inspect.KEY       = setmetatable({}, {__tostring = function() return 'inspect.KEY' end})&#13;&#10;inspect.METATABLE = setmetatable({}, {__tostring = function() return 'inspect.METATABLE' end})&#13;&#10;&#13;&#10;-- Apostrophizes the string if it has quotes, but not aphostrophes&#13;&#10;-- Otherwise, it returns a regular quoted string&#13;&#10;local function smartQuote(str)&#13;&#10;  if str:match('&quot;') and not str:match(&quot;'&quot;) then&#13;&#10;    return &quot;'&quot; .. str .. &quot;'&quot;&#13;&#10;  end&#13;&#10;  return '&quot;' .. str:gsub('&quot;', '\\&quot;') .. '&quot;'&#13;&#10;end&#13;&#10;&#13;&#10;local controlCharsTranslation = {&#13;&#10;  [&quot;\a&quot;] = &quot;\\a&quot;,  [&quot;\b&quot;] = &quot;\\b&quot;, [&quot;\f&quot;] = &quot;\\f&quot;,  [&quot;\n&quot;] = &quot;\\n&quot;,&#13;&#10;  [&quot;\r&quot;] = &quot;\\r&quot;,  [&quot;\t&quot;] = &quot;\\t&quot;, [&quot;\v&quot;] = &quot;\\v&quot;&#13;&#10;}&#13;&#10;&#13;&#10;local function escape(str)&#13;&#10;  local result = str:gsub(&quot;\\&quot;, &quot;\\\\&quot;):gsub(&quot;(%c)&quot;, controlCharsTranslation)&#13;&#10;  return result&#13;&#10;end&#13;&#10;&#13;&#10;local function isIdentifier(str)&#13;&#10;  return type(str) == 'string' and str:match( &quot;&#94;[_%a][_%a%d]*$&quot; )&#13;&#10;end&#13;&#10;&#13;&#10;local function isSequenceKey(k, length)&#13;&#10;  return type(k) == 'number'&#13;&#10;     and 1 &lt;= k&#13;&#10;     and k &lt;= length&#13;&#10;     and math.floor(k) == k&#13;&#10;end&#13;&#10;&#13;&#10;local defaultTypeOrders = {&#13;&#10;  ['number']   = 1, ['boolean']  = 2, ['string'] = 3, ['table'] = 4,&#13;&#10;  ['function'] = 5, ['userdata'] = 6, ['thread'] = 7&#13;&#10;}&#13;&#10;&#13;&#10;local function sortKeys(a, b)&#13;&#10;  local ta, tb = type(a), type(b)&#13;&#10;&#13;&#10;  -- strings and numbers are sorted numerically/alphabetically&#13;&#10;  if ta == tb and (ta == 'string' or ta == 'number') then return a &lt; b end&#13;&#10;&#13;&#10;  local dta, dtb = defaultTypeOrders[ta], defaultTypeOrders[tb]&#13;&#10;  -- Two default types are compared according to the defaultTypeOrders table&#13;&#10;  if dta and dtb then return defaultTypeOrders[ta] &lt; defaultTypeOrders[tb]&#13;&#10;  elseif dta     then return true  -- default types before custom ones&#13;&#10;  elseif dtb     then return false -- custom types after default ones&#13;&#10;  end&#13;&#10;&#13;&#10;  -- custom types are sorted out alphabetically&#13;&#10;  return ta &lt; tb&#13;&#10;end&#13;&#10;&#13;&#10;local function getNonSequentialKeys(t)&#13;&#10;  local keys, length = {}, #t&#13;&#10;  for k,_ in pairs(t) do&#13;&#10;    if not isSequenceKey(k, length) then table.insert(keys, k) end&#13;&#10;  end&#13;&#10;  table.sort(keys, sortKeys)&#13;&#10;  return keys&#13;&#10;end&#13;&#10;&#13;&#10;local function getToStringResultSafely(t, mt)&#13;&#10;  local __tostring = type(mt) == 'table' and rawget(mt, '__tostring')&#13;&#10;  local str, ok&#13;&#10;  if type(__tostring) == 'function' then&#13;&#10;    ok, str = pcall(__tostring, t)&#13;&#10;    str = ok and str or 'error: ' .. tostring(str)&#13;&#10;  end&#13;&#10;  if type(str) == 'string' and #str &gt; 0 then return str end&#13;&#10;end&#13;&#10;&#13;&#10;local maxIdsMetaTable = {&#13;&#10;  __index = function(self, typeName)&#13;&#10;    rawset(self, typeName, 0)&#13;&#10;    return 0&#13;&#10;  end&#13;&#10;}&#13;&#10;&#13;&#10;local idsMetaTable = {&#13;&#10;  __index = function (self, typeName)&#13;&#10;    local col = setmetatable({}, {__mode = &quot;kv&quot;})&#13;&#10;    rawset(self, typeName, col)&#13;&#10;    return col&#13;&#10;  end&#13;&#10;}&#13;&#10;&#13;&#10;local function countTableAppearances(t, tableAppearances)&#13;&#10;  tableAppearances = tableAppearances or setmetatable({}, {__mode = &quot;k&quot;})&#13;&#10;&#13;&#10;  if type(t) == 'table' then&#13;&#10;    if not tableAppearances[t] then&#13;&#10;      tableAppearances[t] = 1&#13;&#10;      for k,v in pairs(t) do&#13;&#10;        countTableAppearances(k, tableAppearances)&#13;&#10;        countTableAppearances(v, tableAppearances)&#13;&#10;      end&#13;&#10;      countTableAppearances(getmetatable(t), tableAppearances)&#13;&#10;    else&#13;&#10;      tableAppearances[t] = tableAppearances[t] + 1&#13;&#10;    end&#13;&#10;  end&#13;&#10;&#13;&#10;  return tableAppearances&#13;&#10;end&#13;&#10;&#13;&#10;local copySequence = function(s)&#13;&#10;  local copy, len = {}, #s&#13;&#10;  for i=1, len do copy[i] = s[i] end&#13;&#10;  return copy, len&#13;&#10;end&#13;&#10;&#13;&#10;local function makePath(path, ...)&#13;&#10;  local keys = {...}&#13;&#10;  local newPath, len = copySequence(path)&#13;&#10;  for i=1, #keys do&#13;&#10;    newPath[len + i] = keys[i]&#13;&#10;  end&#13;&#10;  return newPath&#13;&#10;end&#13;&#10;&#13;&#10;local function processRecursive(process, item, path)&#13;&#10;  if item == nil then return nil end&#13;&#10;&#13;&#10;  local processed = process(item, path)&#13;&#10;  if type(processed) == 'table' then&#13;&#10;    local processedCopy = {}&#13;&#10;    local processedKey&#13;&#10;&#13;&#10;    for k,v in pairs(processed) do&#13;&#10;      processedKey = processRecursive(process, k, makePath(path, k, inspect.KEY))&#13;&#10;      if processedKey ~= nil then&#13;&#10;        processedCopy[processedKey] = processRecursive(process, v, makePath(path, processedKey))&#13;&#10;      end&#13;&#10;    end&#13;&#10;&#13;&#10;    local mt  = processRecursive(process, getmetatable(processed), makePath(path, inspect.METATABLE))&#13;&#10;    setmetatable(processedCopy, mt)&#13;&#10;    processed = processedCopy&#13;&#10;  end&#13;&#10;  return processed&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;-------------------------------------------------------------------&#13;&#10;&#13;&#10;local Inspector = {}&#13;&#10;local Inspector_mt = {__index = Inspector}&#13;&#10;&#13;&#10;function Inspector:puts(...)&#13;&#10;  local args   = {...}&#13;&#10;  local buffer = self.buffer&#13;&#10;  local len    = #buffer&#13;&#10;  for i=1, #args do&#13;&#10;    len = len + 1&#13;&#10;    buffer[len] = tostring(args[i])&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:down(f)&#13;&#10;  self.level = self.level + 1&#13;&#10;  f()&#13;&#10;  self.level = self.level - 1&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:tabify()&#13;&#10;  self:puts(self.newline, string.rep(self.indent, self.level))&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:alreadyVisited(v)&#13;&#10;  return self.ids[type(v)][v] ~= nil&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:getId(v)&#13;&#10;  local tv = type(v)&#13;&#10;  local id = self.ids[tv][v]&#13;&#10;  if not id then&#13;&#10;    id              = self.maxIds[tv] + 1&#13;&#10;    self.maxIds[tv] = id&#13;&#10;    self.ids[tv][v] = id&#13;&#10;  end&#13;&#10;  return id&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:putKey(k)&#13;&#10;  if isIdentifier(k) then return self:puts(k) end&#13;&#10;  self:puts(&quot;[&quot;)&#13;&#10;  self:putValue(k)&#13;&#10;  self:puts(&quot;]&quot;)&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:putTable(t)&#13;&#10;  if t == inspect.KEY or t == inspect.METATABLE then&#13;&#10;    self:puts(tostring(t))&#13;&#10;  elseif self:alreadyVisited(t) then&#13;&#10;    self:puts('&lt;table ', self:getId(t), '&gt;')&#13;&#10;  elseif self.level &gt;= self.depth then&#13;&#10;    self:puts('{...}')&#13;&#10;  else&#13;&#10;    if self.tableAppearances[t] &gt; 1 then self:puts('&lt;', self:getId(t), '&gt;') end&#13;&#10;&#13;&#10;    local nonSequentialKeys = getNonSequentialKeys(t)&#13;&#10;    local length            = #t&#13;&#10;    local mt                = getmetatable(t)&#13;&#10;    local toStringResult    = getToStringResultSafely(t, mt)&#13;&#10;&#13;&#10;    self:puts('{')&#13;&#10;    self:down(function()&#13;&#10;      if toStringResult then&#13;&#10;        self:puts(' -- ', escape(toStringResult))&#13;&#10;        if length &gt;= 1 then self:tabify() end&#13;&#10;      end&#13;&#10;&#13;&#10;      local count = 0&#13;&#10;      for i=1, length do&#13;&#10;        if count &gt; 0 then self:puts(',') end&#13;&#10;        self:puts(' ')&#13;&#10;        self:putValue(t[i])&#13;&#10;        count = count + 1&#13;&#10;      end&#13;&#10;&#13;&#10;      for _,k in ipairs(nonSequentialKeys) do&#13;&#10;        if count &gt; 0 then self:puts(',') end&#13;&#10;        self:tabify()&#13;&#10;        self:putKey(k)&#13;&#10;        self:puts(' = ')&#13;&#10;        self:putValue(t[k])&#13;&#10;        count = count + 1&#13;&#10;      end&#13;&#10;&#13;&#10;      if mt then&#13;&#10;        if count &gt; 0 then self:puts(',') end&#13;&#10;        self:tabify()&#13;&#10;        self:puts('&lt;metatable&gt; = ')&#13;&#10;        self:putValue(mt)&#13;&#10;      end&#13;&#10;    end)&#13;&#10;&#13;&#10;    if #nonSequentialKeys &gt; 0 or mt then -- result is multi-lined. Justify closing }&#13;&#10;      self:tabify()&#13;&#10;    elseif length &gt; 0 then -- array tables have one extra space before closing }&#13;&#10;      self:puts(' ')&#13;&#10;    end&#13;&#10;&#13;&#10;    self:puts('}')&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;function Inspector:putValue(v)&#13;&#10;  local tv = type(v)&#13;&#10;&#13;&#10;  if tv == 'string' then&#13;&#10;    self:puts(smartQuote(escape(v)))&#13;&#10;  elseif tv == 'number' or tv == 'boolean' or tv == 'nil' then&#13;&#10;    self:puts(tostring(v))&#13;&#10;  elseif tv == 'table' then&#13;&#10;    self:putTable(v)&#13;&#10;  else&#13;&#10;    self:puts('&lt;',tv,' ',self:getId(v),'&gt;')&#13;&#10;  end&#13;&#10;end&#13;&#10;&#13;&#10;-------------------------------------------------------------------&#13;&#10;&#13;&#10;function inspect.inspect(root, options)&#13;&#10;  options       = options or {}&#13;&#10;&#13;&#10;  local depth   = options.depth   or math.huge&#13;&#10;  local newline = options.newline or '\n'&#13;&#10;  local indent  = options.indent  or '  '&#13;&#10;  local process = options.process&#13;&#10;&#13;&#10;  if process then&#13;&#10;    root = processRecursive(process, root, {})&#13;&#10;  end&#13;&#10;&#13;&#10;  local inspector = setmetatable({&#13;&#10;    depth            = depth,&#13;&#10;    buffer           = {},&#13;&#10;    level            = 0,&#13;&#10;    ids              = setmetatable({}, idsMetaTable),&#13;&#10;    maxIds           = setmetatable({}, maxIdsMetaTable),&#13;&#10;    newline          = newline,&#13;&#10;    indent           = indent,&#13;&#10;    tableAppearances = countTableAppearances(root)&#13;&#10;  }, Inspector_mt)&#13;&#10;&#13;&#10;  inspector:putValue(root)&#13;&#10;&#13;&#10;  return table.concat(inspector.buffer)&#13;&#10;end&#13;&#10;&#13;&#10;setmetatable(inspect, { __call = function(_, ...) return inspect.inspect(...) end })&#13;&#10;&#13;&#10;return inspect&#13;&#10;end&#13;&#10;&#13;&#10;inspect = getInspect()"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000006"
                   luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="Dialog" uuid="d6043d12356447a795ff61fcf1fa6cab">
        <luaMethod luaMethodName="windowCallback" luaMethodCode="function windowCallback(result, window)&#10;&#9;window:setVisible (false)&#13;&#10;&#9;dl:setText(&quot;\n\nwindowCallback result=&quot;..result)&#13;&#10;&#13;&#10;&#9;comboBox = window:getComboBoxComponent(&quot;myCombo&quot;)&#13;&#10;&#9;if comboBox ~= nil then&#9;&#13;&#10;&#9;&#9;dl:append(&quot;\n\tcombo selectedId=&quot;..comboBox:getSelectedId())&#13;&#10;&#9;&#9;&#9;:append(&quot;\n\tcombo text: \&quot;&quot;..comboBox:getText())&#13;&#10;&#9;&#9;&#9;:append(&quot;\&quot;&quot;)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;textEditor = window:getTextEditor(&quot;myTextEditor&quot;)&#13;&#10;&#9;if textEditor ~= nil then&#9;&#13;&#10;&#9;&#9;dl:append(&quot;\n\ttextEditor contents:\n\&quot;&quot;)&#13;&#10;&#9;&#9;&#9;:append(textEditor:getText())&#13;&#10;&#9;&#9;&#9;:append(&quot;\&quot;&quot;)&#13;&#10;&#9;end&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="34394b3bfd854138adce6b03e86a57d3"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="finishedLoading" luaMethodCode="--&#13;-- Called when the panel has finished loading&#13;--&#13;finishedLoading = function()&#13;&#10;&#9;dl = panel:getLabel(&quot;debug&quot;)&#13;&#10;&#9;if dl ~= nil then&#13;&#10;&#9;&#9;dl:setText(&quot;Panel start\n&quot;)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;initLoadingStage(0)&#13;&#10;&#13;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="e2f6e9dedd86456b9bbff50280ea53fb"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="showWindowWithCombo" luaMethodCode="showWindowWithCombo = function()&#13;&#10;&#9;if panel:getBootstrapState() then&#13;&#10;&#9;&#9;console (&quot;showWindowWithCombo panel in bootstrap&quot;)&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;comboItems = StringArray()&#13;&#10;&#9;comboItems:add (&quot;Item 1&quot;)&#13;&#10;&#9;comboItems:add (&quot;Item 2&quot;)&#13;&#10;&#9;comboItems:add (&quot;Item 3&quot;)&#13;&#10;&#9;comboItems:add (&quot;Item 4&quot;)&#13;&#10;&#13;&#10;&#9;modalWindow = AlertWindow(&quot;Window title&quot;, &quot;A message for the user that will guide him what to do with the window&quot;, AlertWindow.InfoIcon)&#13;&#10;&#9;modalWindow:addButton(&quot;OK&quot;, 1, KeyPress(KeyPress.returnKey), KeyPress())&#13;&#10;&#9;modalWindow:addButton(&quot;Cancel&quot;, 0, KeyPress(KeyPress.escapeKey), KeyPress())&#13;&#10;&#9;modalWindow:addButton(&quot;Unknown&quot;, 2, KeyPress(), KeyPress())&#13;&#10;&#9;modalWindow:addComboBox (&quot;myCombo&quot;, comboItems, &quot;Combo&quot;)&#13;&#10;&#9;modalWindow:setModalHandler(windowCallback)&#13;&#10;&#9;&#9;&#13;&#10;&#9;--  Never let Lua delete this window (3rd parameter), enter modal state&#13;&#10;&#9;modalWindow:runModalLoop()&#13;end&#13;&#10;&#13;&#10;&#13;&#10;showWindowNoValidPreset = function(mod)&#13;&#10;&#9;if panel:getBootstrapState() then&#13;&#10;&#9;&#9;console (&quot;showWindowNoValidPreset panel in bootstrap&quot;)&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;modalWindow = AlertWindow(&quot;Fehler&quot;, mod:getProperty(&quot;name&quot;) .. &quot; muss mindestens einen Preset und einen 'dummy' (Custom) Eintrag besitzen!&quot;, AlertWindow.InfoIcon)&#13;&#10;&#9;modalWindow:addButton(&quot;OK&quot;, 1, KeyPress(KeyPress.returnKey), KeyPress())&#13;&#10;&#9;modalWindow:setModalHandler(windowCallback)&#13;&#10;&#9;&#9;&#13;&#10;&#9;--  Never let Lua delete this window (3rd parameter), enter modal state&#13;&#10;&#9;modalWindow:runModalLoop()&#13;end&#13;&#10;&#13;&#10;&#13;&#10;"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="d6dcfe1bd4f140f981857e619d1db014"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="showWindowWithBoolResult" luaMethodCode="showWindowWithBoolResult = function()&#13;&#10;&#9;if panel:getBootstrapState() then&#13;&#10;&#9;&#9;console (&quot;showWindowWithBoolResult panel in bootstrap&quot;)&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;ret = AlertWindow.showOkCancelBox(&#13;&#10;&#9;&#9;AlertWindow.QuestionIcon, &#13;&#10;&#9;&#9;&quot;Title&quot;,&#13;&#10;&#9;&#9;&quot;Message&quot;,&#13;&#10;&#9;&#9;&quot;OK&quot;,&#13;&#10;&#9;&#9;&quot;Froget it&quot;&#13;&#10;&#9;)&#13;&#10;&#13;&#10;&#9;--dl:setText(&quot;\n\nshowWindowWithBoolResult\n&quot;)&#13;&#10;&#9;--&#9;:append(&quot;\tbool result=&quot;)&#13;&#10;&#9;--&#9;:append(tostring(ret))&#13;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="772ac154377c4a7d95dda5d554121493"
                   luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="Efx" uuid="ed7605c6771d4fff8f97fd83ac9a69a2">
        <luaMethod luaMethodName="setEQPresetEfx" luaMethodCode="--&#13;&#10;-- Called when a modulator value changes&#13;&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;&#10;-- @value    new numeric value of the modulator&#13;&#10;--&#13;&#10;setEQPresetEfx = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#13;&#10;&#9;methodName = &quot;setEQPresetEfx&quot;&#13;&#10;&#9;if (loadingStage ~= nil) then &#13;&#10;&#9;&#9;if (loadingStage == getStateValueIgnoredAutomatedOnModChangeEvents()) then&#13;&#10;&#9;&#9;&#9;console (string.format(&quot;---------&gt;%s is in state: ignored automated onModChange Event == %s - stop Method&quot;, methodName, tostring(loadingCompleteFlag)))&#13;&#10;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;modName = mod:getProperty(&quot;name&quot;)&#13;&#10;&#9;&#13;&#10;&#9;efxNum = 0&#13;&#10;&#9;if (modName == &quot;Efx1_EQ_Preset&quot;) then&#13;&#10;&#9;&#9;efxNum = 1&#13;&#10;&#9;elseif (modName == &quot;Efx2_EQ_Preset&quot;) then&#13;&#10;&#9;&#9;efxNum = 2&#13;&#10;&#9;elseif (modName == &quot;Efx3_EQ_Preset&quot;) then&#13;&#10;&#9;&#9;efxNum = 3&#13;&#10;&#9;else&#13;&#10;&#9;&#9;console (string.format(&quot;setEQPresetEfx () executed from mod=%s, should not happen!&quot;, modName))&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;valueMapped = mod:getValueMapped()&#13;&#10;&#13;&#10;&#9;--console (&quot;modName == &quot; .. modName)&#13;&#10;&#9;--console (&quot;value == &quot; .. value)&#13;&#10;&#9;--console (&quot;valueMapped == &quot; .. valueMapped)&#13;&#10;&#13;&#10;&#9;validPreset = isPresetValid(mod, value)&#13;&#10;&#13;&#10;&#9;if validPreset == true then&#13;&#10;&#9;&#9;setEQPresetEfx_ (efxNum, valueMapped, true)&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- &lt;--- individuell&#13;&#10;&#9;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;1&quot;)&#9;&#9;&#9;&#9;&#9;&#9;-- not needed ? Component MIDI Implementation set to NONE&#13;&#10;&#9;&#9;mod:setModulatorValue(mod:getMaxNonMapped(),false,false,false)&#9;&#9;&#9;-- careful: endless loop LAST ITEM NEEDS MAPPED VALUE=99&#13;&#10;&#9;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;0&quot;)&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;setEQPresetEfx_ = function (efxNum, valueMapped, midiOutputEnabled)&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;setEQPresetEfx_ (efxNum=%d, valueMapped=%d, midiOutputEnabled=%s)&quot;, efxNum, valueMapped, tostring(midiOutputEnabled)))&#13;&#10;&#13;&#10;&#9;if(efxNum &lt; 1 and efxNum &gt; 3) then&#13;&#10;&#9;&#9;console (&quot;non valid efxNum, break setEQPresetEfx_&quot;)&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (midiOutputEnabled == true) then&#13;&#10;&#9;&#9;-- Built Message CC/SysEx&#13;&#10;&#9;&#9;nrpnHigh = 0x3a&#9;+ (efxNum-1)&#9;--&#9;EFX Modul 0x3a, 0x3b, 0x3c&#13;&#10;&#9;&#9;nrpnLow = 0x70&#9;&#9;&#9;&#9;&#9;--&#9;Insert MFX AMP-Model Presets &#13;&#10;&#9;&#9;data = valueMapped&#9;&#9;&#9;&#9;-- &#9;int value&#13;&#10;&#13;&#10;&#9;&#9;-- Send Message&#13;&#10;&#9;&#9;sendNRPNMessage (nrpnHigh, nrpnLow, data)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- disable Midi Messages&#13;&#10;&#13;&#10;&#9;-- Update UI (Slider = Parameter values)&#13;&#10;&#9;setEQPresetEfx_Parameters(efxNum, valueMapped, false)&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- &lt;--- individuell&#13;&#10;&#13;&#10;&#9;-- Set Combobox to Custom&#13;&#10;&#13;&#10;&#9;-- enable Midi Messages&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;setEQPresetEfx_Parameters = function (efxNum, valueMapped, midiOutputEnabled)&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;setEQPresetEfx_Parameters (efxNum=%d, valueMapped=%d, midiOutputEnabled=%s)&quot;, tonumber(efxNum,10), tonumber(valueMapped,10), tostring(midiOutputEnabled)))&#13;&#10;&#13;&#10;    panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;1&quot;)&#13;&#10;&#13;&#10;    --preset = panel : getModulatorByName(&quot;Efx%d_EQ_Preset&quot;):getModulatorValue()&#13;&#10;&#9;preset = valueMapped&#13;&#10;&#13;&#10;&#9;PresetValueModName = string.format(&quot;Efx%d_EQ_Preset_Value&quot;, efxNum)&#13;&#10;&#9;PresetValueMod = panel : getModulatorByName(PresetValueModName)&#13;&#10;&#9;PresetValueMod : setModulatorValue (preset, false, false, false)&#13;&#10;&#9;&#13;&#10;&#9;onOffButtonModName = string.format(&quot;Efx%d_EQ_On&quot;,efxNum)&#13;&#10;&#9;&#13;&#10;&#9;lowGainModName = string.format(&quot;Efx%d_EQ_LowGain&quot;,efxNum)&#13;&#10;&#9;lowMidGainModName = string.format(&quot;Efx%d_EQ_LowMidGain&quot;,efxNum)&#13;&#10;&#9;HighMidGainModName = string.format(&quot;Efx%d_EQ_HighMidGain&quot;,efxNum)&#13;&#10;&#9;HighGainModName = string.format(&quot;Efx%d_EQ_HighGain&quot;,efxNum)&#13;&#10;&#9;&#13;&#10;&#9;lowGainSliderModName = string.format(&quot;Efx%d_EQ_LowGain_Slider&quot;,efxNum)&#13;&#10;&#9;lowMidGainSliderModName = string.format(&quot;Efx%d_EQ_LowMidGain_Slider&quot;,efxNum)&#13;&#10;&#9;HighMidGainSliderModName = string.format(&quot;Efx%d_EQ_HighMidGain_Slider&quot;,efxNum)&#13;&#10;&#9;HighGainSliderModName = string.format(&quot;Efx%d_EQ_HighGain_Slider&quot;,efxNum)&#13;&#10;&#9;&#13;&#10;&#9;lowFreqModName = string.format(&quot;Efx%d_EQ_LowFreq&quot;,efxNum)&#13;&#10;&#9;lowMidFreqModName = string.format(&quot;Efx%d_EQ_LowMidFreq&quot;,efxNum)&#13;&#10;&#9;highMidFreqModName = string.format(&quot;Efx%d_EQ_HighMidFreq&quot;,efxNum)&#13;&#10;&#9;highFreqModName = string.format(&quot;Efx%d_EQ_HighFreq&quot;,efxNum)&#13;&#10;&#9;lowMidQModName = string.format(&quot;Efx%d_EQ_LowMidQ&quot;,efxNum)&#13;&#10;&#9;highMidQModName = string.format(&quot;Efx%d_EQ_HighMidQ&quot;,efxNum)&#13;&#10;&#9;&#13;&#10;&#9;onOffButton = panel : getModulatorByName(onOffButtonModName)&#13;&#10;&#9;&#13;&#10;    lowGain = panel : getModulatorByName(lowGainModName)&#13;&#10;    lowMidGain= panel : getModulatorByName(lowMidGainModName)&#13;&#10;    HighMidGain= panel : getModulatorByName(HighMidGainModName)&#13;&#10;    HighGain= panel : getModulatorByName(HighGainModName)&#13;&#10;&#13;&#10;    lowGainSlider = panel : getModulatorByName(lowGainSliderModName)&#13;&#10;    lowMidGainSlider= panel : getModulatorByName(lowMidGainSliderModName)&#13;&#10;    HighMidGainSlider= panel : getModulatorByName(HighMidGainSliderModName)&#13;&#10;    HighGainSlider= panel : getModulatorByName(HighGainSliderModName)&#13;&#10;&#13;&#10;    lowFreq= panel : getModulatorByName(lowFreqModName)&#13;&#10;    lowMidFreq= panel : getModulatorByName(lowMidFreqModName)&#13;&#10;    highMidFreq= panel : getModulatorByName(highMidFreqModName)&#13;&#10;    highFreq= panel : getModulatorByName(highFreqModName)&#13;&#10;    lowMidQ= panel : getModulatorByName(lowMidQModName)&#13;&#10;    highMidQ= panel : getModulatorByName(highMidQModName)&#13;&#10;&#13;&#10;&#9;-- update Label to current Preset Name &#13;&#10;&#9;PresetLabelModName = string.format(&quot;Efx%d_EQ_Current_Preset&quot;, efxNum)&#13;&#10;&#9;PresetListModName = string.format(&quot;Efx%d_EQ_Preset&quot;, efxNum)&#13;&#10;&#9;setEfxPresetLabel(PresetLabelModName, PresetListModName, valueMapped)&#13;&#10;&#13;&#10;    if (preset &gt;= 0) then&#13;&#10;    &#9;onOffButton:setModulatorValue((1), false, false, false)&#13;&#10;    end&#13;&#10;&#13;&#10;    if(preset==0)then&#13;&#10;    lowGain:setModulatorValue((64),false,false, false)&#13;&#10;    lowMidGain:setModulatorValue((64),false,false, false)&#13;&#10;    HighMidGain:setModulatorValue((64),false,false, false)&#13;&#10;    HighGain:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;    lowMidGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;    HighMidGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;    HighGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowFreq:setModulatorValue((40),false,false, false)&#13;&#10;    lowMidFreq:setModulatorValue((24),false,false, false)&#13;&#10;    highMidFreq:setModulatorValue((64),false,false, false)&#13;&#10;    highFreq:setModulatorValue((127),false,false, false)&#13;&#10;    lowMidQ:setModulatorValue((0),false,false, false)&#13;&#10;    highMidQ:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;&#13;&#10;    elseif(preset==1)then&#13;&#10;    lowGain:setModulatorValue((80),false,false, false)&#13;&#10;    lowMidGain:setModulatorValue((30),false,false, false)&#13;&#10;    HighMidGain:setModulatorValue((90),false,false, false)&#13;&#10;    HighGain:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowGainSlider:setModulatorValue((80),false,false, false)&#13;&#10;    lowMidGainSlider:setModulatorValue((30),false,false, false)&#13;&#10;    HighMidGainSlider:setModulatorValue((90),false,false, false)&#13;&#10;    HighGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowFreq:setModulatorValue((40),false,false, false)&#13;&#10;    lowMidFreq:setModulatorValue((20),false,false, false)&#13;&#10;    highMidFreq:setModulatorValue((50),false,false, false)&#13;&#10;    highFreq:setModulatorValue((60),false,false, false)&#13;&#10;    lowMidQ:setModulatorValue((0),false,false, false)&#13;&#10;    highMidQ:setModulatorValue((80),false,false, false)&#13;&#10;&#13;&#10;&#13;&#10;    elseif(preset==2)then&#13;&#10;    lowGain:setModulatorValue((90),false,false, false)&#13;&#10;    lowMidGain:setModulatorValue((20),false,false, false)&#13;&#10;    HighMidGain:setModulatorValue((110),false,false, false)&#13;&#10;    HighGain:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowGainSlider:setModulatorValue((90),false,false, false)&#13;&#10;    lowMidGainSlider:setModulatorValue((20),false,false, false)&#13;&#10;    HighMidGainSlider:setModulatorValue((110),false,false, false)&#13;&#10;    HighGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowFreq:setModulatorValue((40),false,false, false)&#13;&#10;    lowMidFreq:setModulatorValue((26),false,false, false)&#13;&#10;    highMidFreq:setModulatorValue((113),false,false, false)&#13;&#10;    highFreq:setModulatorValue((50),false,false, false)&#13;&#10;    lowMidQ:setModulatorValue((30),false,false, false)&#13;&#10;    highMidQ:setModulatorValue((100),false,false, false)&#13;&#10;&#13;&#10;&#13;&#10;    elseif(preset==3)then&#13;&#10;    lowGain:setModulatorValue((80),false,false, false)&#13;&#10;    lowMidGain:setModulatorValue((40),false,false, false)&#13;&#10;    HighMidGain:setModulatorValue((90),false,false, false)&#13;&#10;    HighGain:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowGainSlider:setModulatorValue((80),false,false, false)&#13;&#10;    lowMidGainSlider:setModulatorValue((40),false,false, false)&#13;&#10;    HighMidGainSlider:setModulatorValue((90),false,false, false)&#13;&#10;    HighGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowFreq:setModulatorValue((40),false,false, false)&#13;&#10;    lowMidFreq:setModulatorValue((28),false,false, false)&#13;&#10;    highMidFreq:setModulatorValue((30),false,false, false)&#13;&#10;    highFreq:setModulatorValue((40),false,false, false)&#13;&#10;    lowMidQ:setModulatorValue((0),false,false, false)&#13;&#10;    highMidQ:setModulatorValue((40),false,false, false)&#13;&#10;&#13;&#10;&#13;&#10;    elseif(preset==4)then&#13;&#10;    lowGain:setModulatorValue((60),false,false, false)&#13;&#10;    lowMidGain:setModulatorValue((80),false,false, false)&#13;&#10;    HighMidGain:setModulatorValue((80),false,false, false)&#13;&#10;    HighGain:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowGainSlider:setModulatorValue((60),false,false, false)&#13;&#10;    lowMidGainSlider:setModulatorValue((80),false,false, false)&#13;&#10;    HighMidGainSlider:setModulatorValue((80),false,false, false)&#13;&#10;    HighGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowFreq:setModulatorValue((100),false,false, false)&#13;&#10;    lowMidFreq:setModulatorValue((64),false,false, false)&#13;&#10;    highMidFreq:setModulatorValue((7),false,false, false)&#13;&#10;    highFreq:setModulatorValue((127),false,false, false)&#13;&#10;    lowMidQ:setModulatorValue((0),false,false, false)&#13;&#10;    highMidQ:setModulatorValue((30),false,false, false)&#13;&#10;&#13;&#10;&#13;&#10;    elseif(preset==5)then&#13;&#10;    lowGain:setModulatorValue((64),false,false, false)&#13;&#10;    lowMidGain:setModulatorValue((30),false,false, false)&#13;&#10;    HighMidGain:setModulatorValue((80),false,false, false)&#13;&#10;    HighGain:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;    lowMidGainSlider:setModulatorValue((30),false,false, false)&#13;&#10;    HighMidGainSlider:setModulatorValue((80),false,false, false)&#13;&#10;    HighGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowFreq:setModulatorValue((50),false,false, false)&#13;&#10;    lowMidFreq:setModulatorValue((42),false,false, false)&#13;&#10;    highMidFreq:setModulatorValue((28),false,false, false)&#13;&#10;    highFreq:setModulatorValue((60),false,false, false)&#13;&#10;    lowMidQ:setModulatorValue((100),false,false, false)&#13;&#10;    highMidQ:setModulatorValue((20),false,false, false)&#13;&#10;&#13;&#10;&#13;&#10;    elseif(preset==6)then&#13;&#10;    lowGain:setModulatorValue((64),false,false, false)&#13;&#10;    lowMidGain:setModulatorValue((20),false,false, false)&#13;&#10;    HighMidGain:setModulatorValue((85),false,false, false)&#13;&#10;    HighGain:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;    lowMidGainSlider:setModulatorValue((20),false,false, false)&#13;&#10;    HighMidGainSlider:setModulatorValue((85),false,false, false)&#13;&#10;    HighGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowFreq:setModulatorValue((80),false,false, false)&#13;&#10;    lowMidFreq:setModulatorValue((40),false,false, false)&#13;&#10;    highMidFreq:setModulatorValue((30),false,false, false)&#13;&#10;    highFreq:setModulatorValue((40),false,false, false)&#13;&#10;    lowMidQ:setModulatorValue((20),false,false, false)&#13;&#10;    highMidQ:setModulatorValue((40),false,false, false)&#13;&#10;&#13;&#10;&#13;&#10;    elseif(preset==7)then&#13;&#10;    lowGain:setModulatorValue((64),false,false, false)&#13;&#10;    lowMidGain:setModulatorValue((50),false,false, false)&#13;&#10;    HighMidGain:setModulatorValue((100),false,false, false)&#13;&#10;    HighGain:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;    lowMidGainSlider:setModulatorValue((50),false,false, false)&#13;&#10;    HighMidGainSlider:setModulatorValue((100),false,false, false)&#13;&#10;    HighGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowFreq:setModulatorValue((80),false,false, false)&#13;&#10;    lowMidFreq:setModulatorValue((50),false,false, false)&#13;&#10;    highMidFreq:setModulatorValue((35),false,false, false)&#13;&#10;    highFreq:setModulatorValue((127),false,false, false)&#13;&#10;    lowMidQ:setModulatorValue((0),false,false, false)&#13;&#10;    highMidQ:setModulatorValue((70),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==8)then&#13;&#10;    lowGain:setModulatorValue((64),false,false, false)&#13;&#10;    lowMidGain:setModulatorValue((20),false,false, false)&#13;&#10;    HighMidGain:setModulatorValue((70),false,false, false)&#13;&#10;    HighGain:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;    lowMidGainSlider:setModulatorValue((20),false,false, false)&#13;&#10;    HighMidGainSlider:setModulatorValue((70),false,false, false)&#13;&#10;    HighGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowFreq:setModulatorValue((80),false,false, false)&#13;&#10;    lowMidFreq:setModulatorValue((30),false,false, false)&#13;&#10;    highMidFreq:setModulatorValue((30),false,false, false)&#13;&#10;    highFreq:setModulatorValue((80),false,false, false)&#13;&#10;    lowMidQ:setModulatorValue((30),false,false, false)&#13;&#10;    highMidQ:setModulatorValue((50),false,false, false)&#13;&#10;&#13;&#10;&#13;&#10;    elseif(preset==9)then&#13;&#10;    lowGain:setModulatorValue((64),false,false, false)&#13;&#10;    lowMidGain:setModulatorValue((20),false,false, false)&#13;&#10;    HighMidGain:setModulatorValue((75),false,false, false)&#13;&#10;    HighGain:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;    lowMidGainSlider:setModulatorValue((20),false,false, false)&#13;&#10;    HighMidGainSlider:setModulatorValue((75),false,false, false)&#13;&#10;    HighGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowFreq:setModulatorValue((40),false,false, false)&#13;&#10;    lowMidFreq:setModulatorValue((32),false,false, false)&#13;&#10;    highMidFreq:setModulatorValue((25),false,false, false)&#13;&#10;    highFreq:setModulatorValue((127),false,false, false)&#13;&#10;    lowMidQ:setModulatorValue((64),false,false, false)&#13;&#10;    highMidQ:setModulatorValue((50),false,false, false)&#13;&#10;&#13;&#10;&#13;&#10;    elseif(preset==10)then&#13;&#10;    lowGain:setModulatorValue((64),false,false, false)&#13;&#10;    lowMidGain:setModulatorValue((75),false,false, false)&#13;&#10;    HighMidGain:setModulatorValue((30),false,false, false)&#13;&#10;    HighGain:setModulatorValue((64),false,false, false)&#13;&#10;    lowFreq:setModulatorValue((40),false,false, false)&#13;&#10;&#13;&#10;    lowGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;    lowMidGainSlider:setModulatorValue((75),false,false, false)&#13;&#10;    HighMidGainSlider:setModulatorValue((30),false,false, false)&#13;&#10;    HighGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;    lowFreq:setModulatorValue((40),false,false, false)&#13;&#10;&#13;&#10;    lowMidFreq:setModulatorValue((10),false,false, false)&#13;&#10;    highMidFreq:setModulatorValue((8),false,false, false)&#13;&#10;    highFreq:setModulatorValue((127),false,false, false)&#13;&#10;    lowMidQ:setModulatorValue((20),false,false, false)&#13;&#10;    highMidQ:setModulatorValue((70),false,false, false)&#13;&#10;&#13;&#10;&#13;&#10;    elseif(preset==11)then&#13;&#10;    lowGain:setModulatorValue((64),false,false, false)&#13;&#10;    lowMidGain:setModulatorValue((64),false,false, false)&#13;&#10;    HighMidGain:setModulatorValue((90),false,false, false)&#13;&#10;    HighGain:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;    lowMidGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;    HighMidGainSlider:setModulatorValue((90),false,false, false)&#13;&#10;    HighGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowMidFreq:setModulatorValue((20),false,false, false)&#13;&#10;    highMidFreq:setModulatorValue((30),false,false, false)&#13;&#10;    highFreq:setModulatorValue((127),false,false, false)&#13;&#10;    lowMidQ:setModulatorValue((64),false,false, false)&#13;&#10;    highMidQ:setModulatorValue((60),false,false, false)&#13;&#10;&#13;&#10;&#13;&#10;    elseif(preset==12)then&#13;&#10;    lowGain:setModulatorValue((64),false,false, false)&#13;&#10;    lowMidGain:setModulatorValue((64),false,false, false)&#13;&#10;    HighMidGain:setModulatorValue((70),false,false, false)&#13;&#10;    HighGain:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;    lowMidGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;    HighMidGainSlider:setModulatorValue((70),false,false, false)&#13;&#10;    HighGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowFreq:setModulatorValue((40),false,false, false)&#13;&#10;    lowMidFreq:setModulatorValue((20),false,false, false)&#13;&#10;    highMidFreq:setModulatorValue((64),false,false, false)&#13;&#10;    highFreq:setModulatorValue((127),false,false, false)&#13;&#10;    lowMidQ:setModulatorValue((64),false,false, false)&#13;&#10;    highMidQ:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;&#13;&#10;    elseif(preset==13)then&#13;&#10;    lowGain:setModulatorValue((64),false,false, false)&#13;&#10;    lowMidGain:setModulatorValue((80),false,false, false)&#13;&#10;    HighMidGain:setModulatorValue((50),false,false, false)&#13;&#10;    HighGain:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;    lowMidGainSlider:setModulatorValue((80),false,false, false)&#13;&#10;    HighMidGainSlider:setModulatorValue((50),false,false, false)&#13;&#10;    HighGainSlider:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    lowFreq:setModulatorValue((40),false,false, false)&#13;&#10;    lowMidFreq:setModulatorValue((10),false,false, false)&#13;&#10;    highMidFreq:setModulatorValue((6),false,false, false)&#13;&#10;    highFreq:setModulatorValue((127),false,false, false)&#13;&#10;    lowMidQ:setModulatorValue((80),false,false, false)&#13;&#10;    highMidQ:setModulatorValue((70),false,false, false)&#13;&#10;    end&#13;&#10;&#13;&#10;    panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;0&quot;)&#13;&#10;&#13;&#10;    end"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="9abbeb8f7fdc48e7970ab7523906a267" luaMethodValid="1"/>
        <luaMethod luaMethodName="setModPresetEfx" luaMethodCode="--&#13;&#10;-- Called when a modulator value changes&#13;&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;&#10;    -- @value    new numeric value of the modulator&#13;&#10;--&#13;&#10;setModPresetEfx = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#13;&#10;&#9;methodName = &quot;setModPresetEfx&quot;&#13;&#10;&#9;if (loadingStage ~= nil) then &#13;&#10;&#9;&#9;if (loadingStage == getStateValueIgnoredAutomatedOnModChangeEvents()) then&#13;&#10;&#9;&#9;&#9;console (string.format(&quot;---------&gt;%s is in state: ignored automated onModChange Event == %s - stop Method&quot;, methodName, tostring(loadingCompleteFlag)))&#13;&#10;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;modName = mod:getProperty(&quot;name&quot;)&#13;&#10;&#9;&#13;&#10;&#9;efxNum = 0&#13;&#10;&#9;if (modName == &quot;Efx1_Mod_Preset&quot;) then&#13;&#10;&#9;&#9;efxNum = 1&#13;&#10;&#9;elseif (modName == &quot;Efx2_Mod_Preset&quot;) then&#13;&#10;&#9;&#9;efxNum = 2&#13;&#10;&#9;elseif (modName == &quot;Efx3_Mod_Preset&quot;) then&#13;&#10;&#9;&#9;efxNum = 3&#13;&#10;&#9;else&#13;&#10;&#9;&#9;console (string.format(&quot;setModPresetEfx () executed from mod=%s, should not happen!&quot;, modName))&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;valueMapped = mod:getValueMapped()&#13;&#10;&#13;&#10;&#9;--console (&quot;modName == &quot; .. modName)&#13;&#10;&#9;--console (&quot;value == &quot; .. value)&#13;&#10;&#9;--console (&quot;valueMapped == &quot; .. valueMapped)&#13;&#10;&#13;&#10;&#9;validPreset = isPresetValid(mod, value)&#13;&#10;&#13;&#10;&#9;if validPreset == true then&#13;&#10;&#9;&#9;setModPresetEfx_ (efxNum, valueMapped, true)&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- &lt;--- individuell&#13;&#10;&#9;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;1&quot;)&#9;&#9;&#9;&#9;&#9;&#9;-- not needed ? Component MIDI Implementation set to NONE&#13;&#10;&#9;&#9;mod:setModulatorValue(mod:getMaxNonMapped(),false,false,false)&#9;&#9;&#9;-- careful: endless loop LAST ITEM NEEDS MAPPED VALUE=99&#13;&#10;&#9;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;0&quot;)&#13;&#10;&#9;end&#13;&#10;end &#13;&#10;&#13;&#10;&#13;&#10;setModPresetEfx_ = function (efxNum, valueMapped, midiOutputEnabled)&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;setModPresetEfx_ (efxNum=%d, valueMapped=%d, midiOutputEnabled=%s)&quot;, efxNum, valueMapped, tostring(midiOutputEnabled)))&#13;&#10;&#13;&#10;&#9;if(efxNum &lt; 1 and efxNum &gt; 3) then&#13;&#10;&#9;&#9;console (&quot;non valid efxNum, break setModPresetEfx_&quot;)&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (midiOutputEnabled == true) then&#13;&#10;&#9;&#9;-- Built Message CC/SysEx&#13;&#10;&#9;&#9;nrpnHigh = 0x3a&#9;+ (efxNum-1)&#9;--&#9;EFX Modul 0x3a, 0x3b, 0x3c&#13;&#10;&#9;&#9;nrpnLow = 0x30&#9;&#9;&#9;&#9;&#9;--&#9;Insert MFX Chorus/Flanger/Phaser/Tremolo/Rotary Presets &#13;&#10;&#9;&#9;data = valueMapped&#9;&#9;&#9;&#9;-- &#9;int value&#13;&#10;&#13;&#10;&#9;&#9;-- Send Message&#13;&#10;&#9;&#9;sendNRPNMessage( nrpnHigh, nrpnLow, data )&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- disable Midi Messages&#13;&#10;&#13;&#10;&#9;-- Update UI (Slider = Parameter values)&#13;&#10;&#9;setModPresetEfx_Parameters(efxNum, valueMapped, false)&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- &lt;--- individuell&#13;&#10;&#13;&#10;&#9;-- Set Combobox to Custom&#13;&#10;&#13;&#10;&#9;-- enable Midi Messages&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;setModPresetEfx_Parameters = function (efxNum, valueMapped, midiOutputEnabled)&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;setModPresetEfx_Parameters (efxNum=%d, valueMapped=%d, midiOutputEnabled=%s)&quot;, tonumber(efxNum,10), tonumber(valueMapped,10), tostring(midiOutputEnabled)))&#13;&#10;&#13;&#10;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;1&quot;)&#13;&#10;&#13;&#10;    --preset = panel : getModulatorByName(&quot;Efx%d_Mod_Preset&quot;):getModulatorValue()&#13;&#10;&#9;preset = valueMapped&#13;&#10;&#13;&#10;&#9;PresetValueModName = string.format(&quot;Efx%d_Mod_Preset_Value&quot;, efxNum)&#13;&#10;&#9;PresetValueMod = panel : getModulatorByName(PresetValueModName)&#13;&#10;&#9;PresetValueMod : setModulatorValue (preset, false, false, false)&#13;&#10;&#9;&#13;&#10;&#9;onOffButtonModName = string.format(&quot;Efx%d_Mod_On&quot;, efxNum)&#13;&#10;&#9;volumeModName = string.format(&quot;Efx%d_Mod_Level&quot;,efxNum)&#13;&#10;&#9;delayModName = string.format(&quot;Efx%d_Mod_Time&quot;,efxNum)&#13;&#10;&#9;feedbackModName = string.format(&quot;Efx%d_Mod_Feedback&quot;,efxNum)&#13;&#10;&#9;hdamphModName = string.format(&quot;Efx%d_Mod_Hdamp&quot;,efxNum)&#13;&#10;&#9;rateModName = string.format(&quot;Efx%d_Mod_Rate&quot;,efxNum)&#13;&#10;&#9;depthModName = string.format(&quot;Efx%d_Mod_Depth&quot;,efxNum)&#13;&#10;&#13;&#10;&#9;-- Firm5716-EK documented On/Off Control&#13;&#10;&#9;onOffButton = panel:getModulatorByName(onOffButtonModName)&#13;&#10;&#13;&#10;--&#9;undokumented Control -&gt; disable!&#13;&#10;&#9;shapeModName = string.format(&quot;Efx%d_Mod_Shape&quot;,efxNum)&#13;&#10;&#9;shapeMod = panel : getModulatorByName(shapeModName)&#13;&#10;&#9;shapeMod : getComponent() : setProperty (&quot;componentDisabled&quot;, 1, false)&#13;&#10;&#9;setModulatorMidiMessageType (shapeMod, &quot;9&quot;)&#13;&#10;&#9;&#13;&#10;&#9;&#13;&#10;&#9;preHighPassFilterModName = string.format(&quot;Efx%d_Mod_Filter&quot;,efxNum)&#13;&#10;&#13;&#10;    volume = panel : getModulatorByName(volumeModName)&#13;&#10;    delay = panel : getModulatorByName(delayModName)&#13;&#10;    feedback = panel : getModulatorByName(feedbackModName)&#13;&#10;    hdamph = panel : getModulatorByName(hdamphModName)&#13;&#10;    rate = panel : getModulatorByName(rateModName)&#13;&#10;    depth = panel : getModulatorByName(depthModName)&#13;&#10;&#9;&#13;&#10;&#9;preHighPassFilter = panel : getModulatorByName(preHighPassFilterModName)&#13;&#10;&#13;&#10;-- Preset 23: Rotary Slow Controls&#13;&#10;&#9;rotarySpeedModName = string.format(&quot;Efx%d_Mod_Speed&quot;,efxNum)&#13;&#10;&#9;rotaryModulationRateModName = string.format(&quot;Efx%d_Mod_Rotary_Fast_Mod_Rate&quot;,efxNum)&#13;&#10;&#9;rotaryAccelerationTimeModName = string.format(&quot;Efx%d_Mod_Rotary_Acc_Time&quot;,efxNum)&#13;&#10;&#9;rotaryDecelerationTimeModName = string.format(&quot;Efx%d_Mod_Rotary_Dec_Time&quot;,efxNum)&#13;&#10;&#13;&#10;&#9;rotarySpeed = panel : getModulatorByName(rotarySpeedModName)&#13;&#10;&#9;rotaryModulationRate = panel : getModulatorByName(rotaryModulationRateModName)&#13;&#10;&#9;rotaryAccelerationTime = panel : getModulatorByName(rotaryAccelerationTimeModName)&#13;&#10;&#9;rotaryDecelerationTime = panel : getModulatorByName(rotaryDecelerationTimeModName)&#13;&#10;&#9;&#13;&#10;&#9;if (preset == 23) then&#13;&#10;&#9;&#9;isNonRotaryPreset = 0&#13;&#10;&#9;else&#13;&#10;&#9;&#9;isNonRotaryPreset = 1&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;rotarySpeed : getComponent() : setProperty (&quot;componentDisabled&quot;, isNonRotaryPreset, false)&#13;&#10;&#9;--rotaryModulationRate : getComponent() : setProperty (&quot;componentDisabled&quot;, isNonRotaryPreset, false)&#13;&#10;&#9;--rotaryAccelerationTime : getComponent() : setProperty (&quot;componentDisabled&quot;, isNonRotaryPreset, false)&#13;&#10;&#9;--rotaryDecelerationTime : getComponent() : setProperty (&quot;componentDisabled&quot;, isNonRotaryPreset, false)&#13;&#10;--&#13;&#10;&#13;&#10;&#9;-- Values for all Presets&#13;&#10;&#9;-- Preset value for Pre-High-pass-Filter is always 0 (off). &#13;&#10;&#9;preHighPassFilter : setModulatorValue((0),false,false, false)&#13;&#10;&#13;&#10;&#9;-- update Label to current Preset Name &#13;&#10;&#9;PresetLabelModName = string.format(&quot;Efx%d_Mod_Current_Preset&quot;, efxNum)&#13;&#10;&#9;PresetListModName = string.format(&quot;Efx%d_Mod_Preset&quot;, efxNum)&#13;&#10;&#9;setEfxPresetLabel(PresetLabelModName, PresetListModName, valueMapped)&#13;&#10;&#13;&#10;&#9;if(preset == 0) then&#13;&#10;&#9;&#9;onOffButton:setModulatorValue((0),false,false, false)&#13;&#10;&#9;else &#13;&#10;&#9;&#9;onOffButton:setModulatorValue((1),false,false, false)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#13;&#10;    if(preset==0)then&#13;&#10;&#9;&#9;volume: setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;delay:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;feedback:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;hdamph:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;rate:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;depth:setModulatorValue((0),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==1)then&#13;&#10;&#9;&#9;volume: setModulatorValue((56),false,false, false)&#13;&#10;&#9;&#9;delay:setModulatorValue((20),false,false, false)&#13;&#10;&#9;&#9;feedback:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;hdamph:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;rate:setModulatorValue((40),false,false, false)&#13;&#10;&#9;&#9;depth:setModulatorValue((30),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==2)then&#13;&#10;&#9;&#9;volume: setModulatorValue((56),false,false, false)&#13;&#10;&#9;&#9;delay:setModulatorValue((40),false,false, false)&#13;&#10;&#9;&#9;feedback:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;hdamph:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;rate:setModulatorValue((30),false,false, false)&#13;&#10;&#9;&#9;depth:setModulatorValue((30),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==3)then&#13;&#10;&#9;&#9;volume: setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;delay:setModulatorValue((26),false,false, false)&#13;&#10;&#9;&#9;feedback:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;hdamph:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;rate:setModulatorValue((45),false,false, false)&#13;&#10;&#9;&#9;depth:setModulatorValue((40),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==4)then&#13;&#10;&#9;&#9;volume: setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;delay:setModulatorValue((60),false,false, false)&#13;&#10;&#9;&#9;feedback:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;hdamph:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;rate:setModulatorValue((35),false,false, false)&#13;&#10;&#9;&#9;depth:setModulatorValue((50),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==5)then&#13;&#10;&#9;&#9;volume: setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;delay:setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;feedback:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;hdamph:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;rate:setModulatorValue((40),false,false, false)&#13;&#10;&#9;&#9;depth:setModulatorValue((70),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==6)then&#13;&#10;&#9;&#9;volume: setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;delay:setModulatorValue((80),false,false, false)&#13;&#10;&#9;&#9;feedback:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;hdamph:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;rate:setModulatorValue((45),false,false, false)&#13;&#10;&#9;&#9;depth:setModulatorValue((90),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==7)then&#13;&#10;&#9;&#9;volume: setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;delay:setModulatorValue((30),false,false, false)&#13;&#10;&#9;&#9;feedback:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;hdamph:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;rate:setModulatorValue((70),false,false, false)&#13;&#10;&#9;&#9;depth:setModulatorValue((10),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==8)then&#13;&#10;&#9;&#9;volume: setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;delay:setModulatorValue((60),false,false, false)&#13;&#10;&#9;&#9;feedback:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;hdamph:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;rate:setModulatorValue((60),false,false, false)&#13;&#10;&#9;&#9;depth:setModulatorValue((20),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==9)then&#13;&#10;&#9;&#9;volume: setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;delay:setModulatorValue((30),false,false, false)&#13;&#10;&#9;&#9;feedback:setModulatorValue((80),false,false, false)&#13;&#10;&#9;&#9;hdamph:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;rate:setModulatorValue((40),false,false, false)&#13;&#10;&#9;&#9;depth:setModulatorValue((20),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==10)then&#13;&#10;&#9;&#9;volume: setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;delay:setModulatorValue((100),false,false, false)&#13;&#10;&#9;&#9;feedback:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;hdamph:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;rate:setModulatorValue((20),false,false, false)&#13;&#10;&#9;&#9;depth:setModulatorValue((20),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==11)then&#13;&#10;&#9;&#9;volume: setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;delay:setModulatorValue((8),false,false, false)&#13;&#10;&#9;&#9;feedback:setModulatorValue((32),false,false, false)&#13;&#10;&#9;&#9;hdamph:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;rate:setModulatorValue((30),false,false, false)&#13;&#10;&#9;&#9;depth:setModulatorValue((30),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==12)then&#13;&#10;&#9;&#9;volume: setModulatorValue((72),false,false, false)&#13;&#10;&#9;&#9;delay:setModulatorValue((13),false,false, false)&#13;&#10;&#9;&#9;feedback:setModulatorValue((72),false,false, false)&#13;&#10;&#9;&#9;hdamph:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;rate:setModulatorValue((40),false,false, false)&#13;&#10;&#9;&#9;depth:setModulatorValue((90),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==13)then&#13;&#10;&#9;&#9;volume: setModulatorValue((72),false,false, false)&#13;&#10;&#9;&#9;delay:setModulatorValue((2),false,false, false)&#13;&#10;&#9;&#9;feedback:setModulatorValue((50),false,false, false)&#13;&#10;&#9;&#9;hdamph:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;rate:setModulatorValue((20),false,false, false)&#13;&#10;&#9;&#9;depth:setModulatorValue((90),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==14)then&#13;&#10;&#9;&#9;volume: setModulatorValue((72),false,false, false)&#13;&#10;&#9;&#9;delay:setModulatorValue((6),false,false, false)&#13;&#10;&#9;&#9;feedback:setModulatorValue((100),false,false, false)&#13;&#10;&#9;&#9;hdamph:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;rate:setModulatorValue((50),false,false, false)&#13;&#10;&#9;&#9;depth:setModulatorValue((100),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==15)then&#13;&#10;&#9;&#9;volume: setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;delay:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;feedback:setModulatorValue((80),false,false, false)&#13;&#10;&#9;&#9;hdamph:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;rate:setModulatorValue((50),false,false, false)&#13;&#10;&#9;&#9;depth:setModulatorValue((50),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==16)then&#13;&#10;&#9;&#9;volume: setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;delay:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;feedback:setModulatorValue((90),false,false, false)&#13;&#10;&#9;&#9;hdamph:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;rate:setModulatorValue((60),false,false, false)&#13;&#10;&#9;&#9;depth:setModulatorValue((80),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==17)then&#13;&#10;&#9;&#9;volume: setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;delay:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;feedback:setModulatorValue((100),false,false, false)&#13;&#10;&#9;&#9;hdamph:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;rate:setModulatorValue((20),false,false, false)&#13;&#10;&#9;&#9;depth:setModulatorValue((110),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==18)then&#13;&#10;&#9;&#9;volume: setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;delay:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;feedback:setModulatorValue((40),false,false, false)&#13;&#10;&#9;&#9;hdamph:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;rate:setModulatorValue((120),false,false, false)&#13;&#10;&#9;&#9;depth:setModulatorValue((60),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==19)then&#13;&#10;&#9;&#9;volume: setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;delay:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;feedback:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;hdamph:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;rate:setModulatorValue((20),false,false, false)&#13;&#10;&#9;&#9;depth:setModulatorValue((60),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==20)then&#13;&#10;&#9;&#9;volume: setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;delay:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;feedback:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;hdamph:setModulatorValue((20),false,false, false)&#13;&#10;&#9;&#9;rate:setModulatorValue((40),false,false, false)&#13;&#10;&#9;&#9;depth:setModulatorValue((70),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==21)then&#13;&#10;&#9;&#9;volume: setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;delay:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;feedback:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;hdamph:setModulatorValue((40),false,false, false)&#13;&#10;&#9;&#9;rate:setModulatorValue((60),false,false, false)&#13;&#10;&#9;&#9;depth:setModulatorValue((90),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==22)then&#13;&#10;&#9;&#9;volume: setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;delay:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;feedback:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;hdamph:setModulatorValue((60),false,false, false)&#13;&#10;&#9;&#9;rate:setModulatorValue((100),false,false, false)&#13;&#10;&#9;&#9;depth:setModulatorValue((110),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==23)then&#13;&#10;&#9;&#9;volume: setModulatorValue((90),false,false, false)&#13;&#10;&#9;&#9;delay:setModulatorValue((30),false,false, false)&#13;&#10;&#9;&#9;feedback:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;hdamph:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;rate:setModulatorValue((50),false,false, false)&#13;&#10;&#9;&#9;depth:setModulatorValue((20),false,false, false)&#13;&#10;&#13;&#10;    end&#13;&#10;&#13;&#10;    panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;0&quot;)&#13;&#10;&#13;&#10;end"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="eb4ff62749014b78aae308cc99098ecc" luaMethodValid="1"/>
        <luaMethod luaMethodName="setCompPresetEfx" luaMethodCode="--&#13;&#10;-- Called when a modulator value changes&#13;&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;&#10;-- @value    new numeric value of the modulator&#13;&#10;--&#13;&#10;setCompPresetEfx = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#13;&#10;&#9;methodName = &quot;setCompPresetEfx&quot;&#13;&#10;&#9;if (loadingStage ~= nil) then &#13;&#10;&#9;&#9;if (loadingStage == getStateValueIgnoredAutomatedOnModChangeEvents()) then&#13;&#10;&#9;&#9;&#9;console (string.format(&quot;---------&gt;%s is in state: ignored automated onModChange Event == %s - stop Method&quot;, methodName, tostring(loadingCompleteFlag)))&#13;&#10;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;modName = mod:getProperty(&quot;name&quot;)&#13;&#10;&#9;&#13;&#10;&#9;efxNum = 0&#13;&#10;&#9;if (modName == &quot;Efx1_CompLimit_Preset&quot;) then&#13;&#10;&#9;&#9;efxNum = 1&#13;&#10;&#9;elseif (modName == &quot;Efx2_CompLimit_Preset&quot;) then&#13;&#10;&#9;&#9;efxNum = 2&#13;&#10;&#9;elseif (modName == &quot;Efx3_CompLimit_Preset&quot;) then&#13;&#10;&#9;&#9;efxNum = 3&#13;&#10;&#9;else&#13;&#10;&#9;&#9;console (string.format(&quot;setCompPresetEfx () executed from mod=%s, should not happen!&quot;, modName))&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;valueMapped = mod:getValueMapped()&#13;&#10;&#13;&#10;&#9;--console (&quot;modName == &quot; .. modName)&#13;&#10;&#9;--console (&quot;value == &quot; .. value)&#13;&#10;&#9;--console (&quot;valueMapped == &quot; .. valueMapped)&#13;&#10;&#13;&#10;&#9;validPreset = isPresetValid(mod, value)&#13;&#10;&#13;&#10;&#9;if validPreset == true then&#13;&#10;&#9;&#9;setCompPresetEfx_ (efxNum, valueMapped, true)&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- &lt;--- individuell&#13;&#10;&#9;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;1&quot;)&#9;&#9;&#9;&#9;&#9;&#9;-- not needed ? Component MIDI Implementation set to NONE&#13;&#10;&#9;&#9;mod:setModulatorValue(mod:getMaxNonMapped(),false,false,false)&#9;&#9;&#9;-- careful: endless loop LAST ITEM NEEDS MAPPED VALUE=99&#13;&#10;&#9;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;0&quot;)&#13;&#10;&#9;end&#13;&#10;end &#13;&#10;&#13;&#10;&#13;&#10;setCompPresetEfx_ = function (efxNum, valueMapped, midiOutputEnabled)&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;setCompPresetEfx_ (efxNum=%d, valueMapped=%d, midiOutputEnabled=%s)&quot;, efxNum, valueMapped, tostring(midiOutputEnabled)))&#13;&#10;&#9;&#13;&#10;&#9;if(efxNum &lt; 1 and efxNum &gt; 3) then&#13;&#10;&#9;&#9;console (&quot;non valid efxNum, break setCompPresetEfx_&quot;)&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (midiOutputEnabled == true) then&#13;&#10;&#9;&#9;-- Built Message CC/SysEx&#13;&#10;&#9;&#9;nrpnHigh = 0x3a&#9;+ (efxNum-1)&#9;--&#9;EFX Modul 0x3a, 0x3b, 0x3c&#13;&#10;&#9;&#9;nrpnLow = 0x40&#9;&#9;&#9;&#9;&#9;--&#9;Insert MFX Compressor/Limiter Presets &#13;&#10;&#9;&#9;data = valueMapped&#9;&#9;&#9;&#9;-- &#9;int value&#13;&#10;&#13;&#10;&#9;&#9;-- Send Message&#13;&#10;&#9;&#9;sendNRPNMessage( nrpnHigh, nrpnLow, data )&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- disable Midi Messages&#13;&#10;&#13;&#10;&#9;-- Update UI (Slider = Parameter values)&#13;&#10;&#9;setCompPresetEfx_Parameters(efxNum, valueMapped, false)&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- &lt;--- individuell&#13;&#10;&#13;&#10;&#9;-- Set Combobox to Custom&#13;&#10;&#13;&#10;&#9;-- enable Midi Messages&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;setCompPresetEfx_Parameters = function (efxNum, valueMapped, midiOutputEnabled)&#13;&#10;&#13;&#10;&#9;--console (string.format(&quot;setCompPresetEfx_Parameters (efxNum=%d, valueMapped=%d, midiOutputEnabled=%s)&quot;, efxNum, valueMapped, tostring(midiOutputEnabled)))&#13;&#10;&#9;console (string.format(&quot;setCompPresetEfx_Parameters (efxNum=%d, valueMapped=%d, midiOutputEnabled=%s)&quot;, tonumber(efxNum,10), tonumber(valueMapped,10), tostring(midiOutputEnabled)))&#13;&#10;&#13;&#10;    panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;1&quot;)&#13;&#10;&#13;&#10;    --preset    = panel : getModulatorByName(&quot;Efx_CompLimit_Preset&quot;):getModulatorValue()&#13;&#10;&#9;preset = valueMapped&#13;&#10;&#13;&#10;&#9;PresetValueModName = string.format(&quot;Efx%d_CompLimit_Preset_Value&quot;, efxNum)&#13;&#10;&#9;PresetValueMod = panel : getModulatorByName(PresetValueModName)&#13;&#10;&#9;PresetValueMod : setModulatorValue (preset, false, false, false)&#13;&#10;&#13;&#10;&#9;onOffButtonModName = string.format(&quot;Efx%d_Comp_On&quot;,efxNum)&#13;&#10;&#9;attackModName = string.format(&quot;Efx%d_Comp_Attack&quot;,efxNum)&#13;&#10;&#9;releaseModName = string.format(&quot;Efx%d_Comp_Release&quot;,efxNum)&#13;&#10;&#9;thresholdModName = string.format(&quot;Efx%d_Comp_Threshold&quot;,efxNum)&#13;&#10;&#9;ratioModName = string.format(&quot;Efx%d_Comp_Ratio&quot;,efxNum)&#13;&#10;&#9;boostModName = string.format(&quot;Efx%d_Comp_Boost&quot;,efxNum)&#13;&#10;&#9;boostSliderModName = string.format(&quot;Efx%d_Comp_Boost_Slider&quot;,efxNum)&#13;&#10;&#9;kneeModName = string.format(&quot;Efx%d_Comp_Knee&quot;,efxNum)&#13;&#10;&#9;&#13;&#10;    attack = panel : getModulatorByName(attackModName)&#13;&#10;    release = panel : getModulatorByName(releaseModName)&#13;&#10;    threshold = panel : getModulatorByName(thresholdModName)&#13;&#10;    ratio = panel : getModulatorByName(ratioModName)&#13;&#10;    boost = panel : getModulatorByName(boostModName)&#13;&#10;&#9;boostSlider = panel : getModulatorByName(boostSliderModName)&#13;&#10;&#13;&#10;    onOffButton = panel : getModulatorByName(onOffButtonModName)&#13;&#10;&#13;&#10;&#9;-- Values for all Presets&#13;&#10;&#9;-- Preset value for Compressor Knee value is always 0 (Hard Knee). &#13;&#10;&#9;knee = panel : getModulatorByName(kneeModName)&#13;&#10;&#9;knee : setModulatorValue((0),false,false, false)&#13;&#10;&#13;&#10;&#9;-- update Label to current Preset Name &#13;&#10;&#9;compPresetLabelModName = string.format(&quot;Efx%d_CompLimit_Current_Preset&quot;, efxNum)&#13;&#10;&#9;compPresetListModName = string.format(&quot;Efx%d_CompLimit_Preset&quot;, efxNum)&#13;&#10;&#9;setEfxPresetLabel(compPresetLabelModName, compPresetListModName, valueMapped)&#13;&#10;&#13;&#10;    if (preset == 0) then&#13;&#10;    &#9;onOffButton:setModulatorValue((0),false,false, false)&#13;&#10;    else&#13;&#10;        onOffButton:setModulatorValue((1),false,false, false)&#13;&#10;    end&#13;&#10;&#13;&#10;    if(preset==0 )then&#13;&#10;&#9;&#9;attack:setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;release:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;threshold:setModulatorValue((127),false,false, false)&#13;&#10;&#9;&#9;ratio:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;boost:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;boostSlider:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#13;&#10;&#13;&#10;    elseif(preset==1)then&#13;&#10;&#9;&#9;attack:setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;release:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;threshold:setModulatorValue((73),false,false, false)&#13;&#10;&#9;&#9;ratio:setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;boost:setModulatorValue((1),false,false, false)&#13;&#10;&#9;&#9;boostSlider:setModulatorValue((24),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==2)then&#13;&#10;&#9;&#9;attack:setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;release:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;threshold:setModulatorValue((82),false,false, false)&#13;&#10;&#9;&#9;ratio:setModulatorValue((84),false,false, false)&#13;&#10;&#9;&#9;boost:setModulatorValue((2),false,false, false)&#13;&#10;&#9;&#9;boostSlider:setModulatorValue((32),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==3)then&#13;&#10;&#9;&#9;attack:setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;release:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;threshold:setModulatorValue((73),false,false, false)&#13;&#10;&#9;&#9;ratio:setModulatorValue((100),false,false, false)&#13;&#10;&#9;&#9;boost:setModulatorValue((3),false,false, false)&#13;&#10;&#9;&#9;boostSlider:setModulatorValue((48),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==4)then&#13;&#10;&#9;&#9;attack:setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;release:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;threshold:setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;ratio:setModulatorValue((110),false,false, false)&#13;&#10;&#9;&#9;boost:setModulatorValue((3),false,false, false)&#13;&#10;&#9;&#9;boostSlider:setModulatorValue((48),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==5)then&#13;&#10;&#9;&#9;attack:setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;release:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;threshold:setModulatorValue((55),false,false, false)&#13;&#10;&#9;&#9;ratio:setModulatorValue((117),false,false, false)&#13;&#10;&#9;&#9;boost:setModulatorValue((4),false,false, false)&#13;&#10;&#9;&#9;boostSlider:setModulatorValue((64),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==6)then&#13;&#10;        attack:setModulatorValue((64),false,false, false)&#13;&#10;        release:setModulatorValue((0),false,false, false)&#13;&#10;        threshold:setModulatorValue((109),false,false, false)&#13;&#10;        ratio:setModulatorValue((127),false,false, false)&#13;&#10;        boost:setModulatorValue((0),false,false, false)&#13;&#10;        boostSlider:setModulatorValue((0),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==7)then&#13;&#10;        attack:setModulatorValue((64),false,false, false)&#13;&#10;        release:setModulatorValue((0),false,false, false)&#13;&#10;        threshold:setModulatorValue((91),false,false, false)&#13;&#10;        ratio:setModulatorValue((127),false,false, false)&#13;&#10;        boost:setModulatorValue((0),false,false, false)&#13;&#10;        boostSlider:setModulatorValue((0),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==8)then&#13;&#10;        attack:setModulatorValue((64),false,false, false)&#13;&#10;        release:setModulatorValue((0),false,false, false)&#13;&#10;        threshold:setModulatorValue((73),false,false, false)&#13;&#10;        ratio:setModulatorValue((127),false,false, false)&#13;&#10;        boost:setModulatorValue((0),false,false, false)&#13;&#10;        boostSlider:setModulatorValue((0),false,false, false)&#13;&#10;&#13;&#10;    end&#13;&#10;&#13;&#10;    panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;0&quot;)&#13;&#10;&#13;&#10;end"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="5314173f185242a28006c7e07fdee323" luaMethodValid="1"/>
        <luaMethod luaMethodName="setDistPresetEfx" luaMethodCode="--&#13;&#10;-- Called when a modulator value changes&#13;&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;&#10;-- @value    new numeric value of the modulator&#13;&#10;--&#13;&#10;setDistPresetEfx = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#13;&#10;&#9;methodName = &quot;setDistPresetEfx&quot;&#13;&#10;&#9;if (loadingStage ~= nil) then &#13;&#10;&#9;&#9;if (loadingStage == getStateValueIgnoredAutomatedOnModChangeEvents()) then&#13;&#10;&#9;&#9;&#9;console (string.format(&quot;---------&gt;%s is in state: ignored automated onModChange Event == %s - stop Method&quot;, methodName, tostring(loadingCompleteFlag)))&#13;&#10;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;modName = mod:getProperty(&quot;name&quot;)&#13;&#10;&#9;&#13;&#10;&#9;efxNum = 0&#13;&#10;&#9;if (modName == &quot;Efx1_Dist_Preset&quot;) then&#13;&#10;&#9;&#9;efxNum = 1&#13;&#10;&#9;elseif (modName == &quot;Efx2_Dist_Preset&quot;) then&#13;&#10;&#9;&#9;efxNum = 2&#13;&#10;&#9;elseif (modName == &quot;Efx3_Dist_Preset&quot;) then&#13;&#10;&#9;&#9;efxNum = 3&#13;&#10;&#9;else&#13;&#10;&#9;&#9;console (string.format(&quot;setDistPresetEfx () executed from mod=%s, should not happen!&quot;, modName))&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;valueMapped = mod:getValueMapped()&#13;&#10;&#13;&#10;&#9;--console (&quot;modName == &quot; .. modName)&#13;&#10;&#9;--console (&quot;value == &quot; .. value)&#13;&#10;&#9;--console (&quot;valueMapped == &quot; .. valueMapped)&#13;&#10;&#13;&#10;&#9;validPreset = isPresetValid(mod, value)&#13;&#10;&#13;&#10;&#9;if validPreset == true then&#13;&#10;&#9;&#9;setDistPresetEfx_ (efxNum, valueMapped, true)&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- &lt;--- individuell&#13;&#10;&#9;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;1&quot;)&#9;&#9;&#9;&#9;&#9;&#9;-- not needed ? Component MIDI Implementation set to NONE&#13;&#10;&#9;&#9;mod:setModulatorValue(mod:getMaxNonMapped(),false,false,false)&#9;&#9;&#9;-- careful: endless loop LAST ITEM NEEDS MAPPED VALUE=99&#13;&#10;&#9;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;0&quot;)&#13;&#10;&#9;end&#13;&#10;end &#13;&#10;&#13;&#10;&#13;&#10;setDistPresetEfx_ = function (efxNum, valueMapped, midiOutputEnabled)&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;setDistPresetEfx_ (efxNum=%d, valueMapped=%d, midiOutputEnabled=%s)&quot;, efxNum, valueMapped, tostring(midiOutputEnabled)))&#13;&#10;&#9;&#13;&#10;&#9;if(efxNum &lt; 1 and efxNum &gt; 3) then&#13;&#10;&#9;&#9;console (&quot;non valid efxNum, break setDistPresetEfx_&quot;)&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (midiOutputEnabled == true) then&#13;&#10;&#9;&#9;-- Built Message CC/SysEx&#13;&#10;&#9;&#9;nrpnHigh = 0x3a&#9;+ (efxNum-1)&#9;--&#9;EFX Modul 0x3a, 0x3b, 0x3c&#13;&#10;&#9;&#9;nrpnLow = 0x60&#9;&#9;&#9;&#9;&#9;--&#9;Insert MFX Distortion Presets &#13;&#10;&#9;&#9;data = valueMapped&#9;&#9;&#9;&#9;-- &#9;int value&#13;&#10;&#13;&#10;&#9;&#9;-- Send Message&#13;&#10;&#9;&#9;sendNRPNMessage( nrpnHigh, nrpnLow, data )&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- disable Midi Messages&#13;&#10;&#13;&#10;&#9;-- Update UI (Slider = Parameter values)&#13;&#10;&#9;setDistPresetEfx_Parameters(efxNum, valueMapped, false)&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- &lt;--- individuell&#13;&#10;&#13;&#10;&#9;-- Set Combobox to Custom&#13;&#10;&#13;&#10;&#9;-- enable Midi Messages&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;setDistPresetEfx_Parameters = function (efxNum, valueMapped, midiOutputEnabled)&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;setDistPresetEfx_Parameters (efxNum=%d, valueMapped=%d, midiOutputEnabled=%s)&quot;, tonumber(efxNum,10), tonumber(valueMapped,10), tostring(midiOutputEnabled)))&#13;&#10;&#13;&#10;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;1&quot;)&#13;&#10;&#13;&#10;&#9;--preset = panel : getModulatorByName(&quot;Efx1_Dist_Preset&quot;):getModulatorValue()&#9;-- 0x60 == 96&#13;&#10;&#9;preset = valueMapped&#13;&#10;&#13;&#10;&#9;PresetValueModName = string.format(&quot;Efx%d_Dist_Preset_Value&quot;, efxNum)&#13;&#10;&#9;PresetValueMod = panel : getModulatorByName(PresetValueModName)&#13;&#10;&#9;PresetValueMod : setModulatorValue (preset, false, false, false)&#13;&#10;&#9;&#13;&#10;&#9;onOffButtonModName = string.format(&quot;Efx%d_Dist_On&quot;, efxNum)&#13;&#10;&#9;preGainModName = string.format(&quot;Efx%d_Dist_PreGain&quot;, efxNum)&#13;&#10;&#9;typeModName = string.format(&quot;Efx%d_Dist_Type&quot;, efxNum)&#13;&#10;&#9;hiCutModName = string.format(&quot;Efx%d_Dist_FilterFreq&quot;, efxNum)&#9;&#9;&#9;&#9;&#9;-- low pass filter frequency == High-Cut Filter Frequency&#13;&#10;&#9;resoModName = string.format(&quot;Efx%d_Dist_FilterReso&quot;, efxNum)&#9;&#9;&#9;&#9;&#9;-- low pass filter resonance == Low Lev Cut&#13;&#10;&#9;postGainModName = string.format(&quot;Efx%d_Dist_PostGain&quot;, efxNum)&#13;&#10;&#9;driveModName = string.format(&quot;Efx%d_Dist_Drive&quot;, efxNum)&#13;&#10;&#9;rCModName = string.format(&quot;Efx%d_Dist_Rc&quot;, efxNum)&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- RC type low pass filter value == RC LP Filter&#13;&#10;&#13;&#10;&#9;onOffButton = panel:getModulatorByName(onOffButtonModName)&#9;-- 0x61 == 97&#13;&#10;&#13;&#10;&#9;preGain= panel : getModulatorByName(preGainModName)&#9;&#9;&#9;-- 0x62 == 98&#9;&#9;-- &lt;-- OK&#13;&#10;&#9;distType= panel : getModulatorByName(typeModName)&#9;&#9;&#9;-- 0x63 == 99&#9;&#9;-- &lt;-- OK&#13;&#10;&#9;hiCut= panel : getModulatorByName(hiCutModName)&#9;&#9;&#9;&#9;-- 0x64 == 100&#13;&#10;&#9;reso= panel : getModulatorByName(resoModName)&#9;&#9;&#9;&#9;-- 0x65 == 101&#13;&#10;&#9;postGain= panel : getModulatorByName(postGainModName)&#9;&#9;-- 0x66 == 102&#9;&#9;-- &lt;-- OK&#13;&#10;&#9;drive= panel : getModulatorByName(driveModName)&#9;&#9;&#9;&#9;-- 0x67 == 103&#9;&#9;-- &lt;-- OK&#13;&#10;&#9;rC= panel : getModulatorByName(rCModName)&#9;&#9;&#9;&#9;&#9;-- 0x68 == 104&#13;&#10;&#13;&#10;&#9;-- Values for all Presets&#13;&#10;&#9;-- Preset value for Hi-Cut Filter Q is always 0. &#9;&#9;&#9;&#9;-- https://de.wikipedia.org/wiki/G%C3%BCtefaktor&#13;&#10;&#9;--preHighPassFilter : setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#13;&#10;&#9;distPresetLabelModName = string.format(&quot;Efx%d_Dist_Current_Preset&quot;, efxNum)&#13;&#10;&#9;distPresetListModName = string.format(&quot;Efx%d_Dist_Preset&quot;, efxNum)&#13;&#10;&#13;&#10;&#9;-- update Label to current Preset Name &#13;&#10;&#9;setEfxPresetLabel(distPresetLabelModName, distPresetListModName, valueMapped)&#13;&#10;&#13;&#10;&#9;if(preset == 0) then&#13;&#10;&#9;&#9;onOffButton:setModulatorValue((0),false,false, false)&#13;&#10;&#9;else &#13;&#10;&#9;&#9;onOffButton:setModulatorValue((1),false,false, false)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;if(preset==0)then&#13;&#10;&#9;drive:setModulatorValue((0),false,false, false)&#13;&#10;&#9;distType:setModulatorValue((0),false,false, false)&#13;&#10;&#9;hiCut:setModulatorValue((127),false,false, false)&#13;&#10;&#9;postGain:setModulatorValue((127),false,false, false)&#13;&#10;&#9;preGain:setModulatorValue((127),false,false, false)&#13;&#10;&#9;rC:setModulatorValue((127),false,false, false)&#13;&#10;&#9;reso:setModulatorValue((0),false,false, false)&#13;&#10;&#13;&#10;elseif(preset==1)then&#13;&#10;&#9;drive:setModulatorValue((3),false,false, false)&#13;&#10;&#9;distType:setModulatorValue((1),false,false, false)&#13;&#10;&#9;hiCut:setModulatorValue((100),false,false, false)&#13;&#10;&#9;postGain:setModulatorValue((60),false,false, false)&#13;&#10;&#9;preGain:setModulatorValue((64),false,false, false)&#13;&#10;&#9;rC:setModulatorValue((127),false,false, false)&#13;&#10;&#9;reso:setModulatorValue((1),false,false, false)&#13;&#10;&#13;&#10;elseif(preset==2)then&#13;&#10;&#9;drive:setModulatorValue((4),false,false, false)&#13;&#10;&#9;distType:setModulatorValue((2),false,false, false)&#13;&#10;&#9;hiCut:setModulatorValue((80),false,false, false)&#13;&#10;&#9;postGain:setModulatorValue((50),false,false, false)&#13;&#10;&#9;preGain:setModulatorValue((64),false,false, false)&#13;&#10;&#9;rC:setModulatorValue((127),false,false, false)&#13;&#10;&#9;reso:setModulatorValue((2),false,false, false)&#13;&#10;&#13;&#10;elseif(preset==3)then&#13;&#10;&#9;drive:setModulatorValue((5),false,false, false)&#13;&#10;&#9;distType:setModulatorValue((1),false,false, false)&#13;&#10;&#9;hiCut:setModulatorValue((70),false,false, false)&#13;&#10;&#9;postGain:setModulatorValue((40),false,false, false)&#13;&#10;&#9;preGain:setModulatorValue((64),false,false, false)&#13;&#10;&#9;rC:setModulatorValue((127),false,false, false)&#13;&#10;&#9;reso:setModulatorValue((2),false,false, false)&#13;&#10;&#13;&#10;elseif(preset==4)then&#13;&#10;&#9;drive:setModulatorValue((5),false,false, false)&#13;&#10;&#9;distType:setModulatorValue((2),false,false, false)&#13;&#10;&#9;hiCut:setModulatorValue((70),false,false, false)&#13;&#10;&#9;postGain:setModulatorValue((40),false,false, false)&#13;&#10;&#9;preGain:setModulatorValue((64),false,false, false)&#13;&#10;&#9;rC:setModulatorValue((127),false,false, false)&#13;&#10;&#9;reso:setModulatorValue((3),false,false, false)&#13;&#10;&#13;&#10;elseif(preset==5)then&#13;&#10;&#9;drive:setModulatorValue((6),false,false, false)&#13;&#10;&#9;distType:setModulatorValue((1),false,false, false)&#13;&#10;&#9;hiCut:setModulatorValue((60),false,false, false)&#13;&#10;&#9;postGain:setModulatorValue((40),false,false, false)&#13;&#10;&#9;preGain:setModulatorValue((64),false,false, false)&#13;&#10;&#9;rC:setModulatorValue((127),false,false, false)&#13;&#10;&#9;reso:setModulatorValue((3),false,false, false)&#13;&#10;&#13;&#10;elseif(preset==6)then&#13;&#10;&#9;drive:setModulatorValue((6),false,false, false)&#13;&#10;&#9;distType:setModulatorValue((2),false,false, false)&#13;&#10;&#9;hiCut:setModulatorValue((60),false,false, false)&#13;&#10;&#9;postGain:setModulatorValue((40),false,false, false)&#13;&#10;&#9;preGain:setModulatorValue((64),false,false, false)&#13;&#10;&#9;rC:setModulatorValue((127),false,false, false)&#13;&#10;&#9;reso:setModulatorValue((3),false,false, false)&#13;&#10;&#13;&#10;elseif(preset==7.0)then&#13;&#10;&#9;console(&quot;Debug floating 7 match: &quot;.. preset)&#13;&#10;&#9;drive:setModulatorValue((6),false,false, false)&#13;&#10;&#9;distType:setModulatorValue((6),false,false, false)&#13;&#10;&#9;hiCut:setModulatorValue((50),false,false, false)&#13;&#10;&#9;postGain:setModulatorValue((30),false,false, false)&#13;&#10;&#9;preGain:setModulatorValue((64),false,false, false)&#13;&#10;&#9;rC:setModulatorValue((80),false,false, false)&#13;&#10;&#9;reso:setModulatorValue((3),false,false, false)&#13;&#10;&#13;&#10;elseif(preset==8)then&#13;&#10;&#9;console(&quot;Debug floating 8 match: &quot;.. preset)&#13;&#10;&#9;drive:setModulatorValue((7),false,false, false)&#13;&#10;&#9;distType:setModulatorValue((1),false,false, false)&#13;&#10;&#9;hiCut:setModulatorValue((40),false,false, false)&#13;&#10;&#9;postGain:setModulatorValue((30),false,false, false)&#13;&#10;&#9;preGain:setModulatorValue((64),false,false, false)&#13;&#10;&#9;rC:setModulatorValue((127),false,false, false)&#13;&#10;&#9;reso:setModulatorValue((3),false,false, false)&#13;&#10;&#13;&#10;elseif(preset==9)then&#13;&#10;&#9;drive:setModulatorValue((5),false,false, false)&#13;&#10;&#9;distType:setModulatorValue((5),false,false, false)&#13;&#10;&#9;hiCut:setModulatorValue((60),false,false, false)&#13;&#10;&#9;postGain:setModulatorValue((40),false,false, false)&#13;&#10;&#9;preGain:setModulatorValue((64),false,false, false)&#13;&#10;&#9;rC:setModulatorValue((80),false,false, false)&#13;&#10;&#9;reso:setModulatorValue((3),false,false, false)&#13;&#10;&#13;&#10;elseif(preset==10)then&#13;&#10;&#9;drive:setModulatorValue((6),false,false, false)&#13;&#10;&#9;distType:setModulatorValue((7),false,false, false)&#13;&#10;&#9;hiCut:setModulatorValue((80),false,false, false)&#13;&#10;&#9;postGain:setModulatorValue((40),false,false, false)&#13;&#10;&#9;preGain:setModulatorValue((64),false,false, false)&#13;&#10;&#9;rC:setModulatorValue((127),false,false, false)&#13;&#10;&#9;reso:setModulatorValue((3),false,false, false)&#13;&#10;&#13;&#10;elseif(preset==11)then&#13;&#10;&#9;drive:setModulatorValue((5),false,false, false)&#13;&#10;&#9;distType:setModulatorValue((4),false,false, false)&#13;&#10;&#9;hiCut:setModulatorValue((110),false,false, false)&#13;&#10;&#9;postGain:setModulatorValue((40),false,false, false)&#13;&#10;&#9;preGain:setModulatorValue((64),false,false, false)&#13;&#10;&#9;rC:setModulatorValue((127),false,false, false)&#13;&#10;&#9;reso:setModulatorValue((2),false,false, false)&#13;&#10;&#13;&#10;elseif(preset==12)then&#13;&#10;&#9;drive:setModulatorValue((7),false,false, false)&#13;&#10;&#9;distType:setModulatorValue((3),false,false, false)&#13;&#10;&#9;hiCut:setModulatorValue((40),false,false, false)&#13;&#10;&#9;postGain:setModulatorValue((40),false,false, false)&#13;&#10;&#9;preGain:setModulatorValue((64),false,false, false)&#13;&#10;&#9;rC:setModulatorValue((127),false,false, false)&#13;&#10;&#9;reso:setModulatorValue((4),false,false, false)&#13;&#10;&#13;&#10;elseif(preset==13)then&#13;&#10;&#9;drive:setModulatorValue((7),false,false, false)&#13;&#10;&#9;distType:setModulatorValue((0),false,false, false)&#13;&#10;&#9;hiCut:setModulatorValue((80),false,false, false)&#13;&#10;&#9;postGain:setModulatorValue((30),false,false, false)&#13;&#10;&#9;preGain:setModulatorValue((64),false,false, false)&#13;&#10;&#9;rC:setModulatorValue((127),false,false, false)&#13;&#10;&#9;reso:setModulatorValue((4),false,false, false)&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;0&quot;)&#13;&#10;&#13;&#10;end&#13;&#10;"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="c71f06a4c2fa433ba57ee69de340d2ff" luaMethodValid="1"/>
        <luaMethod luaMethodName="setWahPresetEfx" luaMethodCode="--&#13;&#10;-- Called when a modulator value changes&#13;&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;&#10;-- @value    new numeric value of the modulator&#13;&#10;--&#13;&#10;setWahPresetEfx = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#13;&#10;&#9;methodName = &quot;setWahPresetEfx&quot;&#13;&#10;&#9;if (loadingStage ~= nil) then &#13;&#10;&#9;&#9;if (loadingStage == getStateValueIgnoredAutomatedOnModChangeEvents()) then&#13;&#10;&#9;&#9;&#9;console (string.format(&quot;---------&gt;%s is in state: ignored automated onModChange Event == %s - stop Method&quot;, methodName, tostring(loadingCompleteFlag)))&#13;&#10;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;modName = mod:getProperty(&quot;name&quot;)&#13;&#10;&#9;&#13;&#10;&#9;efxNum = 0&#13;&#10;&#9;if (modName == &quot;Efx1_Wah_Preset&quot;) then&#13;&#10;&#9;&#9;efxNum = 1&#13;&#10;&#9;elseif (modName == &quot;Efx2_Wah_Preset&quot;) then&#13;&#10;&#9;&#9;efxNum = 2&#13;&#10;&#9;elseif (modName == &quot;Efx3_Wah_Preset&quot;) then&#13;&#10;&#9;&#9;efxNum = 3&#13;&#10;&#9;else&#13;&#10;&#9;&#9;console (string.format(&quot;setWahPresetEfx () executed from mod=%s, should not happen!&quot;, modName))&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;valueMapped = mod:getValueMapped()&#13;&#10;&#13;&#10;&#9;--console (&quot;modName == &quot; .. modName)&#13;&#10;&#9;--console (&quot;value == &quot; .. value)&#13;&#10;&#9;--console (&quot;valueMapped == &quot; .. valueMapped)&#13;&#10;&#13;&#10;&#9;validPreset = isPresetValid(mod, value)&#13;&#10;&#13;&#10;&#9;if validPreset == true then&#13;&#10;&#9;&#9;setWahPresetEfx_ (efxNum, valueMapped, true)&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- &lt;--- individuell&#13;&#10;&#9;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;1&quot;)&#9;&#9;&#9;&#9;&#9;&#9;-- not needed ? Component MIDI Implementation set to NONE&#13;&#10;&#9;&#9;mod:setModulatorValue(mod:getMaxNonMapped(),false,false,false)&#9;&#9;&#9;-- careful: endless loop LAST ITEM NEEDS MAPPED VALUE=99&#13;&#10;&#9;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;0&quot;)&#13;&#10;&#9;end&#13;&#10;end &#13;&#10;&#13;&#10;&#13;&#10;setWahPresetEfx_ = function (efxNum, valueMapped, midiOutputEnabled)&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;setWahPresetEfx_ (efxNum=%d, valueMapped=%d, midiOutputEnabled=%s)&quot;, efxNum, valueMapped, tostring(midiOutputEnabled)))&#13;&#10;&#9;&#13;&#10;&#9;if(efxNum &lt; 1 and efxNum &gt; 3) then&#13;&#10;&#9;&#9;console (&quot;non valid efxNum, break setWahPresetEfx_&quot;)&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (midiOutputEnabled == true) then&#13;&#10;&#9;&#9;-- Built Message CC/SysEx&#13;&#10;&#9;&#9;nrpnHigh = 0x3a&#9;+ (efxNum-1)&#9;--&#9;EFX Modul 0x3a, 0x3b, 0x3c&#13;&#10;&#9;&#9;nrpnLow = 0x50&#9;&#9;&#9;&#9;&#9;--&#9;Insert MFX Wah-Wah Presets &#13;&#10;&#9;&#9;data = valueMapped&#9;&#9;&#9;&#9;-- &#9;int value&#13;&#10;&#13;&#10;&#9;&#9;-- Send Message&#13;&#10;&#9;&#9;sendNRPNMessage( nrpnHigh, nrpnLow, data )&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- disable Midi Messages&#13;&#10;&#13;&#10;&#9;-- Update UI (Slider = Parameter values)&#13;&#10;&#9;setWahPresetEfx_Parameters(efxNum, valueMapped, false)&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- &lt;--- individuell&#13;&#10;&#13;&#10;&#9;-- Set Combobox to Custom&#13;&#10;&#13;&#10;&#9;-- enable Midi Messages&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;setWahPresetEfx_Parameters = function (efxNum, valueMapped, midiOutputEnabled)&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;setWahPresetEfx_Parameters (efxNum=%d, valueMapped=%d, midiOutputEnabled=%s)&quot;, tonumber(efxNum,10), tonumber(valueMapped,10), tostring(midiOutputEnabled)))&#13;&#10;&#13;&#10;    panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;1&quot;)&#13;&#10;&#13;&#10;    --preset    = panel : getModulatorByName(&quot;Efx_Wah_Preset&quot;):getModulatorValue()&#13;&#10;&#9;preset = valueMapped&#13;&#10;&#13;&#10;&#9;PresetValueModName = string.format(&quot;Efx%d_Wah_Preset_Value&quot;, efxNum)&#13;&#10;&#9;PresetValueMod = panel : getModulatorByName(PresetValueModName)&#13;&#10;&#9;PresetValueMod : setModulatorValue (preset, false, false, false)&#13;&#10;&#9;&#13;&#10;&#9;filterTypeModName = string.format(&quot;Efx%d_Wah_Type&quot;, efxNum)&#13;&#10;&#9;frequencyModName = string.format(&quot;Efx%d_Wah_Position&quot;, efxNum)&#13;&#10;&#9;resonanceModName = string.format(&quot;Efx%d_Wah_Resonance&quot;, efxNum)&#13;&#10;&#9;sensitivityModName = string.format(&quot;Efx%d_Wah_Sensitivity&quot;, efxNum)&#13;&#10;&#13;&#10;    filterType = panel : getModulatorByName(filterTypeModName)&#13;&#10;    frequency = panel : getModulatorByName(frequencyModName)&#13;&#10;    resonance = panel : getModulatorByName(resonanceModName)&#13;&#10;    sensitivity = panel : getModulatorByName(sensitivityModName)&#13;&#10;&#13;&#10;&#9;wahPresetLabelModName = string.format(&quot;Efx%d_Wah_Current_Preset&quot;, efxNum)&#13;&#10;&#9;wahPresetListModName = string.format(&quot;Efx%d_Wah_Preset&quot;, efxNum)&#13;&#10;&#9;&#13;&#10;&#9;-- update Label to current Preset Name &#13;&#10;&#9;setEfxPresetLabel(wahPresetLabelModName, wahPresetListModName, valueMapped)&#13;&#10;&#13;&#10;&#13;&#10;    if(preset==0)then&#13;&#10;&#13;&#10;    filterType : setModulatorValue((0),false,false, false)&#13;&#10;    frequency : setModulatorValue((127),false,false, false)&#13;&#10;    resonance : setModulatorValue((0),false,false, false)&#13;&#10;    sensitivity : setModulatorValue((0),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==1)then&#13;&#10;    filterType : setModulatorValue((0),false,false, false)&#13;&#10;    frequency : setModulatorValue((67),false,false, false)&#13;&#10;    resonance : setModulatorValue((107),false,false, false)&#13;&#10;    sensitivity : setModulatorValue((127),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==2)then&#13;&#10;    filterType : setModulatorValue((0),false,false, false)&#13;&#10;    frequency : setModulatorValue((50),false,false, false)&#13;&#10;    resonance : setModulatorValue((75),false,false, false)&#13;&#10;    sensitivity : setModulatorValue((127),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==3)then&#13;&#10;    filterType : setModulatorValue((1),false,false, false)&#13;&#10;    frequency : setModulatorValue((70),false,false, false)&#13;&#10;    resonance : setModulatorValue((100),false,false, false)&#13;&#10;    sensitivity : setModulatorValue((100),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==4)then&#13;&#10;    filterType : setModulatorValue((0),false,false, false)&#13;&#10;    frequency : setModulatorValue((127),false,false, false)&#13;&#10;    resonance : setModulatorValue((80),false,false, false)&#13;&#10;    sensitivity : setModulatorValue((0),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==5)then&#13;&#10;    filterType : setModulatorValue((1),false,false, false)&#13;&#10;    frequency : setModulatorValue((64),false,false, false)&#13;&#10;    resonance : setModulatorValue((80),false,false, false)&#13;&#10;    sensitivity : setModulatorValue((0),false,false, false)&#13;&#10;&#13;&#10;    end&#13;&#10;&#13;&#10;    panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;0&quot;)&#13;&#10;&#13;&#10;    end&#13;&#10;&#13;&#10;&#13;&#10;"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="d76bbe039b134102a760f7b8b8b563c9" luaMethodValid="1"/>
        <luaMethod luaMethodName="setDelayPresetEfx" luaMethodCode="--&#13;&#10;-- Called when a modulator value changes&#13;&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;&#10;-- @value    new numeric value of the modulator&#13;&#10;--&#13;&#10;setDelayPresetEfx = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#13;&#10;&#9;methodName = &quot;setDelayPresetEfx&quot;&#13;&#10;&#9;if (loadingStage ~= nil) then &#13;&#10;&#9;&#9;if (loadingStage == getStateValueIgnoredAutomatedOnModChangeEvents()) then&#13;&#10;&#9;&#9;&#9;console (string.format(&quot;---------&gt;%s is in state: ignored automated onModChange Event == %s - stop Method&quot;, methodName, tostring(loadingCompleteFlag)))&#13;&#10;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;modName = mod:getProperty(&quot;name&quot;)&#13;&#10;&#9;&#13;&#10;&#9;efxNum = 0&#13;&#10;&#9;if (modName == &quot;Efx1_Delay_Preset&quot;) then&#13;&#10;&#9;&#9;efxNum = 1&#13;&#10;&#9;elseif (modName == &quot;Efx2_Delay_Preset&quot;) then&#13;&#10;&#9;&#9;efxNum = 2&#13;&#10;&#9;elseif (modName == &quot;Efx3_Delay_Preset&quot;) then&#13;&#10;&#9;&#9;efxNum = 3&#13;&#10;&#9;else&#13;&#10;&#9;&#9;console (string.format(&quot;setDelayPresetEfx () executed from mod=%s, should not happen!&quot;, modName))&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;valueMapped = mod:getValueMapped()&#13;&#10;&#13;&#10;&#9;--console (&quot;modName == &quot; .. modName)&#13;&#10;&#9;--console (&quot;value == &quot; .. value)&#13;&#10;&#9;--console (&quot;valueMapped == &quot; .. valueMapped)&#13;&#10;&#13;&#10;&#9;validPreset = isPresetValid(mod, value)&#13;&#10;&#13;&#10;&#9;if validPreset == true then&#13;&#10;&#9;&#9;setDelayPresetEfx_ (efxNum, valueMapped, true)&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- &lt;--- individuell&#13;&#10;&#9;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;1&quot;)&#9;&#9;&#9;&#9;&#9;&#9;-- not needed ? Component MIDI Implementation set to NONE&#13;&#10;&#9;&#9;mod:setModulatorValue(mod:getMaxNonMapped(),false,false,false)&#9;&#9;&#9;-- careful: endless loop LAST ITEM NEEDS MAPPED VALUE=99&#13;&#10;&#9;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;0&quot;)&#13;&#10;&#9;end&#13;&#10;end &#13;&#10;&#13;&#10;&#13;&#10;setDelayPresetEfx_ = function (efxNum, valueMapped, midiOutputEnabled)&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;setDelayPresetEfx_ (efxNum=%d, valueMapped=%d, midiOutputEnabled=%s)&quot;, efxNum, valueMapped, tostring(midiOutputEnabled)))&#13;&#10;&#13;&#10;&#9;if(efxNum &lt; 1 and efxNum &gt; 3) then&#13;&#10;&#9;&#9;console (&quot;non valid efxNum, break setDelayPresetEfx_&quot;)&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;if (midiOutputEnabled == true) then&#13;&#10;&#9;&#9;-- Built Message CC/SysEx&#13;&#10;&#9;&#9;nrpnHigh = 0x3a&#9;+ (efxNum-1)&#9;--&#9;EFX Modul 0x3a, 0x3b, 0x3c&#13;&#10;&#9;&#9;nrpnLow = 0x58&#9;&#9;&#9;&#9;&#9;--&#9;Insert MFX Delay Presets &#13;&#10;&#9;&#9;data = valueMapped&#9;&#9;&#9;&#9;-- &#9;int value&#13;&#10;&#13;&#10;&#9;&#9;-- Send Message&#13;&#10;&#9;&#9;sendNRPNMessage( nrpnHigh, nrpnLow, data )&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- disable Midi Messages&#13;&#10;&#13;&#10;&#9;-- Update UI (Slider = Parameter values)&#13;&#10;&#9;setDelayPresetEfx_Parameters(efxNum, valueMapped, false)&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- &lt;--- individuell&#13;&#10;&#13;&#10;&#9;-- Set Combobox to Custom&#13;&#10;&#13;&#10;&#9;-- enable Midi Messages&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;setDelayPresetEfx_Parameters = function (efxNum, valueMapped, midiOutputEnabled)&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;setDelayPresetEfx_Parameters (efxNum=%d, valueMapped=%d, midiOutputEnabled=%s)&quot;, tonumber(efxNum,10), tonumber(valueMapped,10), tostring(midiOutputEnabled)))&#13;&#10;&#13;&#10;    panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;1&quot;)&#13;&#10;&#13;&#10;    --preset = panel : getModulatorByName(&quot;Efx%d_Delay_Preset&quot;):getModulatorValue()&#13;&#10;&#9;preset = valueMapped&#13;&#10;&#13;&#10;&#9;PresetValueModName = string.format(&quot;Efx%d_Delay_Preset_Value&quot;, efxNum)&#13;&#10;&#9;PresetValueMod = panel : getModulatorByName(PresetValueModName)&#13;&#10;&#9;PresetValueMod : setModulatorValue (preset, false, false, false)&#13;&#10;&#9;&#13;&#10;&#9;onOffButtonModName = string.format(&quot;Efx%d_Delay_On&quot;,efxNum)&#13;&#10;&#9;modeModName = string.format(&quot;Efx%d_Delay_Mode&quot;,efxNum)&#13;&#10;&#9;levelModName = string.format(&quot;Efx%d_Delay_Level&quot;,efxNum)&#13;&#10;&#9;delayTimeModName = string.format(&quot;Efx%d_Delay_Time&quot;,efxNum)&#13;&#10;&#9;feedbackModName = string.format(&quot;Efx%d_Delay_Feedback&quot;,efxNum)&#13;&#10;&#9;hdampModName = string.format(&quot;Efx%d_Delay_Hdamp&quot;,efxNum)&#13;&#10;&#9;preLowPassModName = string.format(&quot;Efx%d_Delay_PreLp&quot;,efxNum)&#13;&#10;&#13;&#10;    mode = panel : getModulatorByName(modeModName)&#13;&#10;    level = panel : getModulatorByName(levelModName)&#13;&#10;    delayTime = panel : getModulatorByName(delayTimeModName)&#13;&#10;    feedback = panel : getModulatorByName(feedbackModName)&#13;&#10;&#9;hdamp = panel : getModulatorByName(hdampModName)&#13;&#10;&#9;preLowPass = panel : getModulatorByName(preLowPassModName)&#13;&#10;&#9;&#13;&#10;&#9;onOffButton = panel : getModulatorByName(onOffButtonModName)&#13;&#10;&#13;&#10;&#9;-- Values for all Presets&#13;&#10;&#9;hdamp : setModulatorValue((0),false,false, false)&#13;&#10;&#9;preLowPass : setModulatorValue((127),false,false, false)&#13;&#10;&#13;&#10;&#9;-- update Label to current Preset Name &#13;&#10;&#9;PresetLabelModName = string.format(&quot;Efx%d_Delay_Current_Preset&quot;, efxNum)&#13;&#10;&#9;PresetListModName = string.format(&quot;Efx%d_Delay_Preset&quot;, efxNum)&#13;&#10;&#9;setEfxPresetLabel(PresetLabelModName, PresetListModName, valueMapped)&#13;&#10;&#13;&#10;    if(preset == 0) then&#13;&#10;        onOffButton:setModulatorValue((0), false, false, false)&#13;&#10;    else&#13;&#10;        onOffButton:setModulatorValue((1), false, false, false)&#13;&#10;    end&#13;&#10;&#13;&#10;    if(preset==0)then&#13;&#10;&#9;&#9;mode : setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;level : setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;delayTime : setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;feedback : setModulatorValue((0),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==1)then&#13;&#10;&#9;&#9;mode : setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;level : setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;delayTime : setModulatorValue((20),false,false, false)&#13;&#10;&#9;&#9;feedback : setModulatorValue((8),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==2)then&#13;&#10;&#9;&#9;mode : setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;level : setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;delayTime : setModulatorValue((35),false,false, false)&#13;&#10;&#9;&#9;feedback : setModulatorValue((20),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==3)then&#13;&#10;&#9;&#9;mode : setModulatorValue((1),false,false, false)&#13;&#10;&#9;&#9;level : setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;delayTime : setModulatorValue((50),false,false, false)&#13;&#10;&#9;&#9;feedback : setModulatorValue((16),false,false, false)&#13;&#10;&#13;&#10;    elseif(preset==4)then&#13;&#10;&#9;&#9;mode : setModulatorValue((1),false,false, false)&#13;&#10;&#9;&#9;level : setModulatorValue((64),false,false, false)&#13;&#10;&#9;&#9;delayTime : setModulatorValue((70),false,false, false)&#13;&#10;&#9;&#9;feedback : setModulatorValue((32),false,false, false)&#13;&#10;    end&#13;&#10;&#13;&#10;    panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;0&quot;)&#13;&#10;&#13;&#10;    end&#13;&#10;"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="443f31d2e8494346a8123ae4059df980" luaMethodValid="1"/>
        <luaMethod luaMethodName="setAmpPresetEfx" luaMethodCode="--&#13;&#10;-- Called when a modulator value changes&#13;&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;&#10;-- @value    new numeric value of the modulator&#13;&#10;--&#13;&#10;setAmpPresetEfx = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#13;&#10;&#9;methodName = &quot;setAmpPresetEfx&quot;&#13;&#10;&#9;if (loadingStage ~= nil) then &#13;&#10;&#9;&#9;if (loadingStage == getStateValueIgnoredAutomatedOnModChangeEvents()) then&#13;&#10;&#9;&#9;&#9;console (string.format(&quot;---------&gt;%s is in state: ignored automated onModChange Event == %s - stop Method&quot;, methodName, tostring(loadingCompleteFlag)))&#13;&#10;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;modName = mod:getProperty(&quot;name&quot;)&#13;&#10;&#9;&#13;&#10;&#9;efxNum = 0&#13;&#10;&#9;if (modName == &quot;Efx1_Mix_Preset&quot;) then&#13;&#10;&#9;&#9;efxNum = 1&#13;&#10;&#9;elseif (modName == &quot;Efx2_Mix_Preset&quot;) then&#13;&#10;&#9;&#9;efxNum = 2&#13;&#10;&#9;elseif (modName == &quot;Efx3_Mix_Preset&quot;) then&#13;&#10;&#9;&#9;efxNum = 3&#13;&#10;&#9;else&#13;&#10;&#9;&#9;console (string.format(&quot;setAmpPresetEfx () executed from mod=%s, should not happen!&quot;, modName))&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;valueMapped = mod:getValueMapped()&#13;&#10;&#13;&#10;&#9;--console (&quot;modName == &quot; .. modName)&#13;&#10;&#9;--console (&quot;value == &quot; .. value)&#13;&#10;&#9;--console (&quot;valueMapped == &quot; .. valueMapped)&#13;&#10;&#13;&#10;&#9;validPreset = isPresetValid(mod, value)&#13;&#10;&#13;&#10;&#9;if validPreset == true then&#13;&#10;&#9;&#9;setAmpPresetEfx_ (efxNum, valueMapped, true)&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- &lt;--- individuell&#13;&#10;&#9;&#9;--panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;1&quot;)&#9;&#9;&#9;&#9;&#9;&#9;-- not needed ? Component MIDI Implementation set to NONE&#13;&#10;&#9;&#9;mod:setModulatorValue(mod:getMaxNonMapped(),false,false,false)&#9;&#9;&#9;-- careful: endless loop LAST ITEM NEEDS MAPPED VALUE=99&#13;&#10;&#9;&#9;--panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;0&quot;)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;if(mod:getMaxNonMapped() &lt; value) then&#13;&#10;&#9;&#9;&#9;setEfxPresetLabel(string.format(&quot;Efx%d_Mix_Current_Preset&quot;, efxNum), &quot;Custom&quot;)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;setAmpPresetEfx_ = function (efxNum, valueMapped, midiOutputEnabled)&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;setAmpPresetEfx_ (efxNum=%d, valueMapped=%d, midiOutputEnabled=%s)&quot;, efxNum, valueMapped, tostring(midiOutputEnabled)))&#13;&#10;&#9;&#13;&#10;&#9;if(efxNum &lt; 1 and efxNum &gt; 3) then&#13;&#10;&#9;&#9;console (&quot;non valid efxNum, break setAmpPresetEfx_&quot;)&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;if (midiOutputEnabled == true) then&#13;&#10;&#9;&#9;-- Built Message CC/SysEx&#13;&#10;&#9;&#9;nrpnHigh = 0x3a&#9;+ (efxNum-1)&#9;--&#9;EFX Modul 0x3a, 0x3b, 0x3c&#13;&#10;&#9;&#9;nrpnLow = 0x20&#9;&#9;&#9;&#9;&#9;--&#9;Insert MFX AMP-Model Presets &#13;&#10;&#9;&#9;data = valueMapped&#9;&#9;&#9;&#9;-- &#9;int value&#13;&#10;&#13;&#10;&#9;&#9;-- Send Message&#13;&#10;&#9;&#9;sendNRPNMessage (nrpnHigh,nrpnLow,data)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;setAmpPresetEfx_Parameters(efxNum, valueMapped, false)&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- &lt;--- individuell&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;setAmpPresetEfx_Parameters = function (efxNum, valueMapped, midiOutputEnabled)&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;setAmpPresetEfx_Parameters (efxNum=%d, valueMapped=%d, midiOutputEnabled=%s)&quot;, efxNum, valueMapped, tostring(midiOutputEnabled)))&#13;&#10;    panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;1&quot;)&#13;&#10;&#13;&#10;    --preset = panel : getModulatorByName(&quot;Efx1_Mix_Preset&quot;):getModulatorValue()&#13;&#10;&#9;preset = valueMapped&#13;&#10;&#13;&#10;&#9;PresetValueModName = string.format(&quot;Efx%d_Mix_Preset_Value&quot;, efxNum)&#13;&#10;&#9;PresetValueMod = panel : getModulatorByName(PresetValueModName)&#13;&#10;&#9;PresetValueMod : setModulatorValue (preset, false, false, false)&#13;&#10;&#13;&#10;&#9;-- update Label to current Preset Name &#13;&#10;&#9;PresetLabelModName = string.format(&quot;Efx%d_Mix_Current_Preset&quot;, efxNum)&#13;&#10;&#9;PresetListModName = string.format(&quot;Efx%d_Mix_Preset&quot;, efxNum)&#13;&#10;&#9;setEfxPresetLabel(PresetLabelModName, PresetListModName, valueMapped)&#13;&#10;&#13;&#10;    inputGain= panel : getModulatorByName(string.format(&quot;Efx%d_Mix_Gain&quot;, efxNum))&#13;&#10;    loCutFreq= panel : getModulatorByName(string.format(&quot;Efx%d_Mix_LoCutFreq&quot;, efxNum))&#13;&#10;    hiCutFreq= panel : getModulatorByName(string.format(&quot;Efx%d_Mix_HiCutFreq&quot;, efxNum))&#13;&#10;    compPreset= panel : getModulatorByName(string.format(&quot;Efx%d_CompLimit_Preset&quot;, efxNum))&#13;&#10;    distPreset= panel : getModulatorByName(string.format(&quot;Efx%d_Dist_Preset&quot;, efxNum))&#13;&#10;    WahPreset= panel : getModulatorByName(string.format(&quot;Efx%d_Wah_Preset&quot;, efxNum))&#13;&#10;    eqPreset= panel : getModulatorByName(string.format(&quot;Efx%d_EQ_Preset&quot;, efxNum))&#13;&#10;&#13;&#10;&#9;outputLevel = panel : getModulatorByName(string.format(&quot;Efx%d_Mix_OutputLevel&quot;, efxNum))&#13;&#10;&#9;outputLevel : setModulatorValue((127),false,false, false)&#13;&#10;&#13;&#10;    if(preset==0)then&#13;&#10;        inputGain:setModulatorValue((90),false,false, false)&#13;&#10;        loCutFreq:setModulatorValue((0),false,false, false)&#13;&#10;        hiCutFreq:setModulatorValue((127),false,false, false)&#13;&#10;&#13;&#10;        --compPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --distPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --WahPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --eqPreset:setModulatorValue((0),false,false, false)&#13;&#10;&#9;&#9;setCompPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setDistPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setWahPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setEQPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#13;&#10;    elseif(preset==1)then&#13;&#10;        inputGain:setModulatorValue((90),false,false, false)&#13;&#10;        loCutFreq:setModulatorValue((25),false,false, false)&#13;&#10;        hiCutFreq:setModulatorValue((90),false,false, false)&#13;&#10;&#13;&#10;        --compPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --distPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --WahPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --eqPreset:setModulatorValue((1),false,false, false)&#13;&#10;&#9;&#9;setCompPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setDistPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setWahPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setEQPresetEfx_Parameters(efxNum,1,false)&#13;&#10;&#13;&#10;    elseif(preset==2)then&#13;&#10;        inputGain:setModulatorValue((90),false,false, false)&#13;&#10;        loCutFreq:setModulatorValue((40),false,false, false)&#13;&#10;        hiCutFreq:setModulatorValue((127),false,false, false)&#13;&#10;&#13;&#10;        --compPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --distPreset:setModulatorValue((1),false,false, false)&#13;&#10;        --WahPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --eqPreset:setModulatorValue((2),false,false, false)&#13;&#10;&#9;&#9;setCompPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setDistPresetEfx_Parameters(efxNum,1,false)&#13;&#10;&#9;&#9;setWahPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setEQPresetEfx_Parameters(efxNum,2,false)&#13;&#10;&#13;&#10;    elseif(preset==3)then&#13;&#10;        inputGain:setModulatorValue((90),false,false, false)&#13;&#10;        loCutFreq:setModulatorValue((25),false,false, false)&#13;&#10;        hiCutFreq:setModulatorValue((90),false,false, false)&#13;&#10;&#13;&#10;        --compPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --distPreset:setModulatorValue((2),false,false, false)&#13;&#10;        --WahPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --eqPreset:setModulatorValue((3),false,false, false)&#13;&#10;&#9;&#9;setCompPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setDistPresetEfx_Parameters(efxNum,2,false)&#13;&#10;&#9;&#9;setWahPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setEQPresetEfx_Parameters(efxNum,3,false)&#13;&#10;&#13;&#10;    elseif(preset==4)then&#13;&#10;        inputGain:setModulatorValue((90),false,false, false)&#13;&#10;        loCutFreq:setModulatorValue((40),false,false, false)&#13;&#10;        hiCutFreq:setModulatorValue((70),false,false, false)&#13;&#10;&#13;&#10;        --compPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --distPreset:setModulatorValue((9),false,false, false)&#13;&#10;        --WahPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --eqPreset:setModulatorValue((4),false,false, false)&#13;&#10;&#9;&#9;setCompPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setDistPresetEfx_Parameters(efxNum,9,false)&#13;&#10;&#9;&#9;setWahPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setEQPresetEfx_Parameters(efxNum,4,false)&#13;&#10;&#13;&#10;    elseif(preset==5)then&#13;&#10;        inputGain:setModulatorValue((90),false,false, false)&#13;&#10;        loCutFreq:setModulatorValue((30),false,false, false)&#13;&#10;        hiCutFreq:setModulatorValue((80),false,false, false)&#13;&#10;&#13;&#10;        --compPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --distPreset:setModulatorValue((8),false,false, false)&#13;&#10;        --WahPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --eqPreset:setModulatorValue((5),false,false, false)&#13;&#10;&#9;&#9;setCompPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setDistPresetEfx_Parameters(efxNum,8,false)&#13;&#10;&#9;&#9;setWahPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setEQPresetEfx_Parameters(efxNum,5,false)&#13;&#10;&#13;&#10;    elseif(preset==6)then&#13;&#10;        inputGain:setModulatorValue((90),false,false, false)&#13;&#10;        loCutFreq:setModulatorValue((40),false,false, false)&#13;&#10;        hiCutFreq:setModulatorValue((80),false,false, false)&#13;&#10;&#13;&#10;        --compPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --distPreset:setModulatorValue((7),false,false, false)&#13;&#10;        --WahPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --eqPreset:setModulatorValue((6),false,false, false)&#13;&#10;&#9;&#9;setCompPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setDistPresetEfx_Parameters(efxNum,7,false)&#13;&#10;&#9;&#9;setWahPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setEQPresetEfx_Parameters(efxNum,6,false)&#13;&#10;&#13;&#10;    elseif(preset==7)then&#13;&#10;        inputGain:setModulatorValue((90),false,false, false)&#13;&#10;        loCutFreq:setModulatorValue((30),false,false, false)&#13;&#10;        hiCutFreq:setModulatorValue((70),false,false, false)&#13;&#10;&#13;&#10;        --compPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --distPreset:setModulatorValue((12),false,false, false)&#13;&#10;        --WahPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --eqPreset:setModulatorValue((7),false,false, false)&#13;&#10;&#9;&#9;setCompPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setDistPresetEfx_Parameters(efxNum,12,false)&#13;&#10;&#9;&#9;setWahPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setEQPresetEfx_Parameters(efxNum,7,false)&#13;&#10;&#13;&#10;    elseif(preset==8)then&#13;&#10;        inputGain:setModulatorValue((90),false,false, false)&#13;&#10;        loCutFreq:setModulatorValue((30),false,false, false)&#13;&#10;        hiCutFreq:setModulatorValue((70),false,false, false)&#13;&#10;&#13;&#10;        --compPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --distPreset:setModulatorValue((13),false,false, false)&#13;&#10;        --WahPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --eqPreset:setModulatorValue((8),false,false, false)&#13;&#10;&#9;&#9;setCompPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setDistPresetEfx_Parameters(efxNum,13,false)&#13;&#10;&#9;&#9;setWahPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setEQPresetEfx_Parameters(efxNum,8,false)&#13;&#10;&#13;&#10;    elseif(preset==9)then&#13;&#10;        inputGain:setModulatorValue((90),false,false, false)&#13;&#10;        loCutFreq:setModulatorValue((30),false,false, false)&#13;&#10;        hiCutFreq:setModulatorValue((70),false,false, false)&#13;&#10;&#13;&#10;        --compPreset:setModulatorValue((1),false,false, false)&#13;&#10;        --distPreset:setModulatorValue((12),false,false, false)&#13;&#10;        --WahPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --eqPreset:setModulatorValue((9),false,false, false)&#13;&#10;&#9;&#9;setCompPresetEfx_Parameters(efxNum,1,false)&#13;&#10;&#9;&#9;setDistPresetEfx_Parameters(efxNum,12,false)&#13;&#10;&#9;&#9;setWahPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setEQPresetEfx_Parameters(efxNum,9,false)&#13;&#10;&#13;&#10;    elseif(preset==10)then&#13;&#10;        inputGain:setModulatorValue((90),false,false, false)&#13;&#10;        loCutFreq:setModulatorValue((20),false,false, false)&#13;&#10;        hiCutFreq:setModulatorValue((80),false,false, false)&#13;&#10;&#13;&#10;        --compPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --distPreset:setModulatorValue((7),false,false, false)&#13;&#10;        --WahPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --eqPreset:setModulatorValue((10),false,false, false)&#13;&#10;&#9;&#9;setCompPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setDistPresetEfx_Parameters(efxNum,7,false)&#13;&#10;&#9;&#9;setWahPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setEQPresetEfx_Parameters(efxNum,10,false)&#13;&#10;&#13;&#10;    elseif(preset==11)then&#13;&#10;        inputGain:setModulatorValue((90),false,false, false)&#13;&#10;        loCutFreq:setModulatorValue((20),false,false, false)&#13;&#10;        hiCutFreq:setModulatorValue((80),false,false, false)&#13;&#10;&#13;&#10;        --compPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --distPreset:setModulatorValue((7),false,false, false)&#13;&#10;        --WahPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --eqPreset:setModulatorValue((11),false,false, false)&#13;&#10;&#9;&#9;setCompPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setDistPresetEfx_Parameters(efxNum,7,false)&#13;&#10;&#9;&#9;setWahPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setEQPresetEfx_Parameters(efxNum,11,false)&#13;&#10;&#13;&#10;    elseif(preset==12)then&#13;&#10;        inputGain:setModulatorValue((90),false,false, false)&#13;&#10;        loCutFreq:setModulatorValue((20),false,false, false)&#13;&#10;        hiCutFreq:setModulatorValue((80),false,false, false)&#13;&#10;&#13;&#10;        --compPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --distPreset:setModulatorValue((8),false,false, false)&#13;&#10;        --WahPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --eqPreset:setModulatorValue((12),false,false, false)&#13;&#10;&#9;&#9;setCompPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setDistPresetEfx_Parameters(efxNum,8,false)&#13;&#10;&#9;&#9;setWahPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setEQPresetEfx_Parameters(efxNum,12,false)&#13;&#10;&#13;&#10;    elseif(preset==13)then&#13;&#10;        inputGain:setModulatorValue((90),false,false, false)&#13;&#10;        loCutFreq:setModulatorValue((20),false,false, false)&#13;&#10;        hiCutFreq:setModulatorValue((80),false,false, false)&#13;&#10;&#13;&#10;        --compPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --distPreset:setModulatorValue((9),false,false, false)&#13;&#10;        --WahPreset:setModulatorValue((0),false,false, false)&#13;&#10;        --eqPreset:setModulatorValue((13),false,false, false)&#13;&#10;&#9;&#9;setCompPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setDistPresetEfx_Parameters(efxNum,9,false)&#13;&#10;&#9;&#9;setWahPresetEfx_Parameters(efxNum,0,false)&#13;&#10;&#9;&#9;setEQPresetEfx_Parameters(efxNum,13,false)&#13;&#10;    end&#13;&#10;&#13;&#10;&#13;&#10;    panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;0&quot;)&#13;&#10;&#13;&#10;    end&#13;&#10;"
                   luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                   uuid="b58c917049ad42cf8eb1fad5b2ceade1" luaMethodValid="1"/>
        <luaMethod luaMethodName="isPresetValid" luaMethodCode="function isPresetValid(mod, value)&#13;&#10;&#13;&#10;&#9;--console (string.format(&quot;isPresetValid (mod = %s, value = %d) ... mod:getMaxNonMapped() == %d&quot;, mod:getProperty(&quot;name&quot;), value, mod:getMaxNonMapped()))&#13;&#10;&#13;&#10;&#9;if(mod:getMaxNonMapped() &lt;= 0) then&#13;&#10;&#9;&#9;showWindowNoValidPreset(mod)&#13;&#10;&#9;&#9;return false&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (mod:getMaxNonMapped() &lt;= value) then&#13;&#10;&#9;&#9;return false&#13;&#10;&#9;else&#9;&#13;&#10;&#9;&#9;return true &#13;&#10;&#9;end&#13;&#10;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="59f3f6f8834a4d5480c96ce1dbd10711"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="LockManager" luaMethodCode="function LockManager()&#10;&#9;-- Your method code here&#10;end&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;lock = function (efxId)&#13;&#10;&#13;&#10;&#9;lock = string.format(&quot;%sLock&quot;,efxId)&#13;&#10;&#9;if ( G[lock] == true ) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;unlock = function (efxId)&#13;&#10;&#13;&#10;&#9;lock = string.format(&quot;%sLock&quot;,efxId)&#13;&#10;&#9;if ( G[lock] == true ) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;isLocked = function (efxId)&#13;&#10;&#9;&#13;&#10;&#9;lock = string.format(&quot;%sLock&quot;,efxId)&#13;&#10;&#9;if ( G[lock] == true ) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#9;return true&#13;&#10;&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="73800d6d86a64bc184e0620bb01e850c"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="setEfxPresetLabel" luaMethodCode="function setEfxPresetLabel(labelModName, comboModName, valueMapped)&#13;&#10;&#13;&#10;--&#9;console (string.format (&quot;setEfxPresetLabel (labelModName = %s, comboModName = %s, valueMapped = %d)&quot;, labelModName, comboModName, tonumber(valueMapped,10)))&#13;&#10;&#13;&#10;&#9;currentPresetLabel = panel : getModulatorByName(labelModName) : getComponent ()&#13;&#10;&#9;currentPresetCombo = panel : getModulatorByName(comboModName) : getComponent ()&#13;&#10;&#9;if currentPresetCombo ~= nil then&#13;&#10;&#13;&#10;&#9;else&#13;&#10;&#9;&#9;console (&quot;presetCombo ==  NIL&quot;)&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;valueMap = currentPresetCombo : getValueMap ()&#13;&#10;&#9;if valueMap ~= nil then&#13;&#10;&#13;&#10;&#9;else&#13;&#10;&#9;&#9;console (&quot;valueMap ==  NIL&quot;)&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#13;&#10;&#9;index = valueMap : getIndexForValue (valueMapped)&#13;&#10;--&#9;console (&quot;index =&quot; .. index .. &quot; for mapped Value = &quot; .. valueMapped)&#13;&#10;&#9;presetName = valueMap : getTextForIndex(index)&#13;&#10;&#9;if presetName ~= nil then&#13;&#10;&#13;&#10;&#9;else&#13;&#10;&#9;&#9;console (&quot;presetName ==  NIL&quot;)&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#9;--error --console (&quot;presetName = &quot; .. presetName)&#9;&#9;&#9;&#9;-- error&#13;&#10;&#9;--error --console (&quot;presetName = &quot; .. String(presetName))&#9;&#9;-- error&#13;&#10;&#9;--error --console (&quot;presetName = &quot; .. presetName .. &quot; @index =&quot; .. string.format(&quot;%d&quot;,index) .. &quot; for mapped Value = &quot; .. string.format(&quot;%d&quot;,valueMapped))&#13;&#10;--&#9;console (&quot;@index = &quot; .. index)&#13;&#10;--&#9;console (&quot;mappedValue = &quot; .. valueMapped)&#13;&#10;&#13;&#10;&#9;-- set Label Component Text&#13;&#10;&#9;currentPresetLabel:setText(presetName)&#13;&#10;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="0525a7d096f14a5999c05877ed316ba7"
                   luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="MIDI" uuid="4c6c3d448aae40b1affc1ef084551d80">
        <luaMethod luaMethodName="sendControlChangeMessage" luaMethodCode="sendControlChangeMessage = function (ccNumber, value)&#13;&#10;&#13;&#10;&#9;pre = 0xb0 + getCurrentMidiChannel(true)&#13;&#10;&#9;ccNumberHex = 0x00 + ccNumber&#13;&#10;&#9;vv = 0x00 + value&#13;&#10;&#13;&#10;&#9;msgData = { pre, ccNumberHex, vv }&#9;&#9;--&lt;-- Reset: track in normal mode&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;sendControlChangeMessage (ccNumber = %d, value = %d) ... channel == %d&quot;, ccNumber, value, channel))&#13;&#10;--&#9;for k,v in pairs(msgData) do console(string.format(&quot;CC: %d,%02x&quot;, k,v)) end&#13;&#10;&#9;--console ( tostring(msgData) )&#13;&#10;&#13;&#10;&#9;newMidiMessage = CtrlrMidiMessage( msgData )&#13;&#10;&#9;panel:sendMidiMessageNow(newMidiMessage)&#13;&#10;&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="c1bc888bc61c433e9047f1f10859df47"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="sendNRPNMessage" luaMethodCode="function sendNRPNMessage( highByte, lowByte, dataByte )&#10;&#9;&#13;&#10;&#9;-- Built Message&#13;&#10;&#13;&#10;&#9;local nrpnMsg = {}&#13;&#10;&#13;&#10;&#9;channel = panel:getPropertyInt (&quot;panelMidiOutputChannelDevice&quot;) - 1&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;sendNRPNMessage on Channel(0-15)=%d (highByte = %d, lowByte = %d, dataByte = %d)&quot;, channel, highByte, lowByte, dataByte))&#13;&#10;&#13;&#10;&#9;--chhannel = panel:getPropertyInt (&quot;panelMidiOutputChannelHost&quot;)&#13;&#10;&#9;local pre = 0xb0 + channel&#13;&#10;&#13;&#10;&#9;nrpnMsg[1] = string.format(&quot;%02x&quot;,pre) .. &quot; 63 &quot; .. string.format(&quot;%02x&quot;,highByte)&#13;&#10;&#9;nrpnMsg[2] = string.format(&quot;%02x&quot;,pre) .. &quot; 62 &quot; .. string.format(&quot;%02x&quot;,lowByte)&#13;&#10;&#9;nrpnMsg[3] = string.format(&quot;%02x&quot;,pre) .. &quot; 06 &quot; .. string.format(&quot;%02x&quot;,dataByte)&#13;&#10;&#13;&#10;&#13;&#10;&#9;-- Send Message&#13;&#10;&#9;&#13;&#10;&#9;for index=1,3 do&#13;&#10;&#13;&#10;        -- for debugging purposes let's see how that looks like&#13;&#10;--        console (&quot;NRPN MSG: &quot;..nrpnMsg[index])&#13;&#10;&#13;&#10;        -- Convert the Table to a Memoryblock&#13;&#10;        MemB=MemoryBlock(nrpnMsg[index])&#13;&#10;&#13;&#10;        -- Send patchData to the Synth&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(MemB))&#13;&#10;        -- panel:sendMidi(CtrlrMidiMessage(MemB),0)&#13;&#10;&#9;end&#13;&#10;&#10;end&#13;&#10;&#13;&#10;function sendNRPNMessageWithChannel(channel, highByte, lowByte, dataByte )&#10;&#9;&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;sendNRPNMessageWithChannel (0-15) (channel = %d, highByte = %d, lowByte = %d, dataByte = %d)&quot;, channel, highByte, lowByte, dataByte))&#13;&#10;&#13;&#10;&#9;-- Built Message&#13;&#10;&#13;&#10;&#9;local nrpnMsg = {}&#13;&#10;&#13;&#10;&#9;--channel = panel:getPropertyInt (&quot;panelMidiOutputChannelDevice&quot;)&#13;&#10;&#9;--chhannel = panel:getPropertyInt (&quot;panelMidiOutputChannelHost&quot;)&#13;&#10;&#9;local pre = 0xb0 + channel&#13;&#10;&#13;&#10;&#9;nrpnMsg[1] = string.format(&quot;%02x&quot;,pre) .. &quot; 63 &quot; .. string.format(&quot;%02x&quot;,highByte)&#13;&#10;&#9;nrpnMsg[2] = string.format(&quot;%02x&quot;,pre) .. &quot; 62 &quot; .. string.format(&quot;%02x&quot;,lowByte)&#13;&#10;&#9;nrpnMsg[3] = string.format(&quot;%02x&quot;,pre) .. &quot; 06 &quot; .. string.format(&quot;%02x&quot;,dataByte)&#13;&#10;&#13;&#10;&#13;&#10;&#9;-- Send Message&#13;&#10;&#9;&#13;&#10;&#9;for index=1,3 do&#13;&#10;&#13;&#10;        -- for debugging purposes let's see how that looks like&#13;&#10;--        console (&quot;NRPN MSG: &quot;..nrpnMsg[index])&#13;&#10;&#13;&#10;        -- Convert the Table to a Memoryblock&#13;&#10;        MemB=MemoryBlock(nrpnMsg[index])&#13;&#10;&#13;&#10;        -- Send patchData to the Synth&#13;&#10;&#9;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(MemB))&#13;&#10;        -- panel:sendMidi(CtrlrMidiMessage(MemB),0)&#13;&#10;&#9;end&#13;&#10;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="e0b9986e42b548e192eb47953a25e218"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="sendSysExMessage" luaMethodCode="function sendSysExMessage(msgData)&#13;&#10;&#13;&#10;&#9;--xx = tonumber(fxModeValue,16)&#13;&#10;&#13;&#10;&#9;--XX = 0x00 -- don't care&#13;&#10;&#13;&#10;&#9;--msgData = { 0xF0, 0x41, 0x00, 0x42, 0x12, 0x40, combinedByte, 0x22, 0x00, XX, 0xF7 }&#9;&#9;--&lt;-- Reset: track in normal mode&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;sendSysExMessage (msgData=%s)&quot;, MemoryBlock(msgData):toHexString(1)))&#13;&#10;&#13;&#10;--&#9;for k,v in pairs(msgData) do console(string.format(&quot;SysEx: %d,%02x&quot;, k,v)) end&#13;&#10;&#9;--console ( tostring(msgData) )&#13;&#10;&#13;&#10;&#9;newMidiMessage = CtrlrMidiMessage( msgData )&#13;&#10;&#9;panel:sendMidiMessageNow(newMidiMessage)&#13;&#10;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="211c6dcc7ad0445ca86ffac96981e513"
                   luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="Serializing" uuid="74e9d4c742534ec39b6e29a415f33bae">
        <luaMethod luaMethodName="loadAllModVal" luaMethodCode="--&#13;&#10;-- Called when a mouse is down on this component&#13;&#10;--&#13;&#10;&#13;&#10;loadAllModVal = function(--[[ CtrlrComponent --]] comp, --[[ MouseEvent --]] event)&#13;&#10;&#13;&#10;if panel:getBootstrapState() then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;fileToRead = utils.openFileWindow(&#13;&#10;&#9;&#9;&quot;Open file to read as data&quot;,&#13;&#10;&#9;&#9;File.getSpecialLocation(File.userHomeDirectory),&#13;&#10;&#9;&#9;&quot;*.*&quot;,&#13;&#10;&#9;&#9;true&#13;&#10;&#9;)&#13;&#10;&#13;&#10;&#9;if fileToRead:existsAsFile() then&#13;&#10;&#13;&#10;&#9;&#9;-- Update the file path&#13;&#10;&#9;&#9;--panel:getLabelComponent(&quot;lastFileReadPathL&quot;):setText (&quot;&gt; &quot;..fileToRead:getFullPathName())&#13;&#10;&#13;&#10;&#9;&#9;if fileToRead:getSize() &gt; 8192 then&#13;&#10;&#9;&#9;&#9;&#9;utils.warnWindow(&#13;&#10;&#9;&#9;&#9;&#9;&#9;&quot;File too big&quot;, &#13;&#10;&#9;&#9;&#9;&#9;&#9;&quot;Labels are not designed to show too much data, please choose a file that's smaller then 8kb.\&#13;&#10;The file you chose is &quot;..fileToRead:getSize()..&quot; bytes&quot;&#13;&#10;&#9;&#9;&#9;&#9;)&#13;&#10;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;-- We need a memory block to load our file into, this can be created at some other point in time&#13;&#10;&#9;&#9;-- if we expect the files to be big and the amount of memory we need is higher, it will pre-allocate&#13;&#10;&#9;&#9;-- that memory at the moment that MemoryBlock() is called&#13;&#10;&#9;&#9;-- here we will allocate the amount of memory that is equalt to the size of the file&#13;&#10;&#13;&#10;&#9;&#9;fileData = MemoryBlock(fileToRead:getSize())&#13;&#10;&#13;&#10;&#9;&#9;-- This method does not return a new memory block, it operates on the one provided by us&#13;&#10;&#13;&#10;&#9;&#9;fileToRead:loadFileAsData (fileData)&#13;&#10;&#13;&#10;&#9;&#9;-- reset before load&#13;&#10;&#9;&#9;MegaPanicReset_ (false, false) -- without update ui&#13;&#10;&#13;&#10;&#9;&#9;--panel:getLabelComponent(&quot;dataContentL&quot;):setText(&#13;&#10;&#9;&#9;--&#9;fileData:toHexString(1)&#13;&#10;&#9;&#9;--)&#13;&#10;&#13;&#10;&#9;&#9;--panel:setModulatorValuesFromData(fileData,&quot;vstIndex&quot;, CtrlrPanel.EncodeNormal, startByte, 1,AreValuesMapped) &#13;&#10;&#13;&#10;&#9;&#9;--setModulatorValuesFromData (const MemoryBlock &amp;dataSource, &#13;&#10;&#9;&#9;&#9;-- const String &amp;propertyToIndexBy,&#13;&#10;&#9;&#9;&#9;-- const CtrlrByteEncoding byteEncoding,&#13;&#10;&#9;&#9;&#9;-- int propertyOffset,&#13;&#10;&#9;&#9;&#9;-- int bytesPerValue,&#13;&#10;&#9;&#9;&#9;-- const bool useMappedValues)&#13;&#10;        --panel:setModulatorValuesFromData(fileData, &quot;serializeIndex&quot;, CtrlrPanel.EncodeNormal, 0, 2, false)&#13;&#10;&#9;&#9;--updateModulatorValuesFromData(fileData)&#13;&#10;&#9;&#9;--updateModulatorValuesFromDataCustom(fileData)&#13;&#10;&#9;&#9;updateModulatorValuesFromDataCustomVariableLength(fileData)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;updateModulatorValuesFromDataCustomVariableLength = function (fileData)&#13;&#10;-- two byte values with lsb msb&#13;&#10;&#9;console(string.format(&quot;updateModulatorValuesFromDataCustomVariableLength (fileData:getSize()==%d)&quot;, fileData:getSize() ))&#13;&#10;&#13;&#10;&#9;len = fileData:getSize()&#13;&#10;&#9;fileDataString = fileData:toHexString(0)&#13;&#10;&#9;console (fileDataString)&#13;&#10;&#13;&#10;&#9;bytesPerValue = 2&#13;&#10;&#13;&#10;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;0&quot;)&#13;&#10;&#13;&#10;&#9;-- set loading value flag&#13;&#10;&#9;--loadingStage = 0&#13;&#10;&#9;initLoadingStage(0)&#13;&#10;&#9;--loadingCompleteFlag = false&#13;&#10;&#9;--panel:getModulatorByName(&quot;loadingCompleteMod&quot;):setModulatorValue(0,false,false,false) -- clear ... onvaluechange needs to get triggered!!&#13;&#10;&#9;initLoadingCompleteFlag(false)&#13;&#10;&#9;-- remove flag in last modulator's on change method&#13;&#10;&#9;&#13;&#10;&#9;propertyNameTriggerModChangeMethodOnLoad = &quot;TriggerModChangeMethodOnLoad&quot;&#13;&#10;&#9;propertyNamePauseMidiDuringModChangeOnLoad = &quot;PauseMidiDuringModChangeOnLoad&quot;&#13;&#10;&#9;--propertyNamePauseMidiDuringModChangeOnLoad &quot;SendMidiMessageWithModChangeOnLoad&quot;&#13;&#10;&#13;&#10;&#9;modIndex = 0&#13;&#10;&#9;for i=0, len, bytesPerValue do&#13;&#10;&#13;&#10;&#9;&#9;modValue = fileData:getBitRange(i * 8, bytesPerValue * 8)&#13;&#10;&#13;&#10;&#9;&#9;mod = panel:getModulatorWithProperty (&quot;serializeIndex&quot;, modIndex)&#13;&#10;&#9;&#9;if mod ~= nil then&#13;&#10;&#9;&#9;&#9;modName = mod:getProperty(&quot;name&quot;)&#13;&#10;&#9;&#9;&#9;if modName ~= nil then&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;if (isModulatorValid(modName) == true) then&#13;&#10;--&#9;&#9;&#9;&#9;&#9;console(string.format(&quot;loading mod = %s with value = %02x&quot;, mod:getProperty(&quot;name&quot;), tonumber(modValue,16) ))&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;--pauseMidiDuringModChangeOnLoadValue = mod:getPropertyInt(propertyNamePauseMidiDuringModChangeOnLoad)&#13;&#10;&#9;&#9;&#9;&#9;&#9;--panel:setPropertyInt(&quot;panelMidiPauseOut&quot;,pauseMidiDuringModChangeOnLoadValue)&#13;&#10;&#9;&#9;&#9;&#9;&#9;pauseMidiVal = isModulatorTypeMidiPaused (mod, modName)&#13;&#10;&#9;&#9;&#9;&#9;&#9;panel:setPropertyInt(&quot;panelMidiPauseOut&quot;,pauseMidiVal)&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;mod:setModulatorValue(modValue,false,true,false)&#13;&#10;&#9;&#9;&#9;&#9;&#9;customValChangeMethod = mod:getProperty(&quot;customLuaModulatorValueChange&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;triggerModChangeMethodOnLoadValue = mod:getProperty(propertyNameTriggerModChangeMethodOnLoad)&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (triggerModChangeMethodOnLoadValue == 1) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;valChangeMethod = mod:getProperty(&quot;luaModulatorValueChange&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (valChangeMethod ~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (valChangeMethod == &quot;-- None&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;console (string.format(&quot;modIndex=%d luaModulatorValueChange found: %s(%s,%d)&quot;, modIndex, valChangeMethod, mod:getProperty(&quot;name&quot;), modValue))&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;--valChangeMethod()&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_G[valChangeMethod](mod, modValue)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;panel:setPropertyInt(&quot;panelMidiPauseOut&quot;, 0)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;else&#13;&#10;-- DEBUG --&#9;&#9;&#9;&#9; console(string.format(&quot;mod with property serializeIndex==%d has no name!!! value = %d&quot;, modIndex, modValue))&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9; console(string.format(&quot;mod with property serializeIndex==%d not found!!! value = %d&quot;, modIndex, modValue))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;modIndex = modIndex +1&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;updateAllPresetLabels ()&#13;&#10;&#13;&#10;&#9;--nextLoadingStage()&#13;&#10;&#9;--initLoadingCompleteFlag(true)&#13;&#10;&#9;-- load fxTab&#13;&#10;&#9;--efxId = fileData:getBitRange(2 * 8, bytesPerValue * 8)&#13;&#10;&#9;--panel:getComponent(&quot;fxTabs&quot;):setProperty (&quot;uiTabsCurrentTab&quot;, efxId, false)&#13;&#10;&#9;--console(string.format(&quot;load fxTab == %d&quot;, efxId ))&#13;&#10;end&#13;&#10;&#13;&#10;isModulatorValid = function (modName)&#13;&#10;&#13;&#10;&#9;sModName = String(modName)&#13;&#10;&#9;if (sModName:startsWith(&quot;Efx&quot;)) then&#13;&#10;&#9;&#9;if (sModName:endsWith(&quot;Preset&quot;)) then&#13;&#10;&#9;&#9;&#9;console (string.format(&quot;%s is not Valid for loading&quot;,modName))&#13;&#10;&#9;&#9;&#9;return false&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;return true&#13;&#10;end&#13;&#10;&#13;&#10;updateAllPresetLabels = function ()&#13;&#10;&#13;&#10;&#9;n = panel:getNumModulators() -1&#13;&#10;&#13;&#10;&#9;for modIndex=0, n do&#13;&#10;&#9;&#9;mod = panel:getModulatorByIndex(modIndex)&#13;&#10;&#9;&#9;if mod ~= nil then&#13;&#10;&#9;&#9;&#9;modName = mod:getProperty(&quot;name&quot;)&#13;&#10;&#9;&#9;&#9;if (String(modName):endsWith (&quot;_Current_Preset&quot;) == true) then&#13;&#10;&#9;&#9;&#9;&#9;-- mod is Preset Label&#13;&#10;&#9;&#9;&#9;&#9;labelComponent = mod : getComponent ()&#13;&#10;&#9;&#9;&#9;&#9;labelComponent:setText(&quot;Custom&quot;)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;updateModulatorValuesFromDataCustom = function (fileData)&#13;&#10;-- two byte values with lsb msb&#13;&#10;&#9;console(string.format(&quot;updateModulatorValuesFromDataCustom (fileData:getSize()==%d)&quot;, fileData:getSize() ))&#13;&#10;&#13;&#10;&#9;len = fileData:getSize()&#13;&#10;&#9;fileDataString = fileData:toHexString(0)&#13;&#10;&#9;console (fileDataString)&#13;&#10;&#13;&#10;&#13;&#10;&#9;--for i=0,len,1 do&#13;&#10;&#9;--&#9;if (fileData[i] ~= nil) then&#13;&#10;&#9;--&#9;&#9;console (fileData[i]:toString())&#13;&#10;&#9;--&#9;else&#13;&#10;&#9;--&#9;&#9;console (&quot;fileData == NULL&quot;)&#13;&#10;&#9;--&#9;end&#13;&#10;&#9;--end&#13;&#10;&#9;&#13;&#10;&#13;&#10;&#9;modIndex = 0&#13;&#10;&#9;for i=1,len,2 do&#13;&#10;&#9;&#9;--console(fileDataString:substring(i,i+2))&#13;&#10;&#9;&#9;modValue = string.sub(fileDataString,i,i+1)&#13;&#10;&#9;&#9;--console(modValue)&#13;&#10;&#9;&#9;--console(string.format(&quot;modValue == %s == %d == %x&quot;, modValue, tonumber(modValue,10), tonumber(modValue,16) ))&#13;&#10;&#9;&#9;--console(string.format(&quot;modValue == %s == %x&quot;, modValue, tonumber(modValue,16) ))&#13;&#10;&#13;&#10;&#9;&#9;mod = panel:getModulatorWithProperty (&quot;serializeIndex&quot;, modIndex)&#13;&#10;&#9;&#9;if mod ~= nil then&#13;&#10;&#9;&#9;&#9;if mod:getProperty(&quot;name&quot;) ~= nil then&#13;&#10;&#9;&#9;&#9;&#9;console(string.format(&quot;mod = %s with value = %02x&quot;, mod:getProperty(&quot;name&quot;), tonumber(modValue,16) ))&#13;&#10;&#9;&#9;&#9;&#9;--mod:setModulatorValue((tonumber(modValue,16)),false,true,false)&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;console(string.format(&quot;mod with property serializeIndex==%d has no name!!! value = %d&quot;, modIndex, modValue))&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;console(string.format(&quot;mod with property serializeIndex==%d not found!!! value = %d&quot;, modIndex, modValue))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;--mod = panel:getModulatorByIndex(modIndex)&#13;&#10;&#9;&#9;--mod:setModulatorValue((tonumber(modValue,16)),false,true,false)&#13;&#10;&#9;&#9;modIndex = modIndex +1&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return&#13;&#10;end&#13;&#10;&#13;&#10;updateModulatorValuesFromDataCustomOneByte = function (fileData)&#13;&#10;&#13;&#10;&#9;console(string.format(&quot;updateModulatorValuesFromDataCustom (fileData:getSize()==%d)&quot;, fileData:getSize() ))&#13;&#10;&#13;&#10;&#9;len = fileData:getSize()&#13;&#10;&#9;fileDataString = fileData:toHexString(0)&#13;&#10;&#9;console (fileDataString)&#13;&#10;&#13;&#10;&#13;&#10;&#9;--for i=0,len,1 do&#13;&#10;&#9;--&#9;if (fileData[i] ~= nil) then&#13;&#10;&#9;--&#9;&#9;console (fileData[i]:toString())&#13;&#10;&#9;--&#9;else&#13;&#10;&#9;--&#9;&#9;console (&quot;fileData == NULL&quot;)&#13;&#10;&#9;--&#9;end&#13;&#10;&#9;--end&#13;&#10;&#9;&#13;&#10;&#13;&#10;&#9;modIndex = 0&#13;&#10;&#9;for i=1,len,2 do&#13;&#10;&#9;&#9;--console(fileDataString:substring(i,i+2))&#13;&#10;&#9;&#9;modValue = string.sub(fileDataString,i,i+1)&#13;&#10;&#9;&#9;--console(modValue)&#13;&#10;&#9;&#9;--console(string.format(&quot;modValue == %s == %d == %x&quot;, modValue, tonumber(modValue,10), tonumber(modValue,16) ))&#13;&#10;&#9;&#9;--console(string.format(&quot;modValue == %s == %x&quot;, modValue, tonumber(modValue,16) ))&#13;&#10;&#13;&#10;&#9;&#9;mod = panel:getModulatorWithProperty (&quot;serializeIndex&quot;, modIndex)&#13;&#10;&#9;&#9;if mod ~= nil then&#13;&#10;&#9;&#9;&#9;if mod:getProperty(&quot;name&quot;) ~= nil then&#13;&#10;&#9;&#9;&#9;&#9;console(string.format(&quot;mod = %s with value = %02x&quot;, mod:getProperty(&quot;name&quot;), tonumber(modValue,16) ))&#13;&#10;&#9;&#9;&#9;&#9;mod:setModulatorValue((tonumber(modValue,16)),false,true,false)&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;console(string.format(&quot;mod with property serializeIndex==%d has no name!!!&quot;, modIndex))&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;console(string.format(&quot;mod with property serializeIndex==%d not found!!!&quot;, modIndex))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;--mod = panel:getModulatorByIndex(modIndex)&#13;&#10;&#9;&#9;--mod:setModulatorValue((tonumber(modValue,16)),false,true,false)&#13;&#10;&#9;&#9;modIndex = modIndex +1&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return&#13;&#10;end&#13;&#10;&#13;&#10;updateModulatorValuesFromData = function (fileData)&#13;&#10;&#13;&#10;&#9;len = fileData:getSize()&#13;&#10;&#9;fileDataString = fileData:toHexString(0)&#13;&#10;&#9;console (fileDataString)&#13;&#10;&#13;&#10;&#13;&#10;&#9;--for i=0,len,1 do&#13;&#10;&#9;--&#9;if (fileData[i] ~= nil) then&#13;&#10;&#9;--&#9;&#9;console (fileData[i]:toString())&#13;&#10;&#9;--&#9;else&#13;&#10;&#9;--&#9;&#9;console (&quot;fileData == NULL&quot;)&#13;&#10;&#9;--&#9;end&#13;&#10;&#9;--end&#13;&#10;&#9;&#13;&#10;&#13;&#10;&#9;modIndex = 0&#13;&#10;&#9;for i=1,len,2 do&#13;&#10;&#9;&#9;--console(fileDataString:substring(i,i+2))&#13;&#10;&#9;&#9;modValue = string.sub(fileDataString,i,i+1)&#13;&#10;&#9;&#9;console(modValue)&#13;&#10;&#9;&#9;--console(string.format(&quot;modValue == %s == %d == %x&quot;, modValue, tonumber(modValue,10), tonumber(modValue,16) ))&#13;&#10;&#9;&#9;console(string.format(&quot;modValue == %s == %x&quot;, modValue, tonumber(modValue,16) ))&#13;&#10;&#13;&#10;&#9;&#9;mod = panel:getModulatorByIndex(modIndex)&#13;&#10;&#9;&#9;mod:setModulatorValue((tonumber(modValue,16)),false,true,false)&#13;&#10;&#9;&#9;modIndex = modIndex +1&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;return&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;extractSingleModValueFromData = function ( memBlock, index )&#13;&#10;&#13;&#10;&#9;memBlockDataString = fileData:toHexString(0)&#13;&#10;&#9;singleModValue = string.sub(memBlockDataString,index,index+1)&#13;&#10;&#9;return singleModValue&#13;&#10;end"
                   luaMethodLinkedProperty="componentLuaMouseDown" luaMethodSource="0"
                   uuid="6162f378fc294f9c9c105923fb1e8c5e" luaMethodValid="1"/>
        <luaMethod luaMethodName="saveAllModVal" luaMethodCode="--&#10;-- Called when a mouse is down on this component&#10;--&#10;&#10;saveAllModVal = function(--[[ CtrlrComponent --]] comp, --[[ MouseEvent --]] event)&#13;&#10;&#13;&#10;&#9;serializeEasy()&#13;&#10;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;serializeEasy = function(--[[ CtrlrComponent --]] comp, --[[ MouseEvent --]] event)&#13;&#10;&#13;&#10;&#9;console(&quot;serializeEasy&quot;)&#13;&#10;&#13;&#10;&#9;if panel:getBootstrapState() then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;fileToWrite = utils.saveFileWindow(&#13;&#10;&#9;&#9;&quot;Save content as data&quot;,&#13;&#10;&#9;&#9;File.getSpecialLocation(File.userHomeDirectory),&#13;&#10;&#9;&#9;&quot;*.bin&quot;,&#13;&#10;&#9;&#9;true&#13;&#10;&#9;)&#13;&#10;&#13;&#10;&#9;if fileToWrite:isValid() == false then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- Let's see if the file exists&#13;&#10;&#9;if fileToWrite:existsAsFile() == false then&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;-- The file is not there, that's ok, let's try to create it&#13;&#10;&#9;&#9;if fileToWrite:create() == false then&#13;&#10;&#13;&#10;&#9;&#9;&#9;-- Ooooh we can't create it, we need to fail here&#13;&#10;&#9;&#9;&#9;utils.warnWindow (&quot;File write&quot;, &quot;The destination file does not exist, and i can't create it&quot;)&#13;&#10;&#13;&#10;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;--dataToWrite = MemoryBlock (panel:getModulatorValuesAsData ())&#13;&#10;&#9;--getModulatorValuesAsData(&#13;&#10;&#9;&#9;-- const String &amp;propertyToIndexBy,&#13;&#10;&#9;&#9;-- const CtrlrByteEncoding byteEncoding,&#13;&#10;&#9;&#9;-- const int bytesPerValue,&#13;&#10;&#9;&#9;-- const bool useMappedValues)&#13;&#10;&#13;&#10;&#9;bytesPerValue = 2&#13;&#10;&#9;dataToWrite = panel:getModulatorValuesAsData(&quot;serializeIndex&quot;, CtrlrPanel.EncodeNormal, bytesPerValue, false)&#13;&#10;&#13;&#10;&#9;fileDataString = dataToWrite:toHexString(0)&#13;&#10;&#9;console (fileDataString)&#13;&#10;&#13;&#10;&#9;-- DEBUG&#13;&#10;&#9;debugMode = &quot;short&quot;&#13;&#10;&#9;--debugMode = &quot;full&quot;&#13;&#10;&#9;serializeEasyDebug (dataToWrite, bytesPerValue, debugMode)&#13;&#10;&#9;&#13;&#10;&#9;if fileToWrite:replaceWithData (dataToWrite) == false then&#13;&#10;&#9;&#9;utils.warnWindow (&quot;File write&quot;, &quot;Failed to write data to file: &quot;..fileToWrite.getFullPathName())&#13;&#10;&#9;end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;serializeEasyDebug = function ( dataToWrite, bytesPerValue, debugMode )&#13;&#10;&#13;&#10;&#9;console(string.format(&quot;serializeEasyDebug (dataToWrite:getSize()==%d, bytesPerValue=%d)&quot;, dataToWrite:getSize(),bytesPerValue ))&#13;&#10;&#13;&#10;&#9;len = dataToWrite:getSize() &#13;&#10;&#13;&#10;&#9;modIndex=0&#13;&#10;&#9;for i=0,len,bytesPerValue do&#13;&#10;&#9;&#9;modValue = dataToWrite:getBitRange(i * 8, bytesPerValue * 8)&#13;&#10;&#9;&#9;mod = nil&#13;&#10;&#9;&#9;mod = panel:getModulatorWithProperty (&quot;serializeIndex&quot;, modIndex)&#13;&#10;&#9;&#9;if mod ~= nil then&#13;&#10;&#9;&#9;&#9;if mod:getProperty(&quot;name&quot;) ~= nil then&#13;&#10;&#9;&#9;&#9;&#9;console(string.format(&quot;save mod = %s with value = %d&quot;, mod:getProperty(&quot;name&quot;), modValue ))&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;if (debugMode ~= &quot;short&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;console(string.format(&quot;mod with property serializeIndex==%d has no name!!! value = %d&quot;, modIndex, modValue))&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;console(string.format(&quot;mod with property serializeIndex==%d not found!!! value = %d&quot;, modIndex, modValue))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;modIndex=modIndex+1&#13;&#10;&#9;end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;saveEasyNewDebugInformationStyle = function ()&#13;&#10;&#13;&#10;&#9;bytesPerValue = 2&#13;&#10;&#9;dataToWrite = panel:getModulatorValuesAsData(&quot;serializeIndex&quot;, CtrlrPanel.EncodeNormal, bytesPerValue, false)&#13;&#10;&#9;&#13;&#10;&#9;len = dataToWrite:getSize() &#13;&#10;&#13;&#10;&#9;modIndex=0&#13;&#10;&#9;for i=0,len,bytesPerValue do&#13;&#10;&#9;&#9;modValue = dataToWrite:getBitRange(i * 8, bytesPerValue * 8)&#13;&#10;&#9;&#9;mod = panel:getModulatorWithProperty (&quot;serializeIndex&quot;, modIndex)&#13;&#10;&#13;&#10;&#9;&#9;if (dataToWrite:getByte(i) ~= nil) then&#13;&#10;&#9;&#9;&#9;console(string.format(&quot;dataToWrite:getByte(%d) = %s == %s&quot;,i,dataToWrite:getByte(i),modValue))&#13;&#10;&#9;&#9;&#9;--console(string.format(&quot;dataToWrite[%d] =&quot;,i))&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;console(string.format(&quot;dataToWrite:getByte(%d) = NULL == %s&quot;,i,modValue))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;modIndex=modIndex+1&#13;&#10;&#9;end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;saveEasyOldStyle = function ()&#13;&#10;&#13;&#10;&#9;bytesPerValue = 2&#13;&#10;&#9;dataToWrite = panel:getModulatorValuesAsData(&quot;serializeIndex&quot;, CtrlrPanel.EncodeNormal, bytesPerValue, false)&#13;&#10;&#9;&#13;&#10;&#9;len = dataToWrite:getSize() &#13;&#10;&#13;&#10;&#9;fileDataString = dataToWrite:toHexString(0)&#13;&#10;&#9;n=1&#13;&#10;&#9;for i=1,len,1 do&#13;&#10;&#9;&#9;modValue = string.sub(fileDataString,n,n+1)&#13;&#10;&#9;&#9;n=n+bytesPerValue&#13;&#10;&#9;&#9;if (dataToWrite[i] ~= nil) then&#13;&#10;&#9;&#9;&#9;console(string.format(&quot;dataToWrite[%d] = %s == %s&quot;,i,dataToWrite[i],modValue))&#13;&#10;&#9;&#9;&#9;--console(string.format(&quot;dataToWrite[%d] =&quot;,i))&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;console(string.format(&quot;dataToWrite[%d] = NULL == %s&quot;,i,modValue))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;end"
                   luaMethodLinkedProperty="componentLuaMouseDown" luaMethodSource="0"
                   uuid="e3bc43d2b99044a883b6e74089a86cd1" luaMethodValid="1"/>
        <luaMethod luaMethodName="InitSerializeProperty" luaMethodCode="--&#13;&#10;-- Called when a mouse is down on this component&#13;&#10;--&#13;&#10;&#13;&#10;InitSerializeProperty = function(--[[ CtrlrComponent --]] comp, --[[ MouseEvent --]] event)&#13;&#10;&#13;&#10;&#9;n = panel:getNumModulators()&#13;&#10;&#9;comp:setProperty (&quot;componentDisabled&quot;, 1, false)&#13;&#10;&#13;&#10;--&#9;InitSerializePropertyByNonSolidModulatorIndex ()&#13;&#10;--&#9;SortedSerializePropertyIndexInitialization ()&#13;&#10;--&#9;FullSortedSerializePropertyIndexInitialization()&#13;&#10;&#9;FullSortedSerializePropertyIndexInitializationModular()&#13;&#10;&#9;&#13;&#10;&#9;comp:setProperty (&quot;componentDisabled&quot;, 1, false)&#13;&#10;&#9;&#13;&#10;&#9;b = BubbleMessageComponent(500)&#13;&#10;&#9;b:showAt(comp, string.format(&quot;Serialization Index initialized! (0 to %d)&quot;,n-1), 2500, true, false)&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;InitSerializePropertyByNonSolidModulatorIndex = function(--[[ CtrlrComponent --]] comp, --[[ MouseEvent --]] event)&#13;&#10;&#13;&#10;&#9;n = panel:getNumModulators()&#13;&#10;&#9;for i=0,n-1 do&#13;&#10;&#9;&#9;mod = panel:getModulatorByIndex(i)&#13;&#10;&#9;&#9;mod:setPropertyInt(&quot;serializeIndex&quot;,i)&#13;&#10;&#9;&#9;mod:setPropertyInt(&quot;vstIndex&quot;,i)&#13;&#10;&#9;&#9;--console(string.format(&quot;mod:getProperty('serializeIndex') == %d&quot;,mod:getPropertyInt(&quot;serializeIndex&quot;)))&#13;&#10;&#9;end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;FullSortedSerializePropertyIndexInitializationModular = function ()&#13;&#10;&#13;&#10;&#9;propertyNameTriggerModChangeMethodOnLoad = &quot;TriggerModChangeMethodOnLoad&quot;&#13;&#10;&#9;propertyNamePauseMidiDuringModChangeOnLoad = &quot;PauseMidiDuringModChangeOnLoad&quot;&#13;&#10;&#9;--propertyNamePauseMidiDuringModChangeOnLoad &quot;SendMidiMessageWithModChangeOnLoad&quot;&#13;&#10;&#13;&#10;&#9;ClearSerializePropertyIndex ()&#13;&#10;&#9;&#13;&#10;&#9;listAllModulatorsSorted()&#13;&#10;&#13;&#10;&#9;local midiChannelMod = panel : getModulatorByName (&quot;MIDIChannel&quot;) &#13;&#10;&#9;local HqDistortionPreset = panel : getModulatorByName (&quot;HQ_Dist_Preset_Value&quot;)&#13;&#10;&#9;local HqDistortionOnOff = panel : getModulatorByName (&quot;HQ_Dist_On&quot;) &#13;&#10;&#9;local fxTabsMod = panel:getModulatorByName(&quot;fxTabs&quot;)&#13;&#10;&#9;local efxModusMod = panel:getModulatorByName(&quot;efxModus&quot;)&#13;&#10;&#9;--local fxTabsModComp = panel:getComponent(&quot;fxTabs&quot;)&#13;&#10;&#9;--fxTabsModComp:setProperty (&quot;uiTabsCurrentTab&quot;, value, false)&#13;&#10;&#9;local programSelectionMod = panel:getModulatorByName(&quot;programList&quot;)&#13;&#10;&#9;&#13;&#10;&#9;sIndex = 1&#13;&#10;&#9;midiChannelMod:setPropertyInt(&quot;serializeIndex&quot;,sIndex)&#13;&#10;&#9;midiChannelMod:setPropertyInt(&quot;vstIndex&quot;,sIndex)&#13;&#10;&#9;midiChannelMod:setPropertyInt(propertyNameTriggerModChangeMethodOnLoad, 0)&#13;&#10;&#9;midiChannelMod:setPropertyInt(propertyNamePauseMidiDuringModChangeOnLoad, 0)&#13;&#10;&#9;&#13;&#10;&#9;sIndex = sIndex+1&#13;&#10;&#9;HqDistortionPreset:setPropertyInt(&quot;serializeIndex&quot;,sIndex)&#13;&#10;&#9;HqDistortionPreset:setPropertyInt(&quot;vstIndex&quot;,sIndex)&#13;&#10;&#9;HqDistortionPreset:setPropertyInt(propertyNameTriggerModChangeMethodOnLoad, 0)&#13;&#10;&#9;HqDistortionPreset:setPropertyInt(propertyNamePauseMidiDuringModChangeOnLoad, 0)&#13;&#10;&#9;&#13;&#10;&#9;sIndex = sIndex+1&#13;&#10;&#9;HqDistortionOnOff:setPropertyInt(&quot;serializeIndex&quot;,sIndex)&#13;&#10;&#9;HqDistortionOnOff:setPropertyInt(&quot;vstIndex&quot;,sIndex)&#13;&#10;&#9;HqDistortionOnOff:setPropertyInt(propertyNameTriggerModChangeMethodOnLoad, 0)&#13;&#10;&#9;HqDistortionOnOff:setPropertyInt(propertyNamePauseMidiDuringModChangeOnLoad, 0)&#13;&#10;&#9;&#13;&#10;&#9;sIndex = sIndex+1&#13;&#10;&#9;efxModusMod:setPropertyInt(&quot;serializeIndex&quot;,sIndex)&#13;&#10;&#9;efxModusMod:setPropertyInt(&quot;vstIndex&quot;,sIndex)&#13;&#10;&#9;efxModusMod:setPropertyInt(propertyNameTriggerModChangeMethodOnLoad, 1)&#13;&#10;&#9;efxModusMod:setPropertyInt(propertyNamePauseMidiDuringModChangeOnLoad, 0)&#13;&#10;&#13;&#10;&#9;sIndex = sIndex+1&#13;&#10;&#9;fxTabsMod:setPropertyInt(&quot;serializeIndex&quot;,sIndex)&#13;&#10;&#9;fxTabsMod:setPropertyInt(&quot;vstIndex&quot;,sIndex)&#13;&#10;&#9;fxTabsMod:setPropertyInt(propertyNameTriggerModChangeMethodOnLoad, 1)&#13;&#10;&#9;fxTabsMod:setPropertyInt(propertyNamePauseMidiDuringModChangeOnLoad, 0)&#13;&#10;&#9;&#13;&#10;&#9;sIndex = sIndex+1&#13;&#10;&#9;programSelectionMod:setPropertyInt(&quot;serializeIndex&quot;,sIndex)&#13;&#10;&#9;programSelectionMod:setPropertyInt(&quot;vstIndex&quot;,sIndex)&#13;&#10;&#9;programSelectionMod:setPropertyInt(propertyNameTriggerModChangeMethodOnLoad, 1)&#13;&#10;&#9;programSelectionMod:setPropertyInt(propertyNamePauseMidiDuringModChangeOnLoad, 0)&#13;&#10;&#9;sIndex = sIndex+1&#13;&#10;&#13;&#10;--&#9;manualyIndexed = sIndex&#13;&#10;--&#9;manualyIndexedOffset = sIndex&#13;&#10;&#9;&#13;&#10;&#9;for efxId=1,3 do&#13;&#10;&#9;&#9;console ( string.format (&quot; -------- init EFX%d Modulators serialization index property --------&quot;, efxId))&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;arrayName = string.format(&quot;efx%dModulators&quot;, efxId)&#13;&#10;&#9;&#9;arrayLength = efxModulatorCounter[efxId]&#13;&#10;&#9;&#9;pausMidiOnLoad = 1&#13;&#10;&#9;&#9;overwritePropertyPauseMidi = false&#13;&#10;&#9;&#9;numOfInit = InitModulatorSerializePropertyFromArray (arrayName, arrayLength, sIndex, pausMidiOnLoad, overwritePropertyPauseMidi)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;sIndex = numOfInit+sIndex&#13;&#10;&#9;&#9;console (string.format (&quot;numOfInit %d for %s&quot;, numOfInit, arrayName))&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;for efxId=1,3 do&#13;&#10;&#9;&#9;console ( string.format (&quot; -------- init EFX%d Preset Value Modulators serialization index property --------&quot;, efxId))&#13;&#10;&#9;&#9;arrayName = string.format(&quot;efx%dPresetValueModulators&quot;, efxId)&#13;&#10;&#9;&#9;arrayLength = efxPresetValueModulatorCounter[efxId]&#13;&#10;&#9;&#9;pausMidiOnLoad = 0&#13;&#10;&#9;&#9;overwritePropertyPauseMidi = true&#13;&#10;&#9;&#9;numOfInit = InitModulatorSerializePropertyFromArray (arrayName, arrayLength, sIndex, pausMidiOnLoad, overwritePropertyPauseMidi)&#13;&#10;&#9;&#9;sIndex = numOfInit+sIndex&#13;&#10;&#9;&#9;console (string.format (&quot;numOfInit %d for %s&quot;, numOfInit, arrayName))&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;console ( string.format (&quot; -------- init HQ Distortion Modulators serialization index property --------&quot;, efxId))&#13;&#10;&#9;arrayName = string.format(&quot;HQDistModulators&quot;, 0)&#13;&#10;&#9;arrayLength = HQDistModulatorsCounter&#13;&#10;&#9;pausMidiOnLoad = 1&#13;&#10;&#9;overwritePropertyPauseMidi = false&#13;&#10;&#9;numOfInit = InitModulatorSerializePropertyFromArray (arrayName, arrayLength, sIndex, pausMidiOnLoad, overwritePropertyPauseMidi)&#13;&#10;&#9;sIndex = numOfInit+sIndex&#13;&#10;&#9;console (string.format (&quot;numOfInit %d for %s&quot;, numOfInit, arrayName))&#13;&#10;&#13;&#10;&#9;console ( string.format (&quot; -------- init Other (ungrouped) Modulators serialization index property --------&quot;, efxId))&#13;&#10;&#9;arrayName = string.format(&quot;ungroupedModulators&quot;, 0)&#13;&#10;&#9;arrayLength = ungroupedModulatorsCounter&#13;&#10;&#9;pausMidiOnLoad = 1&#13;&#10;&#9;overwritePropertyPauseMidi = false&#13;&#10;&#9;numOfInit = InitModulatorSerializePropertyFromArray (arrayName, arrayLength, sIndex, pausMidiOnLoad, overwritePropertyPauseMidi)&#13;&#10;&#9;sIndex = numOfInit+sIndex&#13;&#10;&#9;console (string.format (&quot;numOfInit %d for %s&quot;, numOfInit, arrayName))&#13;&#10;&#9;&#13;&#10;&#9;-- dynamically done by hidden controls STRG+E (Enable MIDI Message on Load)&#13;&#10;&#9;&#13;&#10;--&#9;fxTypes = {&quot;Mix&quot;, &quot;EQ&quot;, &quot;Dist&quot;, &quot;Mod&quot;, &quot;Wah&quot;, &quot;CompLimit&quot;, &quot;Delay&quot;, &quot;Other&quot;}&#13;&#10;--&#9;fxTypePauseMidi = {0, 0, 0, 0, 0, 0, 0, 0}&#13;&#10;&#9;-- for key,fxType in ipairs(fxTypes) do&#13;&#10;&#9;&#9;-- for efxId=1,3 do&#13;&#10;&#9;&#9;&#9;-- pausMidiOnLoad = fxTypePauseMidi[key]&#13;&#10;&#9;&#9;&#9;-- console ( string.format (&quot; -------- init EFX%d %s Controls serialization index property, pauseMidiOnLoad = %d --------&quot;, efxId, fxType, pausMidiOnLoad))&#13;&#10;&#9;&#9;&#9;-- arrayName = string.format (&quot;efx%d%sControls&quot;, efxId, fxType)&#13;&#10;&#9;&#9;&#9;-- arrayLength = table.maxn(_G[arrayName])&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;-- overwritePropertyPauseMidi = true&#13;&#10;&#9;&#9;&#9;-- numOfInit = InitModulatorSerializePropertyFromArray (arrayName, arrayLength, sIndex, pausMidiOnLoad, overwritePropertyPauseMidi)&#13;&#10;--&#9;&#9;&#9;-- sIndex = numOfInit+sIndex&#13;&#10;&#9;&#9;&#9;-- console (string.format (&quot;numOfInit %d for %s&quot;, numOfInit, arrayName))&#13;&#10;&#9;&#9;-- end&#13;&#10;&#9;-- end&#13;&#10;&#13;&#10;&#9;switchLoadingCompleteModulatorToEnd(sIndex-1)&#13;&#10;&#9;removeSerializeIndexFromUnusedModulators()&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;InitModulatorSerializePropertyFromArray = function (arrayName, arrayLength, propertyStartIndex, pausMidiOnLoad, overwritePropertyPauseMidi)&#13;&#10;&#13;&#10;&#9;initCount = 0&#13;&#10;&#9;for k=1, arrayLength do&#13;&#10;&#9;&#9;register = string.format(arrayName, efxId)&#13;&#10;&#9;&#9;modName = string.format (&quot;%s&quot;, _G[register][k])&#13;&#10;&#9;&#9;mod = panel:getModulatorByName(modName)&#13;&#10;&#9;&#9;if (mod ~= nil) then&#13;&#10;&#9;&#9;&#9;propertySerializeIndex = mod:getPropertyInt(&quot;serializeIndex&quot;)&#13;&#10;&#9;&#9;&#9;if (propertySerializeIndex == -1) then&#13;&#10;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;currentSerializeIndexPos = propertyStartIndex + initCount&#13;&#10;&#9;&#9;&#9;&#9;mod:setPropertyInt(&quot;serializeIndex&quot;,currentSerializeIndexPos)&#13;&#10;&#9;&#9;&#9;&#9;mod:setPropertyInt(&quot;vstIndex&quot;,currentSerializeIndexPos)&#13;&#10;&#9;&#9;&#9;&#9;mod:setPropertyInt(propertyNameTriggerModChangeMethodOnLoad, 0)&#13;&#10;--&#9;&#9;&#9;&#9;currentSerializeIndexPos = currentSerializeIndexPos +1&#13;&#10;&#9;&#9;&#9;&#9;initCount = initCount +1&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;console(string.format(&quot;mod = %s already indexed, mod:getProperty('serializeIndex') == %d&quot;, mod:getProperty(&quot;name&quot;),propertySerializeIndex))&#13;&#10;--&#9;&#9;&#9;&#9;manualyIndexedOffset = manualyIndexedOffset -1&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;propertyPauseMidiValue = mod:getPropertyInt(propertyNamePauseMidiDuringModChangeOnLoad)&#13;&#10;&#9;&#9;&#9;if (propertyPauseMidiValue == -1) then&#13;&#10;&#9;&#9;&#9;&#9;mod:setPropertyInt(propertyNamePauseMidiDuringModChangeOnLoad, pausMidiOnLoad)&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;if (overwritePropertyPauseMidi == true) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;mod:setPropertyInt(propertyNamePauseMidiDuringModChangeOnLoad, pausMidiOnLoad)&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;console(string.format(&quot;mod = %s not found!&quot;, modName))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;return initCount&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;removeSerializeIndexFromUnusedModulators = function ()&#13;&#10;&#9;console(string.format(&quot;removeSerializeIndexFromUnusedModulators&quot;, 0))&#13;&#10;&#9;n = panel:getNumModulators()&#13;&#10;&#9;for modIndex=0,n-1 do&#13;&#10;&#9;&#9;mod = panel:getModulatorByIndex (modIndex)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;if (mod ~= nil) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;if (mod:getProperty(&quot;serializeIndex&quot;) == -1) then&#13;&#10;&#9;&#9;&#9;&#9;mod:removeProperty(&quot;serializeIndex&quot;)&#13;&#10;&#9;&#9;&#9;&#9;mod:setProperty(&quot;vstIndex&quot;, &quot;&quot;, false)&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;end&#13;&#10; &#9;end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;setSerializeIndex = function (mod, i)&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;switchLoadingCompleteModulatorToEnd = function(endIndex)&#13;&#10;&#13;&#10;&#9;--endIndex = panel:getNumModulators() -1&#13;&#10;&#9;local loadingCompleteMod = panel:getModulatorByName(&quot;loadingCompleteMod&quot;)&#13;&#10;&#9;&#13;&#10;&#9;pos = loadingCompleteMod:getProperty(&quot;serializeIndex&quot;)&#13;&#10;&#9;if (pos ~= endIndex) then&#13;&#10;&#9;&#9;local endMod = panel:getModulatorWithProperty (&quot;serializeIndex&quot;, endIndex)&#13;&#10;&#9;&#9;loadingCompleteMod:setPropertyInt(&quot;serializeIndex&quot;, endIndex)&#13;&#10;&#9;&#9;loadingCompleteMod:setPropertyInt(&quot;vstIndex&quot;, endIndex)&#13;&#10;&#9;&#9;endMod:setPropertyInt(&quot;serializeIndex&quot;, pos)&#13;&#10;&#9;&#9;endMod:setPropertyInt(&quot;vstIndex&quot;, pos)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;loadingCompleteMod:setPropertyInt(propertyNameTriggerModChangeMethodOnLoad, 1)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;loadingCompleteModName = loadingCompleteMod:getProperty(&quot;name&quot;)&#13;&#10;&#9;&#9;endModName = endMod:getProperty(&quot;name&quot;)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;loadingCompleteModName = loadingCompleteMod:getProperty(&quot;name&quot;)&#13;&#10;&#9;&#9;endModName = loadingCompleteModName&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#13;&#10;&#9;console(string.format(&quot;switchLoadingCompleteModulatorToEnd: pos=%d (%s) &lt;-&gt; endIndex=%d (%s) with a total number of=%d&quot;, pos, loadingCompleteModName, endIndex, endModName, panel:getNumModulators()))&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;ClearSerializePropertyIndex = function ()&#13;&#10;&#13;&#10;&#9;console(string.format(&quot;ClearSerializePropertyIndex&quot;, 0))&#13;&#10;&#9;clearValue = -1&#13;&#10;&#13;&#10;&#9;n = panel:getNumModulators()&#13;&#10;&#9;for i=0,n-1 do&#13;&#10;&#9;&#9;mod = panel:getModulatorByIndex(i)&#13;&#10;&#9;&#9;mod:setPropertyInt(&quot;serializeIndex&quot;, clearValue)&#13;&#10;&#9;&#9;mod:setPropertyInt(&quot;vstIndex&quot;, clearValue)&#13;&#10;&#9;&#9;mod:setPropertyInt(propertyNamePauseMidiDuringModChangeOnLoad, clearValue)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;end"
                   luaMethodLinkedProperty="componentLuaMouseDown" luaMethodSource="0"
                   uuid="4e622df60052431a9bb7f053603471a4" luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethodGroup name="Development" uuid="32b8dee935d64f24b9cdd585a750a699">
        <luaMethod luaMethodName="isModulatorTypeMidiPaused" luaMethodCode="function isModulatorTypeMidiPaused (mod, modName)&#13;&#10;&#13;&#10;&#13;&#10;&#9;for i=1,3 do&#13;&#10;&#9;&#9;currentEfxCompareString = string.format(&quot;Efx%d_&quot;, i)&#13;&#10;&#9;&#9;if (String(modName):startsWith(currentEfxCompareString)) then&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;&#9;-- &quot;Efx1_Mix&quot;&#13;&#10;&#9;&#9;&#9;--  0123456&#13;&#10;&#9;&#9;&#9;strLen = String(modName):length()&#13;&#10;&#9;&#9;&#9;group = String(modName):substring(5, strLen)&#13;&#10;&#9;&#9;&#9;if (String(group):startsWith (&quot;Mix&quot;)) then&#13;&#10;&#9;&#9;&#9;&#9;groupName = &quot;Mix&quot;&#13;&#10;&#9;&#9;&#9;elseif (String(group):startsWith (&quot;EQ&quot;)) then&#13;&#10;&#9;&#9;&#9;&#9;groupName = &quot;EQ&quot;&#13;&#10;&#9;&#9;&#9;elseif (String(group):startsWith (&quot;Dist&quot;)) then&#13;&#10;&#9;&#9;&#9;&#9;groupName = &quot;Dist&quot;&#13;&#10;&#9;&#9;&#9;elseif (String(group):startsWith (&quot;Mod&quot;)) then&#13;&#10;&#9;&#9;&#9;&#9;groupName = &quot;Mod&quot;&#13;&#10;&#9;&#9;&#9;elseif (String(group):startsWith (&quot;Wah&quot;)) then&#13;&#10;&#9;&#9;&#9;&#9;groupName = &quot;Wah&quot;&#13;&#10;&#9;&#9;&#9;elseif (String(group):startsWith (&quot;Comp&quot;)) then&#13;&#10;&#9;&#9;&#9;&#9;groupName = &quot;CompLimit&quot;&#13;&#10;&#9;&#9;&#9;elseif (String(group):startsWith (&quot;Delay&quot;)) then&#13;&#10;&#9;&#9;&#9;&#9;groupName = &quot;Delay&quot;&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;groupName = &quot;Other&quot;&#13;&#10;&#9;&#9;&#9;&#9;--unhandledGroupName = MemoryBlock(group):toString()&#9;-- wrong format &#13;&#10;&#9;&#9;&#9;&#9;--unhandledGroupName = group:__add(&quot;&quot;)&#13;&#10;&#9;&#9;&#9;&#9;unhandledGroupName = group&#13;&#10;&#9;&#9;&#9;&#9;console (string.format(&quot;xxxxmod=%sxxxx should not happen xxxxxxxx groupName = %s&quot;, mod:getProperty(&quot;name&quot;), unhandledGroupName))&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;return getGroupMidiPauseSetting (groupName)&#13;&#10;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;currentCompareString = &quot;HQ_&quot;&#13;&#10;&#9;groupName = &quot;HQDist&quot;&#13;&#10;&#9;if (String(modName):startsWith(currentCompareString)) then&#13;&#10;&#9;&#9;return getGroupMidiPauseSetting (groupName)&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;masterControls = { &quot;Reverb&quot;, &quot;Chorus&quot;, &quot;Portamento&quot;, &quot;Pedal&quot;}&#13;&#10;&#9;&#13;&#10;&#9;for key,value in ipairs(masterControls) do&#13;&#10;&#9;&#9;currentMasterCompareString = string.format(&quot;MA_%s&quot;, value)&#13;&#10;&#9;&#9;if (String(modName):startsWith(currentMasterCompareString)) then&#13;&#10;&#9;&#9;&#9;groupName = value&#13;&#10;&#9;&#9;&#9;return getGroupMidiPauseSetting (groupName)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;currentCompareString = &quot;MA_&quot;&#13;&#10;&#9;groupName = &quot;MA&quot;&#13;&#10;&#9;if (String(modName):startsWith(currentCompareString)) then&#13;&#10;&#9;&#9;return getGroupMidiPauseSetting (groupName)&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;modPausePropertyValue = mod:getPropertyInt(propertyNamePauseMidiDuringModChangeOnLoad)&#13;&#10;&#9;if (modPausePropertyValue ~= nil) then&#13;&#10;&#9;&#9;console (string.format(&quot;%s no group found, use PauseProperty=%d&quot;, modName, modPausePropertyValue))&#13;&#10;&#9;&#9;return modPausePropertyValue&#13;&#10;&#9;else&#13;&#10;&#9;&#9;console (string.format(&quot;%s no group found, PAUSE MIDI = true&quot;, modName))&#13;&#10;&#9;&#9;return 1&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;getGroupMidiPauseSetting = function (groupName)&#13;&#10;&#13;&#10;&#9;&#9;groupSettingMod = panel : getModulatorByName (string.format(&quot;dev_MIDI_Enable_%s&quot;, groupName))&#13;&#10;&#9;&#9;groupValue = groupSettingMod : getModulatorValue ()&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;if (groupValue == 1) then&#13;&#10;&#9;&#9;&#9;return 0&#9;&#9;&#9;&#9;&#9;-- send enabled, pause = 0&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;return 1&#9;&#9;&#9;&#9;&#9;-- send disabled, pause = 1&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="9bf3edb39fd64cc3981902770217d493"
                   luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethod luaMethodName="MegaPanicReset" luaMethodCode="--&#13;&#10;-- Called when a mouse is down on this component&#13;&#10;--&#13;&#10;&#13;&#10;-- http://ctrlr.org/forums/topic/lua-in-ctrlr-list-of-frequently-used-commands/&#13;&#10;&#13;&#10;MegaPanicReset = function(--[[ CtrlrComponent --]] comp, --[[ MouseEvent --]] event)&#13;&#10;&#13;&#10;&#9;console(string.format(&quot;MegaPanicReset (comp = ..., event=...)&quot;,comp))&#13;&#10;&#13;&#10;&#9;MegaPanicReset_ (true, true)&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;MegaPanicReset_ = function( resetUiFlag, allChannelResetFlag )&#13;&#10;&#13;&#10;&#9;initLoadingStage(0)&#13;&#10;&#13;&#10;    -- get value of a modulator, assign it to a variable:&#13;&#10;        -- variableName = panel:getModulatorByName(&quot;efxModus&quot;):getModulatorValue()&#13;&#10;&#13;&#10;    -- get a modulator and assign a value to it:&#13;&#10;        -- panel:getModulatorByName(&#8220;ModulatorName&#8221;):setModulatorValue((2), false, true, false)&#13;&#10;    -- panel:getModulatorByName(&#8220;ModulatorName&#8221;):setModulatorValue((variableName), false, true, false)&#13;&#10;&#13;&#10;    -- get a modulator and assign a value to it:&#13;&#10;        -- panel:getModulatorByName(&quot;efxModus&quot;):setModulatorValue((0), false, true, false)&#13;&#10;&#13;&#10;&#9;--b = BubbleMessageComponent(500)&#13;&#10;&#9;--b:showAt(comp, &quot;Global Reset&quot;, 2500, true, false)&#13;&#10;&#13;&#10;    --PanicReset()&#13;&#10;&#13;&#10;&#9;sendControlChangeMessage (120, 0)&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- all sounds off&#13;&#10;&#9;sendControlChangeMessage (121, 0)&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- reset all controllers&#13;&#10;&#9;sendControlChangeMessage (123, 0)&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- all notes off&#13;&#10;&#9;sendSysExMessage ({ 0xF0, 0x7E, 0x7F, 0x09, 0x01, 0xF7})&#9;-- general midi reset&#13;&#10;&#13;&#10;&#9;-- Built Message NRPNMessage&#13;&#10;&#9;local nrpnHigh = 0x3a&#9;&#9;&#9;&#9;--&#9;EFX Modul 0x3a, 0x3b, 0x3c | HQ-Distortion Modul 0x3d&#13;&#10;&#9;local nrpnLow = 0x7f&#9;&#9;&#9;&#9;--&#9;Insert MFX Reset All (Firm5716-EK) &#13;&#10;&#9;local data = 0x00&#9;&#9;&#9;&#9;&#9;-- &#9;ON&#13;&#10;&#9;for mfxNum=0, 2 do&#13;&#10;&#9;&#9;sendNRPNMessage ((nrpnHigh+mfxNum),nrpnLow,data)&#9;&#9;-- Insert MFX Reset All (Firm5716-EK Seite 4)&#9;0x3a ... 0x3c&#9;&#9;&#9;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (resetUiFlag == true) then &#13;&#10;&#9;&#9;Reset_UI()&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- reset UI&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#13;&#10;    sendSetEfxPresetOff(allChannelResetFlag)&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;Reset_UI = function()&#13;&#10;&#13;&#10;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;1&quot;)&#13;&#10;&#13;&#10;&#9;-- Reset Master Controls&#13;&#10;&#9;panel:getModulatorByName(&quot;MA_Volume_SysEx_std&quot;):setModulatorValue((127), false, true, false)&#13;&#10;&#9;panel:getModulatorByName(&quot;MA_Volume_CTRL&quot;):setModulatorValue((100), false, true, false)&#13;&#10;&#9;panel:getModulatorByName(&quot;MA_Tune_SysEx&quot;):setModulatorValue((64), false, true, false)&#13;&#10;&#9;panel:getModulatorByName(&quot;MA_Pan_SysEx&quot;):setModulatorValue((64), false, true, false)&#13;&#10;&#13;&#10;&#9;-- Reset Reverb &amp; Chorus Controls&#13;&#10;&#9;panel:getModulatorByName(&quot;MA_Reverb_type_Preset&quot;):setModulatorValue((0x03), false, true, false)&#13;&#10;&#9;panel:getModulatorByName(&quot;MA_Reverb_Level&quot;):setModulatorValue((31), false, true, false)&#13;&#10;&#9;panel:getModulatorByName(&quot;MA_Reverb_send_level&quot;):setModulatorValue((0), false, true, false)&#13;&#10;&#9;panel:getModulatorByName(&quot;MA_Chorus_type_Preset&quot;):setModulatorValue((0x02), false, true, false)&#13;&#10;&#9;panel:getModulatorByName(&quot;MA_Chorus_Level&quot;):setModulatorValue((25), false, true, false)&#13;&#10;&#9;panel:getModulatorByName(&quot;MA_Chorus_send_level&quot;):setModulatorValue((0), false, true, false)&#13;&#10;&#13;&#10;&#9;-- Reset Portamento Controls&#13;&#10;&#9;panel:getModulatorByName(&quot;MA_Portamento_On&quot;):setModulatorValue((0), false, true, false)&#13;&#10;&#9;panel:getModulatorByName(&quot;MA_Portamento_Control&quot;):setModulatorValue((0), false, true, false)&#13;&#10;&#9;panel:getModulatorByName(&quot;MA_Portamento_Time&quot;):setModulatorValue((0), false, true, false)&#13;&#10;&#13;&#10;&#9;-- Reset Other Controls (Pedals)&#13;&#10;&#9;panel:getModulatorByName(&quot;MA_Pedal_Soft&quot;):setModulatorValue((0), false, true, false)&#13;&#10;&#9;panel:getModulatorByName(&quot;MA_Pedal_Sostenuto&quot;):setModulatorValue((0), false, true, false)&#13;&#10;&#9;panel:getModulatorByName(&quot;MA_Pedal_Sustain&quot;):setModulatorValue((0), false, true, false)&#13;&#10;&#13;&#10;&#9;-- Reset Program Change&#13;&#10;&#9;panel:getModulatorByName(&quot;programList&quot;):setModulatorValue((0), false, true, false)&#13;&#10;&#13;&#10;&#9;-- Reset FX Tab / Combo&#13;&#10;--&#9;panel:getModulatorByName(&quot;efxModus&quot;):setModulatorValue((0), false, true, false)&#13;&#10;&#9;panel:getModulatorByName(&quot;fxTabs&quot;):setModulatorValue((0), false, true, false)&#13;&#10;--&#9;panel:getComponent(&quot;fxTabs&quot;):setProperty (&quot;uiTabsCurrentTab&quot;, 0, false)&#13;&#10;&#13;&#10;&#9;-- Reset GS Controls&#13;&#10;&#13;&#10;&#9;-- Reset EFX Modulators&#13;&#10;&#13;&#10;&#9;valueMapped = 0&#13;&#10;&#13;&#10;&#9;for efxId=1,3 do&#13;&#10;&#9;&#9;setAmpPresetEfx_Parameters (efxId, valueMapped, false)&#13;&#10;&#9;&#9;setDelayPresetEfx_Parameters (efxId, valueMapped, false)&#13;&#10;&#9;&#9;setWahPresetEfx_Parameters (efxId, valueMapped, false)&#13;&#10;&#9;&#9;setModPresetEfx_Parameters (efxId, valueMapped, false)&#13;&#10;&#13;&#10;&#9;&#9;if efxId == 1 then&#13;&#10;&#9;&#9;&#9;panningValue = 0&#13;&#10;&#9;&#9;elseif efxId == 2 then&#13;&#10;&#9;&#9;&#9;panningValue = 127&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;panningValue = 64&#13;&#10;&#9;&#9;end&#9;&#9;&#13;&#10;&#13;&#10;&#9;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;1&quot;)&#13;&#10;&#13;&#10;&#9;&#9;panel:getModulatorByName(string.format(&quot;Efx%d_Mix_Gain&quot;,efxId)):setModulatorValue((127), false, true, false)&#13;&#10;&#9;&#9;panel:getModulatorByName(string.format(&quot;Efx%d_Mix_Panning&quot;,efxId)):setModulatorValue((panningValue), false, true, false)&#9;&#9;&#9;&#9;-- left&#13;&#10;&#9;&#9;panel:getModulatorByName(string.format(&quot;Efx%d_Mix_FrontRear&quot;,efxId)):setModulatorValue((64), false, true, false)&#9;&#13;&#10;&#9;&#9;panel:getModulatorByName(string.format(&quot;Efx%d_Mix_LoCutFreq&quot;,efxId)):setModulatorValue((0), false, true, false)&#13;&#10;&#9;&#9;panel:getModulatorByName(string.format(&quot;Efx%d_Mix_HiCutFreq&quot;,efxId)):setModulatorValue((127), false, true, false)&#13;&#10;&#9;&#9;panel:getModulatorByName(string.format(&quot;Efx%d_Mix_Reverb&quot;,efxId)):setModulatorValue((0), false, true, false)&#9;&#13;&#10;&#9;&#9;panel:getModulatorByName(string.format(&quot;Efx%d_Mix_Chorus&quot;,efxId)):setModulatorValue((0), false, true, false)&#13;&#10;&#9;&#9;panel:getModulatorByName(string.format(&quot;Efx%d_Mix_OutputLevel&quot;,efxId)):setModulatorValue((127), false, true, false)&#9;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;0&quot;)&#13;&#10;&#13;&#10;&#9;setHQDistortionPreset_Parameters (valueMapped, false)&#13;&#10;&#13;&#10;&#9;-- Reset Delay Controls&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx1_Delay_Preset&quot;):setModulatorValue((0), false, true, false)&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx2_Delay_Preset&quot;):setModulatorValue((0), false, true, false)&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx3_Delay_Preset&quot;):setModulatorValue((0), false, true, false)&#13;&#10;&#13;&#10;&#9;-- Reset WahWah Controls&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx1_Wah_Preset&quot;):setModulatorValue((0), false, true, false)&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx2_Wah_Preset&quot;):setModulatorValue((0), false, true, false)&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx3_Wah_Preset&quot;):setModulatorValue((0), false, true, false)&#13;&#10;&#13;&#10;&#9;-- Reset Efx Mod Controls&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx1_Mod_Preset&quot;):setModulatorValue((0), false, true, false)&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx2_Mod_Preset&quot;):setModulatorValue((0), false, true, false)&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx3_Mod_Preset&quot;):setModulatorValue((0), false, true, false)&#13;&#10;&#13;&#10;&#9;-- Reset Efx1 Generals Mix Controls&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx1_Mix_Gain&quot;):setModulatorValue((0), false, true, false)&#9;&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx1_Mix_Panning&quot;):setModulatorValue((0), false, true, false)&#9;&#9;&#9;&#9;-- left&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx1_Mix_FrontRear&quot;):setModulatorValue((64), false, true, false)&#9;&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx1_Mix_LoCutFreq&quot;):setModulatorValue((0), false, true, false)&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx1_Mix_HiCutFreq&quot;):setModulatorValue((127), false, true, false)&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx1_Mix_Reverb&quot;):setModulatorValue((0), false, true, false)&#9;&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx1_Mix_Chorus&quot;):setModulatorValue((0), false, true, false)&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx1_Mix_OutputLevel&quot;):setModulatorValue((127), false, true, false)&#9;&#13;&#10;&#13;&#10;&#9;-- Reset Efx2 Generals Mix Controls&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx2_Mix_Gain&quot;):setModulatorValue((0), false, true, false)&#9;&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx2_Mix_Panning&quot;):setModulatorValue((127), false, true, false)&#9;&#9;&#9;-- right&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx2_Mix_FrontRear&quot;):setModulatorValue((64), false, true, false)&#9;&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx2_Mix_LoCutFreq&quot;):setModulatorValue((0), false, true, false)&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx2_Mix_HiCutFreq&quot;):setModulatorValue((127), false, true, false)&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx2_Mix_Reverb&quot;):setModulatorValue((0), false, true, false)&#9;&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx2_Mix_Chorus&quot;):setModulatorValue((0), false, true, false)&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx2_Mix_OutputLevel&quot;):setModulatorValue((127), false, true, false)&#13;&#10;&#13;&#10;&#9;-- Reset Efx1&amp;2 Generals Mix Controls&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx3_Mix_Gain&quot;):setModulatorValue((0), false, true, false)&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx3_Mix_Panning&quot;):setModulatorValue((64), false, true, false)&#9;&#9;&#9;-- center&#13;&#10;---&#9;panel:getModulatorByName(&quot;Efx3_Mix_FrontRear&quot;):setModulatorValue((64), false, true, false)&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx3_Mix_LoCutFreq&quot;):setModulatorValue((0), false, true, false)&#13;&#10;---&#9;panel:getModulatorByName(&quot;Efx3_Mix_HiCutFreq&quot;):setModulatorValue((127), false, true, false)&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx3_Mix_Reverb&quot;):setModulatorValue((0), false, true, false)&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx3_Mix_Chorus&quot;):setModulatorValue((0), false, true, false)&#13;&#10;--&#9;panel:getModulatorByName(&quot;Efx3_Mix_OutputLevel&quot;):setModulatorValue((127), false, true, false)&#13;&#10;&#13;&#10;&#9;-- Reset HQ Distortion&#13;&#10;--&#9;panel:getModulatorByName(&quot;HQ_Dist_Preset&quot;):setModulatorValue((0), false, true, false)&#13;&#10;--&#9;panel:getModulatorByName(&quot;HQ_Dist_On&quot;):setModulatorValue((0), false, true, false)&#13;&#10;--&#9;panel:getComponent(&quot;grp_HQ_DistortionTopLevelControls&quot;):setProperty (&quot;componentDisabled&quot;, 1, false)&#13;&#10;&#13;&#10;&#9;-- Reset Bank Select&#13;&#10;&#9;--panel:getModulatorByName(&quot;BankSelect&quot;):setModulatorValue((0), false, true, false)&#13;&#10;&#9;--panel:getModulatorByName(&quot;btnBankA&quot;):setModulatorValue((1), false, true, false)&#13;&#10;&#9;--panel:getModulatorByName(&quot;btnBankB&quot;):setModulatorValue((0), false, true, false)&#13;&#10;&#9;--panel:getModulatorByName(&quot;btnBankC&quot;):setModulatorValue((0), false, true, false)&#13;&#10;&#9;--panel:getModulatorByName(&quot;btnBankD&quot;):setModulatorValue((0), false, true, false)&#13;&#10;&#13;&#10;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;0&quot;)&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;sendSetEfxPresetOff=function(allChannelResetFlag)&#13;&#10;&#13;&#10;    -- Send current panel values into the editbuffer of the synth&#13;&#10;&#13;&#10;    local APRDump = {}&#13;&#10;&#13;&#10;&#9;local msgCount = 0&#13;&#10;&#9;local fx = 0x3a&#13;&#10;&#13;&#10;&#9;if (allChannelResetFlag == true) then&#13;&#10;&#9;&#9;beginChannelId = 0&#13;&#10;&#9;&#9;endChannelId = 15&#13;&#10;&#9;else&#13;&#10;&#9;&#9;beginChannelId = getCurrentMidiChannel (true)&#13;&#10;&#9;&#9;endChannelId = beginChannelId&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;for ch=beginChannelId, endChannelId do&#13;&#10;&#9;&#9;for fxOffset=0, 2 do&#13;&#10;&#9;&#9;&#9;msgCount = msgCount +1&#13;&#10;        &#9;--APRDump[msgCount] = string.format(&quot;f0 62 7b 1a %02x 7f %02x f7&quot;, ch, (fx+fxOffset))&#13;&#10;&#9;&#9;&#9;APRDump[msgCount] = string.format(&quot;f0 26 7b 1a %02x %02x %02x f7&quot;, (0x10+ch), 0x7f, (fx+fxOffset))&#9;&#9;&#9;&#9;-- SD 1000 Seite 60 efx preset = OFF&#13;&#10; &#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;&#13;&#10;&#9;for index=1,msgCount do&#13;&#10;&#13;&#10;        -- for debugging purposes let's see how that looks like&#13;&#10;--        console (string.format(&quot;APRDump[%d] = %s&quot;, index, tostring(APRDump[index])))&#13;&#10;&#13;&#10;        -- Convert the Table to a Memoryblock&#13;&#10;        MemB=MemoryBlock(APRDump[index])&#13;&#10;&#13;&#10;        -- Send patchData to the Synth&#13;&#10;        panel:sendMidiMessageNow(CtrlrMidiMessage(MemB))&#13;&#10;&#13;&#10;   &#9;end&#13;&#10;&#13;&#10;end"
                 luaMethodLinkedProperty="componentLuaMouseDown" luaMethodSource="0"
                 uuid="167f68623e4d49f0bbd76adf54289688" luaMethodValid="1"/>
      <luaMethod luaMethodName="PanicReset" luaMethodCode="--&#10;-- Called when a mouse is down on this component&#10;--&#10;&#10;PanicReset = function(--[[ CtrlrComponent --]] comp, --[[ MouseEvent --]] event)&#13;&#10;&#13;&#10;&#9;MegaPanicReset_(true, false)&#13;&#10;&#10;end"
                 luaMethodLinkedProperty="componentLuaMouseDown" luaMethodSource="0"
                 uuid="ac2efc23fa754bb59289a695eea5058a" luaMethodValid="1"/>
      <luaMethod luaMethodName="BankSelect" luaMethodCode="--&#10;-- Called when a mouse is down on this component&#13;&#10;-- Methode for all four Banks&#10;--&#10;&#10;BankSelect = function(--[[ CtrlrComponent --]] comp, --[[ MouseEvent --]] event)&#13;&#10;&#13;&#10;&#9;-- Problem, ToggleButton... value change f&#252;hrt zu midisendevorgang&#13;&#10;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;1&quot;)&#13;&#10;&#13;&#10;&#9;if comp ~= nil then&#13;&#10;&#13;&#10;&#9;&#9;-- WRONG: compName = comp:getModulatorName()&#13;&#10;&#9;&#9;compProp = comp:getOwner():getProperty(&quot;name&quot;)&#13;&#10;&#9;&#9;console(&quot;BankSelect: &quot;..L(compProp))&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;listBankSelect = panel:getModulatorByName(&quot;BankSelect&quot;)&#13;&#10;&#13;&#10;&#9;&#9;btnBankA = panel:getModulatorByName(&quot;btnBankA&quot;)&#13;&#10;&#9;&#9;--btnBankA:removeProperty(&quot;uiButtonColourOff&quot;)&#13;&#10;&#9;&#9;--btnBankA:removeProperty(&quot;uiButtonColourOn&quot;)&#13;&#10;&#13;&#10;&#9;&#9;btnBankB = panel:getModulatorByName(&quot;btnBankB&quot;)&#13;&#10;&#9;&#9;--btnBankB:removeProperty(&quot;uiButtonColourOff&quot;)&#13;&#10;&#9;&#9;--btnBankB:removeProperty(&quot;uiButtonColourOn&quot;)&#13;&#10;&#13;&#10;&#9;&#9;btnBankC = panel:getModulatorByName(&quot;btnBankC&quot;)&#13;&#10;&#9;&#9;--btnBankC:removeProperty(&quot;uiButtonColourOff&quot;)&#13;&#10;&#9;&#9;--btnBankC:removeProperty(&quot;uiButtonColourOn&quot;)&#13;&#10;&#13;&#10;&#9;&#9;btnBankD = panel:getModulatorByName(&quot;btnBankD&quot;)&#13;&#10;&#9;&#9;--btnBankD:removeProperty(&quot;uiButtonColourOff&quot;)&#13;&#10;&#9;&#9;--btnBankD:removeProperty(&quot;uiButtonColourOn&quot;)&#13;&#10;&#13;&#10;&#9;&#9;if (compProp == &quot;btnBankA&quot;) then&#13;&#10;&#9;&#9;&#9;listBankSelect : setModulatorValue((0), false, false, false)&#13;&#10;&#9;&#9;&#9;btnBankA:setModulatorValue((0), false, false, false)&#13;&#10;&#9;&#9;&#9;btnBankB:setModulatorValue((0), false, false, false)&#13;&#10;&#9;&#9;&#9;btnBankC:setModulatorValue((0), false, false, false)&#13;&#10;&#9;&#9;&#9;btnBankD:setModulatorValue((0), false, false, false)&#13;&#10;&#9;&#9;elseif compProp == &quot;btnBankB&quot; then&#13;&#10;&#9;&#9;&#9;listBankSelect : setModulatorValue((1), false, false, false)&#13;&#10;&#9;&#9;&#9;btnBankA:setModulatorValue((0), false, false, false)&#13;&#10;&#9;&#9;&#9;btnBankB:setModulatorValue((0), false, false, false)&#13;&#10;&#9;&#9;&#9;btnBankC:setModulatorValue((0), false, false, false)&#13;&#10;&#9;&#9;&#9;btnBankD:setModulatorValue((0), false, false, false)&#13;&#10; &#9;&#9;elseif compProp == &quot;btnBankC&quot; then&#13;&#10;&#9;&#9;&#9;listBankSelect : setModulatorValue((2), false, false, false)&#13;&#10;&#9;&#9;&#9;btnBankA:setModulatorValue((0), false, false, false)&#13;&#10;&#9;&#9;&#9;btnBankB:setModulatorValue((0), false, false, false)&#13;&#10;&#9;&#9;&#9;btnBankC:setModulatorValue((0), false, false, false)&#13;&#10;&#9;&#9;&#9;btnBankD:setModulatorValue((0), false, false, false)&#13;&#10; &#9;&#9;elseif compProp == &quot;btnBankD&quot; then&#13;&#10;&#9;&#9;&#9;listBankSelect : setModulatorValue((3), false, false, false)&#13;&#10;&#9;&#9;&#9;btnBankA:setModulatorValue((0), false, false, false)&#13;&#10;&#9;&#9;&#9;btnBankB:setModulatorValue((0), false, false, false)&#13;&#10;&#9;&#9;&#9;btnBankC:setModulatorValue((0), false, false, false)&#13;&#10;&#9;&#9;&#9;btnBankD:setModulatorValue((0), false, false, false)&#13;&#10; &#9;&#9;end&#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;0&quot;)&#13;&#10;&#10;end"
                 luaMethodLinkedProperty="componentLuaMouseDown" luaMethodSource="0"
                 uuid="af53a01aef1e40a8802895412c78ed02" luaMethodValid="1"/>
      <luaMethod luaMethodName="fxTabChange" luaMethodCode="--&#13;&#10;-- Called when the current tab in an uiTabs component is changed&#13;&#10;--&#13;&#10;&#13;&#10;fxTabChange = function(--[[ CtrlrModulator --]] mod, --[[ number --]] tabIndex)&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;fxTabChange (mod=%s, tabIndex=%d)&quot;, mod:getProperty(&quot;name&quot;), tabIndex))&#13;&#10;&#13;&#10;&#9;if (loadingStage ~= nil) then &#13;&#10;&#9;&#9;if (loadingStage == getStateValueIgnoredAutomatedOnModChangeEvents()) then&#13;&#10;&#9;&#9;&#9;console (string.format(&quot;---------&gt;is in state: ignored automated onModChange Event == %s - stop Method&quot;, tostring(loadingCompleteFlag)))&#13;&#10;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;    efxModusMod = panel : getModulatorByName(&quot;efxModus&quot;)&#13;&#10;&#9;efxModusMod:setModulatorValue((tabIndex), false, true, false)&#13;&#10;&#13;&#10;&#9;fxTabsMod = panel:getModulatorByName(&quot;fxTabs&quot;)&#13;&#10;&#9;if fxTabsMod ~= nil then&#13;&#10;&#9;&#9;fxTabsMod:setModulatorValue(tabIndex, false, true, false)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;console (&quot;fxTabChange cant set Modulator Value!!!&quot;)&#13;&#10;&#9;&#9;--debugBubble = BubbleMessageComponent(500)&#13;&#10;&#9;&#9;--debugBubble:showAt(mod, &quot;fxTabsMod not found&quot;, 2500, true, false)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;"
                 luaMethodLinkedProperty="uiTabsCurrentTabChanged" luaMethodSource="0"
                 uuid="9582302d6ce8437aa4cad625722e380d" luaMethodValid="1"/>
      <luaMethod luaMethodName="setHQDistortionPreset" luaMethodCode="--&#13;&#10;-- Called when a modulator value changes&#13;&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;&#10;-- @value    new numeric value of the modulator&#13;&#10;--&#13;&#10;setHQDistortionPreset = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#9;&#13;&#10;&#9;modName = mod:getProperty(&quot;name&quot;)&#13;&#10;&#9;valueMapped = mod:getValueMapped()&#13;&#10;&#13;&#10;--&#9;console (&quot;modName == &quot; .. modName)&#13;&#10;--&#9;console (&quot;value == &quot; .. value)&#13;&#10;--&#9;console (&quot;valueMapped == &quot; .. valueMapped)&#13;&#10;&#13;&#10;&#9;validPreset = isPresetValid(mod, value)&#13;&#10;&#13;&#10;&#9;if validPreset == true then&#13;&#10;&#9;&#9;setHQDistortionPreset_ (valueMapped, true)&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- &lt;--- individuell&#13;&#10;&#9;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;1&quot;)&#9;&#9;&#9;&#9;&#9;&#9;-- not needed ? Component MIDI Implementation set to NONE&#13;&#10;&#9;&#9;mod:setModulatorValue(mod:getMaxNonMapped(),false,false,false)&#9;&#9;&#9;-- careful: endless loop LAST ITEM NEEDS MAPPED VALUE=99&#13;&#10;&#9;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;0&quot;)&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;setHQDistortionPreset_ = function (valueMapped, midiOutputEnabled)&#13;&#10;&#13;&#10;&#9;if (midiOutputEnabled == true) then&#13;&#10;&#9;&#9;-- Built Message CC/SysEx&#13;&#10;&#9;&#9;nrpnHigh = 0x3d&#9;&#9;&#9;&#9;--&#9;EFX Modul 0x3a, 0x3b, 0x3c | HQ-Distortion Modul 0x3d&#13;&#10;&#9;&#9;nrpnLow = 0x03&#9;&#9;&#9;&#9;--&#9;Type (Preset)&#13;&#10;&#9;&#9;data = valueMapped&#9;&#9;&#9;-- &#9;int value (0:off,1:warm-drive,2:overdrive,3:cry,4:distortion,5:metal,6:max-saturation,7:Fuzz)&#13;&#10;&#13;&#10;&#9;&#9;-- Send Message&#13;&#10;&#9;&#9;sendNRPNMessage (nrpnHigh,nrpnLow,data)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;setHQDistortionPreset_Parameters(valueMapped, true)&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- &lt;--- individuell&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;setHQDistortionPreset_Parameters = function (valueMapped, midiOutputEnabled)&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;setHQDistortionPreset_Parameters (valueMapped=%d, midiOutputEnabled=%s)&quot;, tonumber(valueMapped,10), tostring(midiOutputEnabled)))&#13;&#10;&#13;&#10;&#9;if midiOutputEnabled == false then&#13;&#10;&#9;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;1&quot;)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;--preset = panel : getModulatorByName(&quot;HQ_Dist_Preset&quot;):getModulatorValue()&#9;&#9;&#9;--&#13;&#10;&#9;preset = valueMapped&#13;&#10;&#13;&#10;&#9;PresetValueModName = string.format(&quot;HQ_Dist_Preset_Value&quot;, efxNum)&#13;&#10;&#9;PresetValueMod = panel : getModulatorByName(PresetValueModName)&#13;&#10;--&#9;PresetValueMod : setModulatorValue (preset, false, false, false)&#13;&#10;&#9;PresetValueMod : setValueMapped(preset, false)&#13;&#10;&#13;&#10;&#9;onOffButton = panel:getModulatorByName(&quot;HQ_Dist_On&quot;)&#13;&#10;&#13;&#10;&#9;HQ_Top_Level = panel : getModulatorByName(&quot;HQ_Top_Level&quot;)&#13;&#10;&#9;HQ_Top_Booster = panel : getModulatorByName(&quot;HQ_Top_Booster&quot;)&#13;&#10;&#9;HQ_Top_NoiseReduction = panel : getModulatorByName(&quot;HQ_Top_NoiseReduction&quot;)&#13;&#10;&#9;HQ_Top_Drive = panel : getModulatorByName(&quot;HQ_Top_Drive&quot;)&#13;&#10;&#9;HQ_Top_Tone = panel : getModulatorByName(&quot;HQ_Top_Tone&quot;)&#13;&#10;&#9;HQ_Parameter_InputHighPassCutOff = panel : getModulatorByName(&quot;HQ_Parameter_InputHighPassCutOff&quot;)&#13;&#10;&#9;HQ_Parameter_BiasLevel = panel : getModulatorByName(&quot;HQ_Parameter_BiasLevel&quot;)&#13;&#10;&#9;HQ_Parameter_InputHighPassMode = panel : getModulatorByName(&quot;HQ_Parameter_InputHighPassMode&quot;)&#13;&#10;&#9;HQ_Parameter_PreGain = panel : getModulatorByName(&quot;HQ_Parameter_PreGain&quot;)&#13;&#10;&#9;HQ_Parameter_InputLowPassMode = panel : getModulatorByName(&quot;HQ_Parameter_InputLowPassMode&quot;)&#13;&#10;&#9;HQ_Paramter_FreqLow = panel : getModulatorByName(&quot;HQ_Paramter_FreqLow&quot;)&#13;&#10;&#9;HQ_Paramter_FreqHigh = panel : getModulatorByName(&quot;HQ_Paramter_FreqHigh&quot;)&#13;&#10;&#9;HQ_Parameter_Type = panel : getModulatorByName(&quot;HQ_Parameter_Type&quot;)&#13;&#10;&#9;HQ_Parameter_InputLowPassCutOff = panel : getModulatorByName(&quot;HQ_Parameter_InputLowPassCutOff&quot;)&#13;&#10;&#9;HQ_Parameter_GainLow_min = panel : getModulatorByName(&quot;HQ_Parameter_GainLow_min&quot;)&#13;&#10;&#9;HQ_Parameter_GainLow_max = panel : getModulatorByName(&quot;HQ_Parameter_GainLow_max&quot;)&#13;&#10;&#9;HQ_Parameter_GainHigh_min = panel : getModulatorByName(&quot;HQ_Parameter_GainHigh_min&quot;)&#13;&#10;&#9;HQ_Parameter_GainHigh_max = panel : getModulatorByName(&quot;HQ_Parameter_GainHigh_max&quot;)&#13;&#10;&#13;&#10;&#9;-- update Label to current Preset Name &#13;&#10;&#9;setEfxPresetLabel(&quot;HQ_Dist_Current_Preset&quot;, &quot;HQ_Dist_Preset&quot;, valueMapped)&#13;&#10;&#13;&#10;&#13;&#10;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;0&quot;)&#13;&#10;&#9;if(preset == 0) then&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;onOffButton:setModulatorValue((0),false, true, false)&#13;&#10;&#9;else &#13;&#10;&#9;&#9;onOffButton:setModulatorValue((1),false, true, false)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if midiOutputEnabled == false then&#13;&#10;&#9;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;1&quot;)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#13;&#10;&#9;HQ_Top_Level : getComponent() : setProperty (&quot;componentDisabled&quot;, 1, false)&#13;&#10;    HQ_Top_Booster : getComponent() : setProperty (&quot;componentDisabled&quot;, 1, false)&#13;&#10;    HQ_Top_NoiseReduction : getComponent() : setProperty (&quot;componentDisabled&quot;, 1, false)&#13;&#10;    HQ_Top_Drive : getComponent() : setProperty (&quot;componentDisabled&quot;, 1, false)&#13;&#10;    HQ_Top_Tone : getComponent() : setProperty (&quot;componentDisabled&quot;, 1, false)&#13;&#10;    HQ_Parameter_InputHighPassCutOff : getComponent() : setProperty (&quot;componentDisabled&quot;, 1, false)&#13;&#10;    --HQ_Parameter_BiasLevel : getComponent() : setProperty (&quot;componentDisabled&quot;, 1, false)&#13;&#10;    HQ_Parameter_InputHighPassMode : getComponent() : setProperty (&quot;componentDisabled&quot;, 1, false)&#13;&#10;    HQ_Parameter_PreGain : getComponent() : setProperty (&quot;componentDisabled&quot;, 1, false)&#13;&#10;    HQ_Parameter_InputLowPassMode : getComponent() : setProperty (&quot;componentDisabled&quot;, 1, false)&#13;&#10;    --HQ_Paramter_FreqLow : getComponent() : setProperty (&quot;componentDisabled&quot;, 1, false)&#13;&#10;    --HQ_Paramter_FreqHigh : getComponent() : setProperty (&quot;componentDisabled&quot;, 1, false)&#13;&#10;    --HQ_Parameter_Type : getComponent() : setProperty (&quot;componentDisabled&quot;, 1, false)&#13;&#10;    HQ_Parameter_InputLowPassCutOff : getComponent() : setProperty (&quot;componentDisabled&quot;, 1, false)&#13;&#10;    --HQ_Parameter_GainLow_min : getComponent() : setProperty (&quot;componentDisabled&quot;, 1, false)&#13;&#10;&#9;HQ_Parameter_GainLow_max : getComponent() : setProperty (&quot;componentDisabled&quot;, 1, false)&#13;&#10;    --HQ_Parameter_GainHigh_min : getComponent() : setProperty (&quot;componentDisabled&quot;, 1, false)&#13;&#10;&#9;HQ_Parameter_GainHigh_max : getComponent() : setProperty (&quot;componentDisabled&quot;, 1, false)&#13;&#10;&#9;&#13;&#10;&#9;if (true) then&#13;&#10;&#9;&#9;setModulatorMidiMessageType (HQ_Top_Level, &quot;9&quot;)&#13;&#10;&#9;&#9;setModulatorMidiMessageType (HQ_Top_Booster, &quot;9&quot;)&#13;&#10;&#9;&#9;setModulatorMidiMessageType (HQ_Top_NoiseReduction, &quot;9&quot;)&#13;&#10;&#9;&#9;setModulatorMidiMessageType (HQ_Top_Drive, &quot;9&quot;)&#13;&#10;&#9;&#9;setModulatorMidiMessageType (HQ_Top_Tone, &quot;9&quot;)&#13;&#10;&#9;&#9;setModulatorMidiMessageType (HQ_Parameter_InputHighPassCutOff, &quot;9&quot;)&#13;&#10;&#9;&#9;setModulatorMidiMessageType (HQ_Parameter_InputHighPassMode, &quot;9&quot;)&#13;&#10;&#9;&#9;setModulatorMidiMessageType (HQ_Parameter_PreGain, &quot;9&quot;)&#13;&#10;&#9;&#9;setModulatorMidiMessageType (HQ_Parameter_InputLowPassMode, &quot;9&quot;)&#13;&#10;&#9;&#9;setModulatorMidiMessageType (HQ_Parameter_InputLowPassCutOff, &quot;9&quot;)&#13;&#10;&#9;&#9;setModulatorMidiMessageType (HQ_Parameter_GainLow_max, &quot;9&quot;)&#13;&#10;&#9;&#9;setModulatorMidiMessageType (HQ_Parameter_GainHigh_max, &quot;9&quot;)&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;setHQDefaultValues (false)&#13;&#10;&#9;--HQ_Top_Level : setModulatorValue((0),false,false, false)&#13;&#10;    --HQ_Top_Booster : setModulatorValue((0),false,false, false)&#13;&#10;    --HQ_Top_NoiseReduction : setModulatorValue((0),false,false, false)&#13;&#10;    --HQ_Top_Drive : setModulatorValue((0),false,false, false)&#13;&#10;    --HQ_Top_Tone : setModulatorValue((0),false,false, false)&#13;&#10;    --HQ_Parameter_InputHighPassCutOff : setModulatorValue((0),false,false, false)&#13;&#10;    HQ_Parameter_BiasLevel : setModulatorValue((0),false,false, false)&#13;&#10;    --HQ_Parameter_InputHighPassMode : setModulatorValue((0),false,false, false)&#13;&#10;    --HQ_Parameter_PreGain : setModulatorValue((0),false,false, false)&#13;&#10;    --HQ_Parameter_InputLowPassMode : setModulatorValue((0),false,false, false)&#13;&#10;    HQ_Paramter_FreqLow : setModulatorValue((0),false,false, false)&#13;&#10;    HQ_Paramter_FreqHigh : setModulatorValue((0),false,false, false)&#13;&#10;    HQ_Parameter_Type : setModulatorValue((0),false,false, false)&#13;&#10;    --HQ_Parameter_InputLowPassCutOff : setModulatorValue((0),false,false, false)&#13;&#10;    HQ_Parameter_GainLow_min : setModulatorValue((0),false,false, false)&#13;&#10;&#9;HQ_Parameter_GainLow_max : setModulatorValue((0),false,false, false)&#13;&#10;    HQ_Parameter_GainHigh_min : setModulatorValue((0),false,false, false)&#13;&#10;&#9;HQ_Parameter_GainHigh_max : setModulatorValue((0),false,false, false)&#13;&#10;&#13;&#10;if(preset==0)then&#13;&#10;-- Off&#13;&#10;&#13;&#10;elseif(preset==1)then&#13;&#10;-- Warm-Drive&#13;&#10;    HQ_Parameter_BiasLevel : setModulatorValue((72),false, true, false)&#13;&#10;    HQ_Parameter_Type : setModulatorValue((1),false, true, false)&#13;&#10;    HQ_Paramter_FreqLow : setModulatorValue((64),false, true, false)&#13;&#10;    HQ_Parameter_GainLow_min : setModulatorValue((91),false, true, false)&#13;&#10;    HQ_Parameter_GainLow_max : setModulatorValue((54),false, true, false)&#13;&#10;    HQ_Paramter_FreqHigh : setModulatorValue((30),false, true, false)&#13;&#10;    HQ_Parameter_GainHigh_min : setModulatorValue((45),false, true, false)&#13;&#10;    HQ_Parameter_GainHigh_max : setModulatorValue((90),false, true, false)&#13;&#10;elseif(preset==2)then&#13;&#10;--Overdrive&#13;&#10;    HQ_Parameter_InputHighPassCutOff : setModulatorValue((11),false, true, false)&#13;&#10;    HQ_Parameter_BiasLevel : setModulatorValue((74),false, true, false)&#13;&#10;    HQ_Parameter_InputLowPassCutOff : setModulatorValue((47),false, true, false)&#13;&#10;    HQ_Parameter_InputLowPassMode : setModulatorValue((0),false, true, false)&#13;&#10;    HQ_Parameter_Type : setModulatorValue((4),false, true, false)&#13;&#10;    HQ_Paramter_FreqLow : setModulatorValue((64),false, true, false)&#13;&#10;    HQ_Parameter_GainLow_min : setModulatorValue((50),false, true, false)&#13;&#10;    HQ_Parameter_GainLow_max : setModulatorValue((50),false, true, false)&#13;&#10;    HQ_Paramter_FreqHigh : setModulatorValue((64),false, true, false)&#13;&#10;    HQ_Parameter_GainHigh_min : setModulatorValue((10),false, true, false)&#13;&#10;    HQ_Parameter_GainHigh_max : setModulatorValue((58),false, true, false)&#13;&#10;elseif(preset==3)then&#13;&#10;--Cry&#13;&#10;    HQ_Parameter_InputHighPassCutOff : setModulatorValue((20),false, true, false)&#13;&#10;    HQ_Parameter_InputHighPassMode : setModulatorValue((1),false, true, false)&#13;&#10;    HQ_Parameter_BiasLevel : setModulatorValue((58),false, true, false)&#13;&#10;    HQ_Parameter_InputLowPassCutOff : setModulatorValue((56),false, true, false)&#13;&#10;    HQ_Parameter_InputLowPassMode : setModulatorValue((1),false, true, false)&#13;&#10;    HQ_Parameter_Type : setModulatorValue((14),false, true, false)&#13;&#10;    HQ_Paramter_FreqLow : setModulatorValue((80),false, true, false)&#13;&#10;    HQ_Parameter_GainLow_min : setModulatorValue((90),false, true, false)&#13;&#10;    HQ_Parameter_GainLow_max : setModulatorValue((60),false, true, false)&#13;&#10;    HQ_Paramter_FreqHigh : setModulatorValue((62),false, true, false)&#13;&#10;    HQ_Parameter_GainHigh_min : setModulatorValue((50),false, true, false)&#13;&#10;    HQ_Parameter_GainHigh_max : setModulatorValue((80),false, true, false)&#13;&#10;elseif(preset==4)then&#13;&#10;--Distortion&#13;&#10;    HQ_Parameter_BiasLevel : setModulatorValue((64),false, true, false)&#13;&#10;    HQ_Parameter_InputLowPassCutOff : setModulatorValue((40),false, true, false)&#13;&#10;    HQ_Parameter_InputLowPassMode : setModulatorValue((1),false, true, false)&#13;&#10;    HQ_Parameter_Type : setModulatorValue((13),false, true, false)&#13;&#10;    HQ_Paramter_FreqLow : setModulatorValue((64),false, true, false)&#13;&#10;    HQ_Parameter_GainLow_min : setModulatorValue((90),false, true, false)&#13;&#10;    HQ_Parameter_GainLow_max : setModulatorValue((50),false, true, false)&#13;&#10;    HQ_Paramter_FreqHigh : setModulatorValue((67),false, true, false)&#13;&#10;    HQ_Parameter_GainHigh_min : setModulatorValue((24),false, true, false)&#13;&#10;    HQ_Parameter_GainHigh_max : setModulatorValue((64),false, true, false)&#13;&#10;elseif(preset==5)then&#13;&#10;--Metal&#13;&#10;    &#13;&#10;elseif(preset==6)then&#13;&#10;--Max Saturation&#13;&#10;&#9;HQ_Parameter_InputHighPassCutOff : setModulatorValue((8),false, true, false)&#13;&#10;    HQ_Parameter_BiasLevel : setModulatorValue((64),false, true, false)&#13;&#10;    HQ_Parameter_InputLowPassCutOff : setModulatorValue((8),false, true, false)&#13;&#10;    HQ_Parameter_InputLowPassMode : setModulatorValue((2),false, true, false)&#13;&#10;    HQ_Parameter_Type : setModulatorValue((9),false, true, false)&#13;&#10;    HQ_Paramter_FreqLow : setModulatorValue((76),false, true, false)&#13;&#10;    HQ_Parameter_GainLow_min : setModulatorValue((90),false, true, false)&#13;&#10;    HQ_Parameter_GainLow_max : setModulatorValue((59),false, true, false)&#13;&#10;    HQ_Paramter_FreqHigh : setModulatorValue((82),false, true, false)&#13;&#10;    HQ_Parameter_GainHigh_min : setModulatorValue((39),false, true, false)&#13;&#10;    HQ_Parameter_GainHigh_max : setModulatorValue((69),false, true, false)&#13;&#10;elseif(preset==7)then&#13;&#10;-- Fuzz&#13;&#10;    HQ_Parameter_BiasLevel : setModulatorValue((67),false, true, false)&#13;&#10;    HQ_Parameter_InputLowPassCutOff : setModulatorValue((28),false, true, false)&#13;&#10;    HQ_Parameter_InputLowPassMode : setModulatorValue((1),false, true, false)&#13;&#10;    HQ_Parameter_Type : setModulatorValue((8),false, true, false)&#13;&#10;    HQ_Paramter_FreqLow : setModulatorValue((76),false, true, false)&#13;&#10;    HQ_Parameter_GainLow_min : setModulatorValue((85),false, true, false)&#13;&#10;    HQ_Parameter_GainLow_max : setModulatorValue((50),false, true, false)&#13;&#10;    HQ_Paramter_FreqHigh : setModulatorValue((68),false, true, false)&#13;&#10;    HQ_Parameter_GainHigh_min : setModulatorValue((40),false, true, false)&#13;&#10;    HQ_Parameter_GainHigh_max : setModulatorValue((85),false, true, false)&#13;&#10;end&#13;&#10;&#13;&#10;if midiOutputEnabled == false then&#13;&#10;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;0&quot;)&#13;&#10;end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;setHQDefaultValues = function (midiOutputEnabled)&#13;&#10;&#13;&#10;if midiOutputEnabled == false then&#13;&#10;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;1&quot;)&#13;&#10;end&#13;&#10;&#9;&#13;&#10;&#9;HQ_Top_Level : setModulatorValue((0),false,false, false)&#9;&#9;&#9;&#9;&#9;&#9;--&#13;&#10;    HQ_Top_Booster : setModulatorValue((0),false,false, false)&#9;&#9;&#9;&#9;&#9;&#9;--&#13;&#10;    HQ_Top_NoiseReduction : setModulatorValue((0),false,false, false)&#9;&#9;&#9;&#9;--&#13;&#10;    HQ_Top_Drive : setModulatorValue((0),false,false, false)&#9;&#9;&#9;&#9;&#9;&#9;--&#13;&#10;    HQ_Top_Tone : setModulatorValue((0),false,false, false)&#9;&#9;&#9;&#9;&#9;&#9;&#9;--&#13;&#10;    HQ_Parameter_InputHighPassCutOff : setModulatorValue((0),false,false, false)&#9;--&#13;&#10;    &#13;&#10;&#9;HQ_Parameter_BiasLevel : setModulatorValue((0),false,false, false)&#13;&#10;    &#13;&#10;&#9;HQ_Parameter_InputHighPassMode : setModulatorValue((0),false,false, false)&#9;&#9;--&#13;&#10;    HQ_Parameter_PreGain : setModulatorValue((0),false,false, false)&#9;&#9;&#9;&#9;--&#13;&#10;    HQ_Parameter_InputLowPassMode : setModulatorValue((0),false,false, false)&#9;&#9;--&#13;&#10;    &#13;&#10;&#9;HQ_Paramter_FreqLow : setModulatorValue((0),false,false, false)&#13;&#10;    HQ_Paramter_FreqHigh : setModulatorValue((0),false,false, false)&#13;&#10;    HQ_Parameter_Type : setModulatorValue((0),false,false, false)&#13;&#10;    &#13;&#10;&#9;HQ_Parameter_InputLowPassCutOff : setModulatorValue((0),false,false, false)&#9;&#9;--&#13;&#10;    &#13;&#10;&#9;HQ_Parameter_GainLow_min : setModulatorValue((0),false,false, false)&#13;&#10;&#9;HQ_Parameter_GainLow_max : setModulatorValue((0),false,false, false)&#9;&#9;&#9;-- existiert nicht in manual&#13;&#10;    HQ_Parameter_GainHigh_min : setModulatorValue((0),false,false, false)&#13;&#10;&#9;HQ_Parameter_GainHigh_max : setModulatorValue((0),false,false, false)&#9;&#9;&#9;-- existiert nicht in manual&#13;&#10;&#13;&#10;if midiOutputEnabled == false then&#13;&#10;&#9;panel:setPropertyString(&quot;panelMidiPauseOut&quot;,&quot;0&quot;)&#13;&#10;end&#13;&#10;&#9;&#13;&#10;end"
                 luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                 uuid="2a31c51cdf4c4d518821cd9b56357020" luaMethodValid="1"/>
      <luaMethod luaMethodName="efx1_mix_parameter_change" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;efx1_mix_parameter_change = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#10;&#13;&#10;&#9;modName = mod:getProperty(&quot;name&quot;)&#13;&#10;&#9;efxId = String(modName):substring(0,4) -- efx1&#13;&#10;&#9;efxId = String(modName):substring(3,4) -- 1&#13;&#10;&#13;&#10;&#9;if (isLocked (efxId) == true) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;modName = mod:getProperty(&quot;name&quot;)&#13;&#10;&#13;&#10;&#9;targetModLabelName = string.format(&quot;%s_Mix_Current_Preset&quot;, efxId)&#13;&#10;&#9;--targetModLabel = panel:getModulatorByName(&quot;Efx1_Mix_Current_Preset&quot;)&#13;&#10;&#9;targetModLabel = panel:getModulatorByName(targetModLabelName)&#13;&#10;&#13;&#10;&#9;targetModName = string.format(&quot;%s_Mix_Preset&quot;, efxId)&#13;&#10;&#9;--targetMod = panel:getModulatorByName(&quot;Efx1_Mix_Preset&quot;)&#13;&#10;&#9;targetMod = panel:getModulatorByName(targetModName)&#13;&#10;&#13;&#10;&#9;endIndex = targetMod : getMaxNonMapped()&#13;&#10;&#9;targetMod : setModulatorValue((endIndex+1), false, false, false)&#13;&#10;&#9;--panel:getModulatorByName(&quot;Efx1_Mix_Preset&quot;):setValue((14), false, true)&#13;&#10;&#13;&#10;end"
                 luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                 uuid="5e20b4d6caf94075a7544031c0c472c9" luaMethodValid="1"/>
      <luaMethod luaMethodName="convertStringToData" luaMethodCode="function convertStringToData( s )&#13;&#10;&#10;&#9;-- Your method code here&#13;&#10;&#13;&#10;&#9;hex = string.format(&quot;%02x&quot;, string.byte(s))&#13;&#10;&#9;for i = 2, #s do&#13;&#10;&#9;&#9;hex = string.format( &quot;%s %02x&quot;, hex, string.byte(s,i) )&#13;&#10;&#9;end&#13;&#10;&#9;data = MemoryBlock()&#13;&#10;&#9;data:loadFromHexString( hex )&#13;&#10;&#9;return( data )&#13;&#10;&#10;end"
                 luaMethodLinkedProperty="" luaMethodSource="0" uuid="d3ccbc88832a4af4b66bcb692c7cb376"
                 luaMethodValid="1"/>
      <luaMethod luaMethodName="testMethod" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;testMethod = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#13;&#10;&#9;if (value == 1) then&#13;&#10;&#9;&#9;testTimer()&#13;&#10;&#9;else&#13;&#10;&#9;&#9;stopTestTimer()&#13;&#10;&#9;end&#13;&#10;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;stopTestTimer = function ()&#13;&#10;&#13;&#10;&#9;timer:stopTimer (3)&#13;&#10;&#9;timer:stopTimer (4)&#13;&#10;&#13;&#10;&#9;--if l ~= nil then&#13;&#10;&#9;--&#9;l:appendText (&quot;\n\n----- stopTestTimer  -----&quot;)&#13;&#10;&#9;--end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;testTimer = function ()&#13;&#10;&#13;&#10;&#9;if timer:isRegistered(3) == false then&#13;&#10;&#9;&#9;console (&quot;timer not registered, do it now&quot;)&#13;&#10;&#9;&#9;timer:setCallback(3, noteOnTimerCallback)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if timer:isRegistered(4) == false then&#13;&#10;&#9;&#9;console (&quot;timer not registered, do it now&quot;)&#13;&#10;&#9;&#9;timer:setCallback(4, noteOffTimerCallback)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if timer:isTimerRunning(3) then&#13;&#10;&#9;&#9;console (&quot;timer already running, stop it&quot;)&#13;&#10;&#9;&#9;timer:stopTimer(3)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;timer:startTimer (3, 1000) -- timeout of 5 seconds&#13;&#10;&#13;&#10;&#9;sendNote (true, 0, 0x30, 0x68)&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;function noteOnTimerCallback()&#10;&#9;-- Your method code here&#13;&#10;&#9;&#13;&#10;&#9;--l = panel:getLabelComponent(&quot;debug&quot;)&#13;&#10;&#13;&#10;&#9;--if l ~= nil then&#13;&#10;&#9;--&#9;l:appendText (&quot;\n\n----- note On Timer Callback TIMEOUT -----&quot;)&#13;&#10;&#9;--end&#13;&#10;&#13;&#10;&#9;timer:stopTimer (3)&#13;&#10;&#13;&#10;&#9;timer:startTimer (4, 1000)&#13;&#10;&#13;&#10;&#9;sendNote (false, 0, 0x30, 0x68)&#10;end&#13;&#10;&#13;&#10;function noteOffTimerCallback()&#10;&#9;-- Your method code here&#13;&#10;&#9;&#13;&#10;&#9;--l = panel:getLabelComponent(&quot;debug&quot;)&#13;&#10;&#13;&#10;&#9;--if l ~= nil then&#13;&#10;&#9;--&#9;l:appendText (&quot;\n\n----- note Off Timer Callback TIMEOUT -----&quot;)&#13;&#10;&#9;--end&#13;&#10;&#13;&#10;&#9;sendNote (false, 0, 0x30, 0x68)&#13;&#10;&#9;&#13;&#10;&#13;&#10;&#9;timer:stopTimer (4)&#13;&#10;&#9;timer:startTimer (3, 500)&#13;&#10;&#13;&#10;&#9;sendNote (true, 0, 0x30, 0x68)&#10;end&#13;&#10;&#13;&#10;&#13;&#10;sendNote = function (on, channel, key, velocity)&#13;&#10;&#13;&#10;&#9;local channel = panel:getPropertyInt (&quot;panelMidiOutputChannelDevice&quot;)&#13;&#10;&#9;local pre = 0x00&#13;&#10;&#9;if (on == true) then&#13;&#10; &#9;&#9;pre = 0x90 + channel -1&#13;&#10;&#9;else&#13;&#10;&#9;&#9;pre = 0x80 + channel -1&#13;&#10;&#9;end&#13;&#10;&#9;local msgData = { pre, 0x30, 0x68 }&#13;&#10;&#9;panel:sendMidiMessageNow(CtrlrMidiMessage(msgData))&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;testMethod22 = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#13;&#10;&#9;rootModulator = panel:getModulatorByName(&quot;grp_GeneralControls-1&quot;)&#13;&#10;&#13;&#10;&#9;if (rootModulator ~= nil) then&#13;&#10;&#9;&#9;disableAllModulatorsWithProperty2 (rootModulator)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;console (&quot;rootModulator == NIL&quot;)&#13;&#10;&#9;end&#10;end"
                 luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                 uuid="e7b26102502f4799b6126bf0b95618b4" luaMethodValid="1"/>
      <luaMethod luaMethodName="calculateProgramChange" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;calculateProgramChange = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#13;&#10;&#9;console(string.format(&quot;calculateProgramChange (mod = %s, value=%d, source=%s)&quot;,mod:getProperty(&quot;name&quot;), value, tostring(source)))&#13;&#10;&#13;&#10;&#9;if (loadingStage ~= nil) then &#13;&#10;&#9;&#9;if (loadingStage == getStateValueIgnoredAutomatedOnModChangeEvents()) then&#13;&#10;&#9;&#9;&#9;console (string.format(&quot;---------&gt;is in state: ignored automated onModChange Event == %s - stop Method&quot;, tostring(loadingCompleteFlag)))&#13;&#10;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;--&#9;if (source == nil) then&#13;&#10;-- &#9;&#9;console (string.format(&quot;---------&gt;calculateProgramChange %s - stop Method&quot;, tostring(source)))&#13;&#10;--&#9;&#9;return&#13;&#10;--&#9;end&#13;&#10;&#13;&#10;&#9;voiceBank = calculateVoiceBank(value)&#13;&#10;&#9;programNumber = calculateProgramNumber(value)&#13;&#10;&#9;sendBankSelect(voiceBank)&#13;&#10;&#9;sendProgramChange(programNumber)&#13;&#10;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;calculateVoiceBank = function (value)&#13;&#10;&#9;&#9;&#13;&#10;--&#9;console (string.format(&quot;calculateVocieBank (value = %d)&quot;, value))&#13;&#10;&#13;&#10;&#9;n=3&#13;&#10;&#9;voiceBankSize = 128&#13;&#10;&#9;for i=0,n,1 do&#13;&#10;&#9;&#9;if ((value+1) &gt; i*voiceBankSize) and ((value+1) &lt;= (i+1)*voiceBankSize) then&#13;&#10;--&#9;&#9;&#9;console (string.format(&quot;Voice Bank found: %d&quot;, i))&#13;&#10;&#9;&#9;&#9;return i&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#9;console (string.format(&quot;Voice Bank NOT found %d&quot;, n))&#13;&#10;&#9;return 0&#13;&#10;end&#13;&#10;&#13;&#10;calculateProgramNumber = function (value)&#13;&#10;&#9;&#13;&#10;--&#9;console (string.format(&quot;calculateProgramNumber (value = %d)&quot;, value))&#13;&#10;&#9;numOfBanks = 4&#13;&#10;&#9;voiceBankSize = 128&#13;&#10;&#9;local programNumber = value % voiceBankSize&#13;&#10;--&#9;console (string.format(&quot;selected value = %d -&gt; ProgramNumber %d&quot;, value, programNumber))&#13;&#10;&#9;return programNumber &#13;&#10;end&#13;&#10;&#13;&#10;sendBankSelect = function (value)&#13;&#10;&#13;&#10;&#9;console (string.format (&quot;sendBankSelect (%d)&quot;, value))&#13;&#10;&#13;&#10;&#9;channel = panel:getPropertyInt (&quot;panelMidiOutputChannelDevice&quot;)&#13;&#10;&#9;--chhannel = panel:getPropertyInt (&quot;panelMidiOutputChannelHost&quot;)&#13;&#10;&#9;&#9;&#13;&#10;&#9;local pre = 0x00&#13;&#10; &#9;pre = 0xb0 + channel -1&#13;&#10;&#9;&#13;&#10;&#9;-- &#13;&#10;&#9;-- http://ctrlr.org/forums/topic/midi-channel-0y-or-yy-in-lua/&#13;&#10;&#13;&#10;&#9;-- Tables (msgData)&#13;&#10;&#9;-- http://lua-users.org/wiki/TablesTutorial&#13;&#10;&#13;&#10;&#9;if (value == 0) then&#13;&#10;&#9;&#9;msgData = {pre, 0x00, 0x00}&#13;&#10;&#9;elseif (value == 1) then&#13;&#10;&#9;&#9;msgData = {pre, 0x00, 0x01}&#13;&#10;&#9;elseif (value == 2) then&#13;&#10;&#9;&#9;msgData = {pre, 0x00, 0x0a}&#13;&#10;&#9;elseif (value == 3) then&#13;&#10;&#9;&#9;msgData = {pre, 0x00, 0x0b}&#13;&#10;&#9;else&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;console (string.format(&quot;sendBankSelect (value = %d) not valid!!!!&quot;, value))&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;--&#9;for k,v in pairs(msgData) do console(string.format(&quot;%d,%02x&quot;, k,v)) end&#13;&#10;&#9;--console (string.format (&quot;msgData = %s&quot;, msgData:toHexString(1)))&#13;&#10;&#13;&#10;&#9;newMidiMessage = CtrlrMidiMessage( msgData )&#13;&#10; &#9;ttype = newMidiMessage:getMidiMessageType()&#13;&#10;&#9;--ttype:&#13;&#10;--&#9;console (string.format (&quot;ttype %d&quot;, ttype))&#13;&#10;&#9;panel:sendMidiMessageNow(newMidiMessage)&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;sendProgramChange = function (value)&#13;&#10;&#13;&#10;&#9;console (string.format (&quot;sendProgramChange (%d)&quot;, value))&#13;&#10;&#9;channel = panel:getPropertyInt (&quot;panelMidiOutputChannelDevice&quot;)&#13;&#10;&#13;&#10;&#9;local pre = 0x00&#13;&#10; &#9;pre = 0xc0 + channel -1&#13;&#10;&#13;&#10;&#9;programNumInHex = 0x00&#13;&#10;&#9;programNumInHex = programNumInHex + value&#13;&#10;&#13;&#10;&#9;msgData = {pre, programNumInHex}&#13;&#10;--&#9;for k,v in pairs(msgData) do console(string.format(&quot;%d,%02x&quot;, k,v)) end&#13;&#10;&#13;&#10;&#9;newMidiMessage = CtrlrMidiMessage( msgData )&#13;&#10;&#9;ttype = newMidiMessage:getMidiMessageType()&#13;&#10;&#9;--ttype:&#13;&#10;--&#9;console (string.format (&quot;ttype %d&quot;, ttype))&#13;&#10;&#13;&#10;&#9;panel:sendMidiMessageNow(newMidiMessage)&#13;&#10;&#13;&#10;end"
                 luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                 uuid="bb0fded013d8445cbcc0569a68e054ce" luaMethodValid="1"/>
      <luaMethod luaMethodName="testMethod2" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;testMethod2 = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;testMethod2 (value=%d)&quot;, value))&#13;&#10;&#9;--panel:getModulatorByName(&quot;loadingCompleteMod&quot;):setModulatorValue(0,false,false,false)&#13;&#10;&#9;--panel:getModulatorByName(&quot;modulator-6&quot;):setModulatorValue(0,false,false,false)&#13;&#10;&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;testMethod5 = function ()&#13;&#10;&#13;&#10;&#9;--mo = panel:getModulatorByName(&quot;groupMaster&quot;)&#13;&#10;&#9;--console (&quot;&quot; .. mo:getProperty(&quot;name&quot;))&#13;&#10;&#9;--mo : setPropertyInt(&quot;serializeIndex&quot;, 416)&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;testMethod4 = function ()&#13;&#10;&#13;&#10;&#9;n = panel:getNumModulators()&#13;&#10;&#9;mo = panel:getModulatorByIndex(n)&#13;&#10;&#9;if (mo ~= nil) then&#13;&#10;&#9;&#9;--console (&quot;&quot; .. mo:getProperty(&quot;name&quot;))&#13;&#10;&#9;&#9;co = mo:getComponent()&#13;&#10;&#9;&#9;--console (mo)&#13;&#10;&#9;&#9;console (string.format(&quot;mo = %d&quot;, mo:getModulatorValue() ))&#13;&#10;&#9;&#9;if(co ~= nil) then&#13;&#10;&#9;&#9;&#9;console (&quot;&quot; .. tostring( co:getProperty(&quot;uiType&quot;) ) )&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;console (&quot;no component!&quot;)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;else&#13;&#10;&#9;&#9;console (&quot;only &quot; ..(n-1) .. &quot; mods available&quot; )&#13;&#10;&#9;end&#13;&#10;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;fxTabBug = function (value)&#13;&#10;&#13;&#10;&#13;&#10;&#9;--panel:getComponent(&quot;fxTabs&quot;):setProperty (&quot;uiTabsCurrentTab&quot;, 0, false)&#13;&#10;&#9;mod = panel:getModulatorByName(&quot;fxTabs&quot;)&#13;&#10;&#9;mod:setModulatorValue(value,false,true,false)&#13;&#10;&#13;&#10;end"
                 luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                 uuid="d0e20aae130845369513edc9967f6fa1" luaMethodValid="1"/>
      <luaMethod luaMethodName="NewModulatorAddedToPanel" luaMethodCode="--&#10;-- Called when a double-click event occurs on this component&#10;--&#10;&#13;&#10;NewModulatorAddedToPanel = function(--[[ CtrlrComponent --]] comp, --[[ MouseEvent --]] event)&#13;&#10;&#13;&#10;&#9;console(string.format(&quot;-x-x-x-x-x-x-x-x-x-x-x-x NewModulatorAddedToPanel ()&quot;,0))&#13;&#10;&#13;&#10;&#9;mod = panel:getModulatorByName(&quot;btnInitSerializationIndex&quot;)&#13;&#10;&#9;--mod:setProperty (&quot;componentDisabled&quot;, 1, false)&#13;&#10;&#9;--mod:removeProperty(&quot;componentDisabled&quot;)&#13;&#10;&#9;mod:getComponent():setProperty (&quot;componentDisabled&quot;, 0, false)&#13;&#10;&#10;end"
                 luaMethodLinkedProperty="componentLuaMouseDoubleClick" luaMethodSource="0"
                 uuid="36ab705448fb4b0bbe56e8bde0466210" luaMethodValid="1"/>
      <luaMethod luaMethodName="setEfxModus" luaMethodCode="--&#13;&#10;-- Called when a modulator value changes&#13;&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;&#10;-- @value    new numeric value of the modulator&#13;&#10;--&#13;&#10;setEfxModus = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;setEfxModus (mod = %s, value=%d, source=%s)&quot;,mod:getProperty(&quot;name&quot;), value, tostring(source)))&#13;&#10;&#13;&#10;&#9;if (loadingStage ~= nil) then &#13;&#10;&#9;&#9;if (loadingStage == getStateValueIgnoredAutomatedOnModChangeEvents()) then&#13;&#10;&#9;&#9;&#9;console (string.format(&quot;---------&gt;is in state: ignored automated onModChange Event == %s - stop Method&quot;, tostring(loadingCompleteFlag)))&#13;&#10;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;--&#9;if (source == nil) then&#13;&#10;-- &#9;&#9;console (string.format(&quot;---------&gt;setEfxModus %s - stop Method&quot;, tostring(source)))&#13;&#10;--&#9;&#9;return&#13;&#10;--&#9;end&#13;&#10;&#13;&#10;&#9;--console (string.format(&quot;---------&gt;loadingCompleteFlag == %s&quot;, tostring(loadingCompleteFlag)))&#13;&#10;&#9;--if (loadingCompleteFlag ~= nil) then &#13;&#10;&#9;--&#9;if (loadingCompleteFlag == false) then&#13;&#10;&#9;--&#9;&#9;console (string.format(&quot;---------&gt;loadingCompleteFlag == %s - stop Method&quot;, tostring(loadingCompleteFlag)))&#13;&#10;&#9;--&#9;&#9;return&#13;&#10;&#9;--&#9;end&#13;&#10;&#9;--end&#13;&#10;&#9;&#9;&#13;&#10;&#13;&#10;&#9;EnableSingleEfxMidiMessageForLoading(value)&#13;&#10;&#13;&#10;&#9;setHqModus (value)&#13;&#10;&#13;&#10;    -- enable the correspondending efx tab&#13;&#10;&#9;--fxTabsMod = panel:getModulatorByName(&quot;fxTabs&quot;)&#13;&#10;&#9;--fxTabsMod:setModulatorValue(value,false,true,false)&#13;&#10;    --panel:getComponent(&quot;fxTabs&quot;):setProperty (&quot;uiTabsCurrentTab&quot;, value, false)&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;setHqModus = function (efxIndex)&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;setHqModus (efxIndex=%d)&quot;, efxIndex))&#13;&#10;&#13;&#10;    if (efxIndex == 0) then&#13;&#10;&#9;&#9;HqDistortionAvailable = false&#13;&#10;&#13;&#10;    elseif (efxIndex == 1) then&#13;&#10;        HqDistortionAvailable = true&#13;&#10;&#9;&#13;&#10;    elseif (efxIndex == 2) then&#13;&#10;        HqDistortionAvailable = false&#13;&#10;&#13;&#10;    elseif (efxIndex == 3) then&#13;&#10;        HqDistortionAvailable = true&#13;&#10;    end&#13;&#10;&#13;&#10;&#9;if (HqDistortionAvailable == true) then&#13;&#10;&#9;&#9;panel:getComponent(&quot;grp_HQ_DistortionTopLevelControls&quot;):setProperty (&quot;componentDisabled&quot;, 0, false)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;panel:getComponent(&quot;grp_HQ_DistortionTopLevelControls&quot;):setProperty (&quot;componentDisabled&quot;, 1, false)&#13;&#10;&#9;end&#13;&#10;&#13;&#10;end"
                 luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                 uuid="9f0f0f9bd3594cb99aa6178f03e762f9" luaMethodValid="1"/>
      <luaMethod luaMethodName="MapHQDistortionToAllChannel" luaMethodCode="--&#10;-- Called when a double-click event occurs on this component&#10;--&#10;&#10;MapHQDistortionToAllChannel = function(--[[ CtrlrComponent --]] comp, --[[ MouseEvent --]] event)&#13;&#10;&#13;&#10;&#9;console(string.format(&quot;-x-x-x-x-x-x-x-x-x-x-x-x MapHQDistortionToAllChannel ()&quot;,0))&#13;&#10;&#13;&#10;&#9;numOfChannels = 15&#13;&#10;&#9;for currentChannel=0,numOfChannels do&#13;&#10;&#9;&#9;-- Built Message CC/SysEx&#13;&#10;&#9;&#9;nrpnHigh = 0x3d&#9;&#9;&#9;&#9;--&#9;EFX Modul 0x3a, 0x3b, 0x3c | HQ-Distortion Modul 0x3d&#13;&#10;&#9;&#9;nrpnLow = 0x00&#9;&#9;&#9;&#9;--&#9;Distortion ON/OFF &#13;&#10;&#9;&#9;data = 0x01&#9;&#9;&#9;&#9;&#9;-- &#9;ON&#13;&#10;&#13;&#10;&#9;&#9;-- Send Message&#13;&#10;&#9;&#9;sendNRPNMessageWithChannel (currentChannel, nrpnHigh,nrpnLow,data)&#13;&#10;&#9;end&#13;&#10;&#10;end"
                 luaMethodLinkedProperty="componentLuaMouseDoubleClick" luaMethodSource="0"
                 uuid="296591b684954767bc669eb077085f56" luaMethodValid="1"/>
      <luaMethod luaMethodName="sendEfxModeBySysEx" luaMethodCode="--&#10;-- Called when a double-click event occurs on this component&#10;--&#10;&#10;sendEfxModeBySysEx = function(--[[ CtrlrComponent --]] comp, --[[ MouseEvent --]] event)&#13;&#10;&#13;&#10;&#9;channel = panel:getPropertyInt (&quot;panelMidiOutputChannelDevice&quot;)&#13;&#10;&#9;midiTrack = channel&#13;&#10;&#9;combinedByte = 0x40 + channel -1&#13;&#10;&#13;&#10;&#9;fxMode = panel : getModulatorByName(&quot;efxModus&quot;)&#13;&#10;&#9;fxModeValue = fxMode : getModulatorValue()&#13;&#10;&#9;xx = tonumber(fxModeValue,16)&#13;&#10;&#13;&#10;&#9;XX = 0x00 -- don't care&#13;&#10;&#13;&#10;-- send no FX reset&#13;&#10;&#13;&#10;&#9;msgData = { 0xF0, 0x41, 0x00, 0x42, 0x12, 0x40, combinedByte, 0x22, 0x00, XX, 0xF7 }&#9;&#9;--&lt;-- Reset: track in normal mode&#13;&#10;&#13;&#10;&#9;for k,v in pairs(msgData) do console(string.format(&quot;%d,%02x&quot;, k,v)) end&#13;&#10;&#9;--console ( tostring(msgData) )&#13;&#10;&#13;&#10;&#9;newMidiMessage = CtrlrMidiMessage( msgData )&#13;&#10;&#9;panel:sendMidiMessageNow(newMidiMessage)&#13;&#10;&#13;&#10;-- send current FX Mode selection&#13;&#10;&#13;&#10;&#9;msgData = { 0xF0, 0x41, 0x00, 0x42, 0x12, 0x40, combinedByte, 0x22, xx, XX, 0xF7 }&#9;&#9;&#9;--&lt;-- Reset: track in selected mode&#13;&#10;&#13;&#10;&#9;for k,v in pairs(msgData) do console(string.format(&quot;%d,%02x&quot;, k,v)) end&#13;&#10;&#9;--console ( tostring(msgData) )&#13;&#10;&#13;&#10;&#9;newMidiMessage = CtrlrMidiMessage( msgData )&#13;&#10;&#9;panel:sendMidiMessageNow(newMidiMessage)&#13;&#10;&#10;end"
                 luaMethodLinkedProperty="componentLuaMouseDoubleClick" luaMethodSource="0"
                 uuid="9d30ae36ffeb493c87e4c420d0a7a87c" luaMethodValid="1"/>
      <luaMethod luaMethodName="getCurrentMidiChannel" luaMethodCode="function getCurrentMidiChannel(sendableFormat)&#10;&#13;&#10;&#9;--local channel = panel:getPropertyInt (&quot;panelMidiOutputChannelHost&quot;)&#13;&#10;&#9;local channel = panel:getPropertyInt (&quot;panelMidiOutputChannelDevice&quot;)&#13;&#10;&#13;&#10;&#9;if (sendableFormat == true) then&#13;&#10;&#9;&#9;channel = channel -1&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;getCurrentMidiChannel (sendableFormat=%s) : %d&quot;, tostring(sendableFormat), channel))&#13;&#10;&#13;&#10;&#9;return channel&#13;&#10;&#10;end"
                 luaMethodLinkedProperty="" luaMethodSource="0" uuid="c960a09fa8124cb38fd1d27bd4fc4ee8"
                 luaMethodValid="1"/>
      <luaMethod luaMethodName="EnableSingleEfxMidiMessageForLoading" luaMethodCode="function EnableSingleEfxMidiMessageForLoading(enabledEfxId)&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;EnableSingleEfxMidiMessageForLoading (enabledEfxId=%d)&quot;,enabledEfxId))&#13;&#10;&#9;setModulatorMidiMessageTypeFromAllEfx(enabledEfxId)&#9;-- faster&#13;&#10;end&#13;&#10;&#13;&#10;setModulatorMidiMessageTypeFromAllEfx = function (enabledEfxId)&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;setModulatorMidiMessageTypeFromAllEfx (enabledEfxId=%d)&quot;,enabledEfxId))&#13;&#10;&#13;&#10;--&#9;            value(&quot;CC&quot;,&#9;&#9;&#9;&#9;0),&#13;&#10;--&#9;&#9;&#9;&#9;value(&quot;Aftertouch&quot;,&#9;&#9;1),&#13;&#10;--&#9;&#9;&#9;&#9;value(&quot;ChannelPressure&quot;,2),&#13;&#10;--&#9;&#9;&#9;&#9;value(&quot;NoteOn&quot;,&#9;&#9;&#9;3),&#13;&#10;--&#9;&#9;&#9;&#9;value(&quot;NoteOff&quot;,&#9;&#9;4),&#13;&#10;--&#9;&#9;&#9;&#9;value(&quot;SysEx&quot;,&#9;&#9;&#9;5),&#13;&#10;--&#9;&#9;&#9;&#9;value(&quot;Multi&quot;,&#9;&#9;&#9;6),&#13;&#10;--&#9;&#9;&#9;&#9;value(&quot;ProgramChange&quot;,&#9;7),&#13;&#10;--&#9;&#9;&#9;&#9;value(&quot;PitchWheel&quot;,&#9;&#9;8),&#13;&#10;--&#9;&#9;&#9;&#9;value(&quot;None&quot;,&#9;&#9;&#9;9),&#13;&#10;--&#9;&#9;&#9;&#9;value(&quot;MidiClock&quot;,&#9;&#9;10),&#13;&#10;--&#9;&#9;&#9;&#9;value(&quot;MidiClockContinue&quot;, 11),&#13;&#10;--&#9;&#9;&#9;&#9;value(&quot;MidiClockStop&quot;, 12),&#13;&#10;--&#9;&#9;&#9;&#9;value(&quot;MidiClockStart&quot;, 13)&#13;&#10;&#13;&#10;&#9;filterString1 = &quot;Efx1&quot;&#13;&#10;&#9;filterString2 = &quot;Efx2&quot;&#13;&#10;&#9;filterString3 = &quot;Efx3&quot;&#13;&#10;&#13;&#10;&#9;efxModusValue = panel:getModulatorByName(&quot;efxModus&quot;):getModulatorValue()&#13;&#10;&#9;--console( string.format(&quot;efxModusValue = %d&quot;,efxModusValue) )&#13;&#10;&#13;&#10;&#9;if (enabledEfxId == 0) then&#13;&#10;&#13;&#10;&#9;&#9;--if (efxModus == 0) then &#13;&#10;&#9;&#9;&#9;midiMessageType1 = &quot;9&quot;&#13;&#10;&#9;&#9;&#9;midiMessageType2 = &quot;9&quot;&#13;&#10;&#9;&#9;&#9;midiMessageType3 = &quot;9&quot;&#13;&#10;&#9;&#9;--else&#13;&#10;&#9;&#9;&#9;console (string.format(&quot;setModulatorMidiMessageTypeFromAllEfx: enabledEfxId=%d; efxModusValue=%d, dont change/should not happen!!!!&quot;,enabledEfxId,efxModusValue))&#13;&#10;&#9;&#9;--&#9;return&#13;&#10;&#9;&#9;--end&#13;&#10;&#13;&#10;&#9;elseif (enabledEfxId == 1) then&#13;&#10;&#9;&#9;midiMessageType1 = &quot;6&quot;&#13;&#10;&#9;&#9;midiMessageType2 = &quot;9&quot;&#13;&#10;&#9;&#9;midiMessageType3 = &quot;9&quot;&#13;&#10;&#13;&#10;&#9;elseif (enabledEfxId == 2) then&#13;&#10;&#9;&#9;midiMessageType1 = &quot;9&quot;&#13;&#10;&#9;&#9;midiMessageType2 = &quot;6&quot;&#13;&#10;&#9;&#9;midiMessageType3 = &quot;9&quot;&#13;&#10;&#13;&#10;&#9;elseif (enabledEfxId == 3) then&#13;&#10;&#9;&#9;midiMessageType1 = &quot;9&quot;&#13;&#10;&#9;&#9;midiMessageType2 = &quot;9&quot;&#13;&#10;&#9;&#9;midiMessageType3 = &quot;6&quot;&#13;&#10;&#13;&#10;&#9;else&#13;&#10;&#9;&#9;console (string.format(&quot;setModulatorMidiMessageTypeFromAllEfx: Wrong enabledEfxId (%d)&quot;,enabledEfxId))&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;filterStringPresets = &quot;Preset&quot;&#13;&#10;&#9;midiMessageTypeForPresetsModulators = &quot;9&quot;&#13;&#10;&#13;&#10;&#9;count = 0&#13;&#10;&#9;secPropertyCount = 0&#13;&#10;&#9;n = panel:getNumModulators()&#13;&#10;&#13;&#10;&#9;enableCounter = 0&#13;&#10;&#9;disableCounter = 0&#13;&#10;&#13;&#10;&#9;for i=0,n-1 do&#13;&#10;&#9;&#9;mod = panel:getModulatorByIndex(i)&#13;&#10;&#9;&#9;if(mod ~= nil) then&#13;&#10;&#9;&#9;&#9;currentModName = mod:getPropertyString(&quot;name&quot;)&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- type= userdata!!! &#13;&#10;&#9;&#9;&#9;--currentModName = mod:getProperty(&quot;name&quot;)&#13;&#10;&#9;&#9;&#9;isEfxModulator = false&#13;&#10;&#9;&#9;&#9;if (currentModName:startsWith (filterString1) == true) then&#13;&#10;&#9;&#9;&#9;&#9;isEfxModulator = true&#13;&#10;&#9;&#9;&#9;&#9;midiMessageType = midiMessageType1&#13;&#10;&#9;&#9;&#9;elseif (currentModName:startsWith (filterString2) == true) then&#13;&#10;&#9;&#9;&#9;&#9;isEfxModulator = true&#13;&#10;&#9;&#9;&#9;&#9;midiMessageType = midiMessageType2&#13;&#10;&#9;&#9;&#9;elseif (currentModName:startsWith (filterString3) == true) then&#13;&#10;&#9;&#9;&#9;&#9;isEfxModulator = true&#13;&#10;&#9;&#9;&#9;&#9;midiMessageType = midiMessageType3&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;if (isEfxModulator == true) then&#13;&#10;&#9;&#9;&#9;&#9;if (currentModName:endsWith (filterStringPresets) == false) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;setModulatorMidiMessageType (mod, midiMessageType)&#13;&#10;&#9;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;&#9;currentModName = mod:getProperty(&quot;name&quot;)&#13;&#10;--&#9;&#9;&#9;&#9;&#9;console (string.format(&quot;%s has midiMessageInLua&quot;,currentModName))&#13;&#10;&#9;&#9;&#9;&#9;&#9;setModulatorMidiMessageType (mod, midiMessageTypeForPresetsModulators)&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;setModulatorMidiMessageTypeFromAllEfx: enableCounter=%d, disableCounter=%d&quot;,enableCounter,disableCounter))&#13;&#10;&#9;disableUndocumentedControls()&#13;&#10;end&#13;&#10;&#13;&#10;disableUndocumentedControls = function ()&#13;&#10;&#13;&#10;&#9;disableUndocumentedCounter = 0&#13;&#10;&#13;&#10;&#9;-- efx Controls&#13;&#10;&#13;&#10;&#9;for efxId=1, 3 do&#13;&#10;&#13;&#10;&#9;&#9;-- Insert Multi Control: &quot;Modulation Shape&quot;&#13;&#10;&#9;&#9;modName = string.format(&quot;Efx%d_Mod_Shape&quot;,efxId)&#13;&#10;&#9;&#9;disableModulatorAndSetMidiMessageTypePropertyToNone (modName)&#13;&#10;&#13;&#10;&#9;&#9;-- Insert Multi Control: Efx1_Mod_Rotary_Fast_Mod_Rate&#13;&#10;&#9;&#9;modName = string.format(&quot;Efx%d_Mod_Rotary_Fast_Mod_Rate&quot;,efxId)&#13;&#10;&#9;&#9;disableModulatorAndSetMidiMessageTypePropertyToNone (modName)&#13;&#10;&#13;&#10;&#9;&#9;-- Insert Multi Control: Efx1_Mod_Rotary_Acc_Time&#13;&#10;&#9;&#9;modName = string.format(&quot;Efx%d_Mod_Rotary_Acc_Time&quot;,efxId)&#13;&#10;&#9;&#9;disableModulatorAndSetMidiMessageTypePropertyToNone (modName)&#13;&#10;&#13;&#10;&#9;&#9;-- Insert Multi Control: Efx1_Mod_Rotary_Dec_Time&#13;&#10;&#9;&#9;modName = string.format(&quot;Efx%d_Mod_Rotary_Dec_Time&quot;,efxId)&#13;&#10;&#9;&#9;disableModulatorAndSetMidiMessageTypePropertyToNone (modName)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;-- unsicher wegen preset value siehe SD1000_web &#13;&#10;&#9;&#9;--Efx3_Dist_FilterReso&#13;&#10;&#9;&#9;modName = string.format(&quot;Efx%d_Dist_FilterReso&quot;,efxId)&#13;&#10;&#9;&#9;disableModulatorAndSetMidiMessageTypePropertyToNone (modName)&#13;&#10;&#13;&#10;&#9;&#9;--Efx1_Comp_Boost_Slider&#13;&#10;&#9;&#9;modName = string.format(&quot;Efx%d_Comp_Boost_Slider&quot;,efxId)&#13;&#10;&#9;&#9;disableModulatorAndSetMidiMessageTypePropertyToNone (modName)&#13;&#10;&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;-- HQ Distortion&#13;&#10;&#9;modName = string.format(&quot;HQ_Top_Level&quot;, 0)&#13;&#10;&#9;disableModulatorAndSetMidiMessageTypePropertyToNone (modName)&#13;&#10;&#9;modName = string.format(&quot;HQ_Top_Tone&quot;,0)&#13;&#10;&#9;disableModulatorAndSetMidiMessageTypePropertyToNone (modName)&#13;&#10;&#9;modName = string.format(&quot;HQ_Top_Drive&quot;,0)&#13;&#10;&#9;disableModulatorAndSetMidiMessageTypePropertyToNone (modName)&#13;&#10;&#9;modName = string.format(&quot;HQ_Top_Booster&quot;,0)&#13;&#10;&#9;disableModulatorAndSetMidiMessageTypePropertyToNone (modName)&#13;&#10;&#9;modName = string.format(&quot;HQ_Top_NoiseReduction&quot;,0)&#13;&#10;&#9;disableModulatorAndSetMidiMessageTypePropertyToNone (modName)&#13;&#10;&#9;&#13;&#10;&#9;modName = string.format(&quot;HQ_Parameter_PreGain&quot;,0)&#13;&#10;&#9;disableModulatorAndSetMidiMessageTypePropertyToNone (modName)&#13;&#10;&#9;&#13;&#10;&#9;modName = string.format(&quot;HQ_Parameter_InputHighPassCutOff&quot;,0)&#13;&#10;&#9;disableModulatorAndSetMidiMessageTypePropertyToNone (modName)&#13;&#10;&#9;modName = string.format(&quot;HQ_Parameter_InputHighPassMode&quot;,0)&#13;&#10;&#9;disableModulatorAndSetMidiMessageTypePropertyToNone (modName)&#13;&#10;&#9;modName = string.format(&quot;HQ_Parameter_GainHigh_max&quot;,0)&#13;&#10;&#9;disableModulatorAndSetMidiMessageTypePropertyToNone (modName)&#13;&#10;&#9;&#13;&#10;&#9;modName = string.format(&quot;HQ_Parameter_InputLowPassCutOff&quot;,0)&#13;&#10;&#9;disableModulatorAndSetMidiMessageTypePropertyToNone (modName)&#13;&#10;&#9;modName = string.format(&quot;HQ_Parameter_InputLowPassMode&quot;,0)&#13;&#10;&#9;disableModulatorAndSetMidiMessageTypePropertyToNone (modName)&#13;&#10;&#9;modName = string.format(&quot;HQ_Parameter_GainLow_max&quot;,0)&#13;&#10;&#9;disableModulatorAndSetMidiMessageTypePropertyToNone (modName)&#13;&#10;&#13;&#10;&#9;console (string.format(&quot;disableUndocumentedControls: disableCounter=%d&quot;, disableUndocumentedCounter))&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;disableModulatorAndSetMidiMessageTypePropertyToNone = function (modName)&#13;&#10;&#13;&#10;&#9;&#9;mod = panel : getModulatorByName(modName)&#13;&#10;&#9;&#9;mod : getComponent() : setProperty (&quot;componentDisabled&quot;, 1, false)&#13;&#10;&#9;&#9;setModulatorMidiMessageType (mod, &quot;9&quot;)&#13;&#10;&#9;&#9;disableUndocumentedCounter = disableUndocumentedCounter +1&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;setModulatorMidiMessageType = function(mod, midiMessageType) &#13;&#10;&#13;&#10;&#9;if (midiMessageType == &quot;6&quot;) then&#13;&#10;&#9;&#9;enableCounter = enableCounter +1&#13;&#10;&#9;elseif (midiMessageType == &quot;9&quot;) then&#13;&#10;&#9;&#9;disableCounter = disableCounter +1&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;currentModName = mod:getPropertyString(&quot;name&quot;)&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- type= userdata!!! &#13;&#10;&#9;&#13;&#10;&#9;--console (currentModName)&#13;&#10;&#9;count = count +1&#13;&#10;&#9;--currentModUiType = mod:getComponent():getPropertyString(&quot;uiType&quot;)&#9;&#9;&#9;-- type= userdata!!! &#13;&#10;&#9;currentModUiType = mod:getComponent():getProperty(&quot;uiType&quot;)&#13;&#10;&#9;--console (currentModUiType)&#13;&#10;&#9;--console (string.format(&quot;currentModUiType = %s&quot;,currentModUiType))&#13;&#10;&#9;if (currentModUiType ~= &quot;uiLabel&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;currentMidiMessage = mod:getMidiMessage(0)&#9;&#9;&#9;--- PROBLEM&#13;&#10;&#13;&#10;&#9;&#9;if(currentMidiMessage ~= nil) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;currentMidiMessageType = currentMidiMessage:getMidiMessageType()&#13;&#10;&#9;&#9;&#9;--console (string.format (&quot;midi type=(%d)&quot;, currentMidiMessageType))&#13;&#10;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;if (currentMidiMessageType == tonumber(midiMessageType,10)) then&#13;&#10;&#9;&#9;&#9;&#9;secPropertyCount = secPropertyCount +1&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;currentMidiMessage:setPropertyString(&quot;midiMessageType&quot;, midiMessageType)&#13;&#10;&#9;&#9;else&#13;&#10;--&#9;&#9;&#9;console (string.format(&quot;%s has no MidiMessage&quot;,currentModName))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;else&#13;&#10;&#9;&#9;currentModName = mod:getProperty(&quot;name&quot;)&#13;&#10;--&#9;&#9;console (string.format(&quot;%s has no MidiMessage&quot;,currentModName))&#13;&#10;&#9;end&#13;&#10;end"
                 luaMethodLinkedProperty="" luaMethodSource="0" uuid="22e958cdd3384a07a49531b40ae2d3a0"
                 luaMethodValid="1"/>
      <luaMethod luaMethodName="setLoadingCompleteFlag" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;setLoadingCompleteFlag = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#13;&#10;&#9;-- 24.08.2016 ... &lt; 20 Uhr loadingCompleteFlag concept&#13;&#10;&#13;&#10;&#9;if (source == nil) then&#13;&#10;&#9;&#9;console(string.format(&quot;---------&gt; loading Complete, now onModChangeEvents handled/processed/executed&quot;,value))&#13;&#10;&#9;else&#13;&#10;&#9;&#9;console(string.format(&quot;---------&gt; loading FULLY Complete, onModChangeEvents handled/processed/executed&quot;,value))&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;nextLoadingStage ()&#13;&#10;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;initLoadingStage = function (stage)&#13;&#10;&#9;console(string.format(&quot;---------&gt; initLoadingStage = %s&quot;,tostring(stage)))&#13;&#10;&#9;if (stage ~= nil) then&#13;&#10;&#9;&#9;loadingStage = stage&#13;&#10;&#9;else&#13;&#10;&#9;&#9;loadingStage = 0&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;nextLoadingStage = function ()&#13;&#10;&#13;&#10;&#9;if (loadingStage == nil) then&#13;&#10;&#9;&#9;loadingStage = 0&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;lastLoadingState = loadingStage&#13;&#10;&#9;loadingStage = loadingStage + 1&#13;&#10;&#9;loadingStage = loadingStage % 2&#13;&#10;&#9;console(string.format(&quot;---------&gt; nextLoadingStage(): last=%d -&gt; current=%d&quot;,lastLoadingState,loadingStage))&#13;&#10;end&#13;&#10;&#13;&#10;getStateValueIgnoredAutomatedOnModChangeEvents = function ()&#13;&#10;&#9;return 1&#13;&#10;end&#13;&#10;&#13;&#10;initLoadingCompleteFlag = function (status)&#13;&#10;&#13;&#10;&#9;console(string.format(&quot;---------&gt; initLoadingCompleteFlag = %s&quot;,tostring(status)))&#13;&#10;&#13;&#10;&#9;--if (status == true) then&#13;&#10;&#9;--&#9;panel:getModulatorByName(&quot;loadingCompleteMod&quot;):setModulatorValue(1,false,false,false)&#13;&#10;&#9;--else&#13;&#10;&#9;--&#9;panel:getModulatorByName(&quot;loadingCompleteMod&quot;):setModulatorValue(0,false,false,false)&#13;&#10;&#9;--end&#13;&#10;&#13;&#10;&#9;loadingCompleteFlag = status&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;clearLoadingCompleteFlag = function ()&#13;&#10;&#13;&#10;&#9;console(string.format(&quot;---------&gt; clearLoadingCompleteFlag = %s&quot;,tostring(false)))&#13;&#10;&#13;&#10;&#9;--panel:getModulatorByName(&quot;loadingCompleteMod&quot;):setModulatorValue(0,false,false,false)&#13;&#10;&#13;&#10;&#9;loadingCompleteFlag = false&#13;&#10;&#13;&#10;end"
                 luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                 uuid="3cb2b5e9e5d54cdbb81d820d04b423b3" luaMethodValid="1"/>
      <luaMethod luaMethodName="testMethod3" luaMethodCode="--&#13;&#10;-- Called when a modulator value changes&#13;&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;&#10;-- @value    new numeric value of the modulator&#13;&#10;--&#13;&#10;testMethod3 = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#13;&#10;&#9;if (source == nil) then&#13;&#10; &#9;&#9;console (string.format(&quot;---------&gt;testMethod3 %s - stop Method&quot;, tostring(source)))&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;if (loadingStage ~= nil) then &#13;&#10;&#9;&#9;if (loadingStage == getStateValueIgnoredAutomatedOnModChangeEvents()) then&#13;&#10;&#9;&#9;&#9;console (string.format(&quot;---------&gt;testMethod3: is in state: ignored automated onModChange Event == %s - stop Method&quot;, tostring(loadingCompleteFlag)))&#13;&#10;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;listAllModulatorsSorted (true)&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;testttttt = function ()&#13;&#10;&#13;&#10;&#9;-- Array Tutorial: http://www.tutorialspoint.com/lua/lua_arrays.htm&#13;&#10;&#9;-- In Lua, indexing generally starts at index 1. But it is possible to create objects at index 0 and below 0 as well.&#13;&#10;&#9;array = {&quot;Lua&quot;, &quot;Tutorial&quot;}&#13;&#10;&#9;--console(string.format(&quot;array length = %d&quot;, array:length(), array:getSize() ) )&#13;&#10;&#9;console(string.format(&quot;array length = %d&quot;, #array ) )&#13;&#10;&#9;&#13;&#10;&#9;-- Iterator Tutorial: http://www.tutorialspoint.com/lua/lua_iterators.htm&#13;&#10;&#9;array = {&quot;Lua&quot;, &quot;Tutorial&quot;}&#13;&#10;&#9;for key,value in ipairs(array) do&#13;&#10;&#9;&#9;console (string.format(&quot;key=%d, value=%s&quot;,key, value))&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;-- Table Tutorial: http://www.tutorialspoint.com/lua/lua_tables.htm&#13;&#10;&#9;-- &#13;&#10;&#9;IamATable = {}&#13;&#10;&#9;--what(IamATable)&#13;&#10;&#9;for k=1, 10, 1&#13;&#10;&#9;do&#13;&#10;&#9;&#9;IamATable[k] = k&#13;&#10;&#9;end&#13;&#10;&#9;console(string.format(&quot;table maxn = %d, #IamATable= %d &quot;, table.maxn (IamATable), #IamATable ) )&#13;&#10;&#9;for key,value in ipairs(IamATable) do&#13;&#10;&#9;&#9;console (string.format(&quot;key=%d, value=%s&quot;,key, value))&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;-- pairs&#13;&#10;&#9;IamATable = {}&#13;&#10;&#9;for i=1, 10, 1 do&#13;&#10;&#9;&#9;if (i%2 == 0) then&#13;&#10;&#9;&#9;&#9;val = 100&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;val = -100&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;IamATable[i] = i+val&#13;&#10;&#9;end&#13;&#10;&#9;console(string.format(&quot;IamATable Keys&quot;,0))&#13;&#10;&#9;for k in pairs(IamATable) do console(string.format(&quot;key=%s&quot;,tostring(k))) end&#13;&#10;&#9;console(string.format(&quot;IamATable Key Value paare&quot;,0))&#13;&#10;&#9;for k,v in ipairs(IamATable) do console(string.format(&quot;key=%s, value=%s&quot;,tostring(k),tostring(v))) end&#13;&#10;&#9;&#13;&#10;&#9;console(string.format(&quot;IamATable Key Value paare manuell&quot;,0))&#13;&#10;&#9;for k in pairs(IamATable) do console(string.format(&quot;key=%s, value=%s&quot;,tostring(k), tostring(IamATable[k]))) end&#13;&#10;&#9;&#13;&#10;&#9;table.sort(IamATable)&#13;&#10;&#9;&#13;&#10;&#9;console(string.format(&quot;IamATable Key Value paare manuell&quot;,0))&#13;&#10;&#9;for k in pairs(IamATable) do console(string.format(&quot;key=%s, value=%s&quot;,tostring(k), tostring(IamATable[k]))) end&#13;&#10;&#9;&#13;&#10;&#9;days = {&quot;Sunday&quot;, &quot;Monday&quot;, &quot;Tuesday&quot;, &quot;Wednesday&quot;,&quot;Thursday&quot;, &quot;Friday&quot;, &quot;Saturday&quot;}&#13;&#10;&#9;table.sort(days)&#13;&#10;&#9;for k in pairs(days) do console(string.format(&quot;key=%s, value=%s&quot;,tostring(k), tostring(days[k]))) end&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;-- renameAllLabels = function ()&#13;&#10;&#13;&#10;&#9;-- n = panel:getNumModulators()&#13;&#10;&#9;-- for modIndex=0,n-1 do&#13;&#10;&#13;&#10;&#9;&#9;-- mod = panel:getModulatorByIndex(modIndex)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;-- if(mod ~= nil) then&#13;&#10;&#9;&#9;&#9;-- modName = tostring(mod:getProperty (&quot;name&quot;))&#9;&#9;&#9;-- :startWith(&quot;...&quot;) doesnt work!!!&#9;&#9;&#9;&lt;---- use String(modName)&#13;&#10;&#9;&#9;&#9;-- -- modName = mod:getPropertyString (&quot;name&quot;)&#9;&#9;-- :startWith(&quot;...&quot;) works!!!&#13;&#10;&#9;&#9;&#9;-- if(modName == nil) then&#13;&#10;&#9;&#9;&#9;&#9;-- modName = &quot;nil&quot;&#13;&#10;&#9;&#9;&#9;&#9;-- console (string.format(&quot;mod %d has no name!!!!&quot;, modIndex))&#13;&#10;&#9;&#9;&#9;-- end&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;-- end&#13;&#10;&#9;-- end&#13;&#10;&#13;&#10;-- end&#13;&#10;&#13;&#10;saveInFxGroupRegister = function (mod, modName)&#13;&#10;&#13;&#10;&#9;component = mod : getComponent ()&#13;&#10;&#9;if (component ~= nil) then&#13;&#10;&#9;&#9;componentGroupName = component : getProperty (&quot;componentGroupName&quot;)&#13;&#10;&#9;&#9;for i=1,3 do&#13;&#10;&#9;&#9;&#9;currentCompareString = string.format(&quot;grp_%d_&quot;, i)&#13;&#10;&#9;&#9;&#9;if (String(componentGroupName):startsWith(currentCompareString)) then&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;if (true) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- &quot;grp_1_Mix&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;--  0123456&#13;&#10;&#9;&#9;&#9;&#9;&#9;strLen = String(componentGroupName):length()&#13;&#10;&#9;&#9;&#9;&#9;&#9;group = String(componentGroupName):substring(6, strLen)&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (group == &quot;GeneralControls&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;groupName = &quot;Mix&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;elseif (group == &quot;Equalizer_Controls&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;groupName = &quot;EQ&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;elseif (group == &quot;DistortionControls&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;groupName = &quot;Dist&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;elseif (group == &quot;Insert_Controls&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;groupName = &quot;Mod&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;elseif (group == &quot;Insert_Controls_Rotary&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;groupName = &quot;Mod&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;elseif (group == &quot;WahControls&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;groupName = &quot;Wah&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;elseif (group == &quot;Compressor-Limiter_Controls&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;groupName = &quot;CompLimit&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;elseif (group == &quot;CompressorLimiter_Presets&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;groupName = &quot;CompLimit&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;elseif (group == &quot;DelayControls&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;groupName = &quot;Delay&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;groupName = &quot;Other&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;--unhandledGroupName = MemoryBlock(group):toString()&#9;-- wrong format &#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;--unhandledGroupName = group:__add(&quot;&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;unhandledGroupName = group&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;console (string.format(&quot;xxxxmod=%sxxxx should not happen xxxxxxxx groupName = %s&quot;, mod:getProperty(&quot;name&quot;), unhandledGroupName))&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;-- save mod in array&#13;&#10;&#9;&#9;&#9;&#9;&#9;fxTypeRegister = string.format (&quot;efx%d%sControls&quot;, i, groupName)&#13;&#10;&#9;&#9;&#9;&#9;&#9;registerIndex = table.maxn(_G[fxTypeRegister]) +1&#13;&#10;&#9;&#9;&#9;&#9;&#9;_G[fxTypeRegister][registerIndex] = modName&#13;&#10;&#9;&#9;&#9;&#9;&#9;break&#13;&#10;&#9;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;-- save mod in array&#13;&#10;&#9;&#9;&#9;&#9;-- allEfxDesignElementsCounter[i] = allEfxDesignElementsCounter[i] +1&#13;&#10;&#9;&#9;&#9;&#9;-- register = string.format(&quot;allEfx%dDesignElements&quot;, i)&#13;&#10;&#9;&#9;&#9;&#9;-- _G[register][allEfxDesignElementsCounter[i]] = modName&#13;&#10;&#9;&#9;&#9;&#9;-- break&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end&#13;&#10;&#13;&#10;listAllModulatorsSorted = function (withOutput)&#13;&#10;&#13;&#10;&#9;masterModulators = MemoryBlock ()&#13;&#10;&#9;efxModulators = {}&#13;&#10;&#9;&#13;&#10;&#9;efx1ModulatorsWithoutPresetValues = MemoryBlock ()&#13;&#10;&#9;efx2ModulatorsWithoutPresetValues = MemoryBlock ()&#13;&#10;&#9;efx3ModulatorsWithoutPresetValues = MemoryBlock ()&#13;&#10;&#9;&#13;&#10;&#9;efx1Modulators = MemoryBlock ()&#13;&#10;&#9;efx2Modulators = MemoryBlock ()&#13;&#10;&#9;efx3Modulators = MemoryBlock ()&#13;&#10;&#9;&#13;&#10;&#9;efx1MixControls = {}&#13;&#10;&#9;efx2MixControls = {}&#13;&#10;&#9;efx3MixControls = {}&#13;&#10;&#9;&#13;&#10;&#9;efx1EQControls = {}&#13;&#10;&#9;efx2EQControls = {}&#13;&#10;&#9;efx3EQControls = {}&#13;&#10;&#9;&#13;&#10;&#9;efx1DistControls = {}&#13;&#10;&#9;efx2DistControls = {}&#13;&#10;&#9;efx3DistControls = {}&#13;&#10;&#9;&#13;&#10;&#9;efx1ModControls = {}&#13;&#10;&#9;efx2ModControls = {}&#13;&#10;&#9;efx3ModControls = {}&#13;&#10;&#9;&#13;&#10;&#9;efx1WahControls = {}&#13;&#10;&#9;efx2WahControls = {}&#13;&#10;&#9;efx3WahControls = {}&#13;&#10;&#9;&#13;&#10;&#9;efx1CompLimitControls = {}&#13;&#10;&#9;efx2CompLimitControls = {}&#13;&#10;&#9;efx3CompLimitControls = {}&#13;&#10;&#9;&#13;&#10;&#9;efx1DelayControls = {}&#13;&#10;&#9;efx2DelayControls = {}&#13;&#10;&#9;efx3DelayControls = {}&#13;&#10;&#9;&#13;&#10;&#9;efx1OtherControls = {}&#13;&#10;&#9;efx2OtherControls = {}&#13;&#10;&#9;efx3OtherControls = {}&#13;&#10;&#13;&#10;&#9;allEfx1DesignElements = {}&#9;&#9;&#9;&#9;-- slider, combo, groups, labels ... all!&#13;&#10;&#9;allEfx2DesignElements = {}&#9;&#9;&#9;&#9;-- slider, combo, groups, labels ... all!&#13;&#10;&#9;allEfx3DesignElements = {}&#9;&#9;&#9;&#9;-- slider, combo, groups, labels ... all!&#13;&#10;&#9;allEfxDesignElementsCounter = {}&#13;&#10;&#9;allEfxDesignElementsCounter[1] = 0&#13;&#10;&#9;allEfxDesignElementsCounter[2] = 0&#13;&#10;&#9;allEfxDesignElementsCounter[3] = 0&#13;&#10;&#9;&#13;&#10;&#9;efxLabelCounter = {}&#13;&#10;&#9;efxLabelCounter[1] = 0&#13;&#10;&#9;efxLabelCounter[2] = 0&#13;&#10;&#9;efxLabelCounter[3] = 0&#13;&#10;&#13;&#10;&#9;efx1PresetValueModulators = {}&#13;&#10;&#9;efx2PresetValueModulators = {}&#13;&#10;&#9;efx3PresetValueModulators = {}&#13;&#10;&#9;&#13;&#10;&#9;efxPresetValueModulatorCounter = {}&#13;&#10;&#9;efxPresetValueModulatorCounter[1] = 0&#13;&#10;&#9;efxPresetValueModulatorCounter[2] = 0&#13;&#10;&#9;efxPresetValueModulatorCounter[3] = 0&#13;&#10;&#9;&#13;&#10;&#9;GeneralMixControls = MemoryBlock ()&#13;&#10;&#9;CompressorLimiterControls = MemoryBlock ()&#13;&#10;&#9;WahWahControls = MemoryBlock ()&#13;&#10;&#9;ParametricEqualizerControls = MemoryBlock ()&#13;&#10;&#9;ChorusFlangerPhaserTremoloRotaryControls = MemoryBlock ()&#13;&#10;&#9;DelayControls = MemoryBlock()&#13;&#10;&#13;&#10;&#9;unnamed = MemoryBlock()&#13;&#10;&#13;&#10;&#9;allfxModCounter = 0&#13;&#10;&#9;efxModulatorCounter = {}&#13;&#10;&#9;--efxModulatorCounter = {0,0,0}&#13;&#10;&#9;efxModulatorCounter[1] = 0&#13;&#10;&#9;efxModulatorCounter[2] = 0&#13;&#10;&#9;efxModulatorCounter[3] = 0&#13;&#10;&#13;&#10;&#9;HQDistModulators = {}&#13;&#10;&#9;HQDistModulatorsCounter = 0&#13;&#10;&#13;&#10;&#9;ungroupedModulators = {}&#13;&#10;&#9;ungroupedModulatorsCounter = 0&#13;&#10;&#13;&#10;&#9;groupModulators = {}&#13;&#10;&#9;groupModulatorsCounter = 0&#13;&#10;&#13;&#10;&#9;labelModulators = {}&#13;&#10;&#9;labelModulatorsCounter = 0&#13;&#10;&#9;&#13;&#10;&#9;filterStringPresetLoader = &quot;Preset&quot;&#13;&#10;&#9;filterStringPresets = &quot;Preset_Value&quot;&#13;&#10;&#13;&#10;&#9;n = panel:getNumModulators()&#13;&#10;&#9;for modIndex=0,n-1 do&#13;&#10;&#13;&#10;&#9;&#9;mod = panel:getModulatorByIndex(modIndex)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;if(mod ~= nil) then&#13;&#10;&#9;&#9;&#9;modName = tostring(mod:getProperty (&quot;name&quot;))&#9;&#9;&#9;-- :startWith(&quot;...&quot;) doesnt work!!!&#9;&#9;&#9;&lt;---- use String(modName)&#13;&#10;&#9;&#9;&#9;--modName = mod:getPropertyString (&quot;name&quot;)&#9;&#9;-- :startWith(&quot;...&quot;) works!!!&#13;&#10;&#9;&#9;&#9;if(modName == nil) then&#13;&#10;&#9;&#9;&#9;&#9;modName = &quot;nil&quot;&#13;&#10;&#9;&#9;&#9;&#9;console (string.format(&quot;mod %d has no name!!!!&quot;, modIndex))&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;isUiLabelModulator = false&#13;&#10;&#9;&#9;&#9;currentModUiType = mod:getComponent():getProperty(&quot;uiType&quot;)&#13;&#10;&#9;&#9;&#9;if (currentModUiType == &quot;uiLabel&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;labelComponent = mod:getComponent()&#13;&#10;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;isCurrentPresetLabel = false&#13;&#10;&#9;&#9;&#9;&#9;labelComponentVisibleName = tostring(labelComponent : getProperty (&quot;componentVisibleName&quot;))&#13;&#10;&#9;&#9;&#9;&#9;if(labelComponentVisibleName == &quot;Current Preset&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;isCurrentPresetLabel = true&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;labelComponentGroupName = labelComponent : getProperty (&quot;componentGroupName&quot;)&#13;&#10;&#9;&#9;&#9;&#9;for i=1,3 do&#13;&#10;&#9;&#9;&#9;&#9;&#9;currentCompareString = string.format(&quot;grp_%d_&quot;, i)&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (String(labelComponentGroupName):startsWith(currentCompareString)) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (isCurrentPresetLabel == true) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- &quot;grp_1_Mix&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;--  0123456&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;strLen = String(labelComponentGroupName):length()&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;group = String(labelComponentGroupName):substring(6, strLen)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (group == &quot;GeneralControls&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;groupName = &quot;Mix&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif (group == &quot;Equalizer_Controls&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;groupName = &quot;EQ&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif (group == &quot;DistortionControls&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;groupName = &quot;Dist&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif (group == &quot;Insert_Controls&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;groupName = &quot;Mod&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif (group == &quot;WahControls&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;groupName = &quot;Wah&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif (group == &quot;Compressor-Limiter_Controls&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;groupName = &quot;CompLimit&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif (group == &quot;CompressorLimiter_Presets&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;groupName = &quot;CompLimit&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif (group == &quot;DelayControls&quot;) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;groupName = &quot;Delay&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;console (string.format(&quot;xxxxmod=xxxx should not happen xxxxxxxx groupName = %s&quot;, mod:getProperty(&quot;name&quot;), MemoryBlock(group):toString()))&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;newLabelName = string.format (&quot;Efx%d_%s_Current_Preset&quot;, i, groupName)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;efxLabelCounter[i] = efxLabelCounter[i] +1&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;newLabelName = string.format (&quot;lbl_%d_%02d&quot;, i, efxLabelCounter[i])&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;--newLabelName = string.format (&quot;lbl_%d_%s_%d&quot;, i, String(labelComponentGroupName):substring(6,String(labelComponentGroupName):length()), efxLabelCounter[i])&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;mod:setProperty(&quot;name&quot;, newLabelName, false)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;--console (string.format (&quot;&gt;&gt; &gt;&gt; renamed label %s to %s&quot;, modName, newLabelName))&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;modName = mod:getProperty(&quot;name&quot;)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;--console (string.format (&quot;&gt;&gt; %s&quot;, modName))&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;-- save mod in array&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;allEfxDesignElementsCounter[i] = allEfxDesignElementsCounter[i] +1&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;register = string.format(&quot;allEfx%dDesignElements&quot;, i)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_G[register][allEfxDesignElementsCounter[i]] = modName&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;break&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;labelModulatorsCounter = labelModulatorsCounter +1&#13;&#10;&#9;&#9;&#9;&#9;labelModulators[labelModulatorsCounter] = modName&#13;&#10;&#9;&#9;&#9;&#9;isUiLabelModulator = true&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#13;&#10;&#9;&#9;&#9;if (isUiLabelModulator == false) then&#13;&#10;&#9;&#9;&#9;&#9;--what(modName)&#13;&#10;&#9;&#9;&#9;&#9;--console (modName)&#13;&#10;&#9;&#9;&#9;&#9;--console (string.format(&quot;compare %s&quot;, modName))&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;isEfxModulator = false&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;for i=1,3 do&#13;&#10;&#9;&#9;&#9;&#9;&#9;currentCompareString = string.format(&quot;Efx%d&quot;, i)&#13;&#10;&#9;&#9;&#9;&#9;&#9;if modName ~= nil then &#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (String(modName):startsWith (currentCompareString) == true) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (String(modName):endsWith (filterStringPresets) == true) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- xyz...Preset_Value&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- save to efx%dPresetValueModulator&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;efxPresetValueModulatorCounter[i] = efxPresetValueModulatorCounter[i] +1&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;register = string.format(&quot;efx%dPresetValueModulators&quot;, i)&#9;&#9;--efx1PresetValueModulators&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_G[register][efxPresetValueModulatorCounter[i]] = modName&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif (String(modName):endsWith (filterStringPresetLoader) == true) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- nothing!&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else &#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Modulator (kein Preset Value)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;saveInFxGroupRegister(mod, modName)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;allfxModCounter = allfxModCounter +1&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;efxModulators[allfxModCounter] = modName&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- save to efx%dModulatorsWithoutPresetValues&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;efxModulatorCounter[i] = efxModulatorCounter[i] +1&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;register = string.format(&quot;efx%dModulatorsWithoutPresetValues&quot;, i)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_G[register][efxModulatorCounter[i]] = modName&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- save to allEfx%dDesignElements&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;allEfxDesignElementsCounter[i] = allEfxDesignElementsCounter[i] +1&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;register = string.format(&quot;allEfx%dDesignElements&quot;, i)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_G[register][allEfxDesignElementsCounter[i]] = modName&#13;&#10;--&#9;&#9;&#9;&#9;&#9;&#9;&#9;console (string.format(&quot;%s starts with %s&quot;, modName, currentCompareString))&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;isEfxModulator = true&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;if isEfxModulator == false then&#13;&#10;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (String(modName):startsWith (&quot;HQ_&quot;) == true) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (String(modName):endsWith (filterStringPresetLoader) == true) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- nothing&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;HQDistModulatorsCounter = HQDistModulatorsCounter +1&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;HQDistModulators[HQDistModulatorsCounter] = modName&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;elseif (String(modName):startsWith (&quot;grp&quot;) == true) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;for i=1,3 do&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;groupModulatorsCounter = groupModulatorsCounter +1&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;groupModulators[groupModulatorsCounter] = modName&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;efxGroupCompareString = string.format(&quot;grp_%d_&quot;, i)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (String(modName):startsWith (efxGroupCompareString) == true) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- save to allEfx%dDesignElements&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;allEfxDesignElementsCounter[i] = allEfxDesignElementsCounter[i] +1&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;register = string.format(&quot;allEfx%dDesignElements&quot;, i)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_G[register][allEfxDesignElementsCounter[i]] = modName&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;elseif  (String(modName):startsWith (&quot;dev_&quot;) == true) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;-- no serialize index for dev_ modulators!&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;else &#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;ungroupedModulatorsCounter = ungroupedModulatorsCounter +1&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;ungroupedModulators[ungroupedModulatorsCounter] = modName&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;--console ( string.format (&quot;%s&quot;, mod:getProperty (&quot;name&quot;)))&#13;&#10;&#9;&#9;&#9;--console (string.format(&quot;modIndex=%d luaModulatorValueChange found: %s(%s,%d)&quot;, modIndex, valChangeMethod, mod:getProperty(&quot;name&quot;), modValue))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;--for k=1, allfxModCounter do&#13;&#10;&#9;--&#9;console ( string.format (&quot;_ %s&quot;, efxModulators[k]))&#13;&#10;&#9;--end&#13;&#10;&#9;&#13;&#10;&#9;pushPresetValueModulatorPriorityUp ()&#13;&#10;&#13;&#10;&#9;if (withOutput ~= true) then&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;for i=1,3 do&#13;&#10;&#9;&#9;console ( string.format (&quot; -------- EFX%d Modulators --------&quot;, i))&#13;&#10;&#13;&#10;&#9;&#9;for k=1, efxModulatorCounter[i] do&#13;&#10;&#9;&#9;&#9;register = string.format(&quot;efx%dModulators&quot;, i)&#13;&#10;&#9;&#9;&#9;console ( string.format (&quot;_ %s&quot;, _G[register][k]))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;fxTypes = {&quot;Mix&quot;, &quot;EQ&quot;, &quot;Dist&quot;, &quot;Mod&quot;, &quot;Wah&quot;, &quot;CompLimit&quot;, &quot;Delay&quot;, &quot;Other&quot;}&#13;&#10;&#9;&#13;&#10;&#9;for key,fxType in ipairs(fxTypes) do&#13;&#10;&#9;&#9;for efxId=1,3 do&#13;&#10;&#9;&#9;&#9;console ( string.format (&quot; -------- EFX%d %s Controls --------&quot;, efxId, fxType))&#13;&#10;&#13;&#10;&#9;&#9;&#9;fxTypeRegister = string.format (&quot;efx%d%sControls&quot;, efxId, fxType)&#13;&#10;&#9;&#9;&#9;numOfItems = table.maxn(_G[fxTypeRegister])&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;for k=1, numOfItems do&#13;&#10;&#9;&#9;&#9;&#9;console ( string.format (&quot;_ %s&quot;, _G[fxTypeRegister][k]))&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;console ( string.format (&quot;_ numOfItems = %d&quot;, numOfItems))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;console ( string.format (&quot; -------- HQ Modulators --------&quot;, i))&#13;&#10;&#13;&#10;&#9;&#9;for k=1, HQDistModulatorsCounter do&#13;&#10;&#9;&#9;&#9;register = string.format(&quot;HQDistModulators&quot;, i)&#13;&#10;&#9;&#9;&#9;console ( string.format (&quot;_ %s&quot;, _G[register][k]))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;console ( string.format (&quot; -------- Group Modulators --------&quot;, i))&#13;&#10;&#13;&#10;&#9;&#9;for k=1, groupModulatorsCounter do&#13;&#10;&#9;&#9;&#9;register = string.format(&quot;groupModulators&quot;, i)&#13;&#10;&#9;&#9;&#9;console ( string.format (&quot;_ %s&quot;, _G[register][k]))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;console ( string.format (&quot; -------- Label Modulators --------&quot;, i))&#13;&#10;&#13;&#10;&#9;&#9;for k=1, labelModulatorsCounter do&#13;&#10;&#9;&#9;&#9;register = string.format(&quot;labelModulators&quot;, i)&#13;&#10;&#9;&#9;&#9;console ( string.format (&quot;_ %s&quot;, _G[register][k]))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;console ( string.format (&quot; -------- Other Modulators --------&quot;, i))&#13;&#10;&#13;&#10;&#9;&#9;for k=1, ungroupedModulatorsCounter do&#13;&#10;&#9;&#9;&#9;register = string.format(&quot;ungroupedModulators&quot;, i)&#13;&#10;&#9;&#9;&#9;console ( string.format (&quot;_ %s&quot;, _G[register][k]))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;--&#9;console ( string.format (&quot; -------- EFX1 Modulators --------&quot;, 0))&#13;&#10;--&#13;&#10;--&#9;for k=1, efxModulatorCounter[1] do&#13;&#10;--&#9;&#9;console ( string.format (&quot;_ %s&quot;, efx1Modulators[k]))&#13;&#10;--&#9;end&#13;&#10;--&#13;&#10;--&#9;console ( string.format (&quot; -------- EFX2 Modulators --------&quot;, 0))&#13;&#10;--&#13;&#10;--&#9;for k=1, efxModulatorCounter[2] do&#13;&#10;--&#9;&#9;console ( string.format (&quot;_ %s&quot;, efx2Modulators[k]))&#13;&#10;--&#9;end&#13;&#10;--&#13;&#10;--&#9;console ( string.format (&quot; -------- EFX3 Modulators --------&quot;, 0))&#13;&#10;--&#13;&#10;--&#9;for k=1, efxModulatorCounter[3] do&#13;&#10;--&#9;&#9;console ( string.format (&quot;_ %s&quot;, efx3Modulators[k]))&#13;&#10;--&#9;end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;pushPresetValueModulatorPriorityUp = function()&#13;&#10;&#13;&#10;&#9;for i=1,3 do&#13;&#10;&#9;&#9;console ( string.format (&quot; -------- EFX%d Modulators --------&quot;, i))&#13;&#10;&#13;&#10;&#9;&#9;for k=1, efxPresetValueModulatorCounter[i] do&#13;&#10;&#9;&#9;&#9;sourceRegister = string.format(&quot;efx%dPresetValueModulators&quot;, i)&#13;&#10;&#9;&#9;&#9;targetRegister = string.format(&quot;efx%dModulators&quot;, i)&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;_G[targetRegister][k] = _G[sourceRegister][k]&#13;&#10;&#9;&#9;&#9;--targetRegister&#13;&#10;&#9;&#9;&#9;-- efxModulators _G[register][k]&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;numOfModulatorsWithPresetValuesOffset = efxPresetValueModulatorCounter[i]&#13;&#10;&#9;&#9;console (string.format(&quot;numOfModulatorsWithPresetValuesOffset=%d&quot;,numOfModulatorsWithPresetValuesOffset))&#13;&#10;&#9;&#9;console (string.format(&quot;efxModulatorCounter[%d]=%d&quot;,i,efxModulatorCounter[i]))&#13;&#10;&#13;&#10;&#9;&#9;for k=1, efxModulatorCounter[i] do&#13;&#10;&#9;&#9;&#9;sourceRegister = string.format(&quot;efx%dModulatorsWithoutPresetValues&quot;, i)&#13;&#10;&#9;&#9;&#9;targetRegister = string.format(&quot;efx%dModulators&quot;, i)&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;_G[targetRegister][k+numOfModulatorsWithPresetValuesOffset] = _G[sourceRegister][k]&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;currentEfxTotalModulators = efxModulatorCounter[i] + numOfModulatorsWithPresetValuesOffset&#13;&#10;&#9;&#9;console (string.format(&quot;efx %d: total = %d (preset Values= %d, parameters= %d)&quot;, i, currentEfxTotalModulators, numOfModulatorsWithPresetValuesOffset,efxModulatorCounter[i] ))&#13;&#10;&#9;&#9;efxModulatorCounter[i] = efxModulatorCounter[i] + numOfModulatorsWithPresetValuesOffset&#13;&#10;&#9;&#9;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;end"
                 luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                 uuid="00712fa5f6234ca89ae9dd034d040e74" luaMethodValid="1"/>
      <luaMethod luaMethodName="sendAllEfxParameter" luaMethodCode="--&#13;&#10;-- Called when a double-click event occurs on this component&#13;&#10;--&#13;&#10;&#13;&#10;sendAllEfxParameter = function(--[[ CtrlrComponent --]] comp, --[[ MouseEvent --]] event)&#13;&#10;&#13;&#10;&#9;--what(comp)&#13;&#10;&#9;--what(comp:getOwner())&#13;&#10;&#9;mod = comp:getOwner()&#13;&#10;&#9;modName = tostring(mod:getProperty(&quot;name&quot;))&#13;&#10;&#9;console (string.format (&quot;sendAllEfxParameter (comp=%s)&quot;, modName))&#13;&#10;&#13;&#10;&#9;efxId = String(modName):substring(3,4)&#13;&#10;&#9;console (string.format(&quot;efxId=%s&quot;,efxId))&#13;&#10;&#13;&#10;&#9;sendAllEfxParameter_(efxId)&#13;&#10;&#9;&#13;&#10;&#9;b = BubbleMessageComponent(500)&#13;&#10;&#9;b:showAt(comp, string.format(&quot;Send all EFX %s Parameter done!&quot;,efxId), 2500, true, false)&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;sendAllEfxParameter_ = function (efxId)&#13;&#10;&#13;&#10;&#9;efxId = tonumber(efxId)&#13;&#10;&#9;if (efxId &lt;= 0 or efxId &gt;= 4) then&#13;&#10;&#9;&#9;console (string.format(&quot;efxId=%d is invalid&quot;,efxId))&#13;&#10;&#9;&#9;return&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;--sendAllEfxParameterByManuallySendingModMidiMessage(efxId) &#9;-- problem: nrpn data value always 00&#13;&#10;&#9;sendAllEfxParameterByChangingModValue(efxId)&#9;&#9;&#9;&#9;&#9;-- problem: changing needs force&#13;&#10;end&#13;&#10;&#13;&#10;sendAllEfxParameterByChangingModValue = function (efxId)&#13;&#10;&#13;&#10;&#9;listAllModulatorsSorted()&#13;&#10;&#13;&#10;&#9;&#9;for k=1, efxModulatorCounter[efxId] do&#13;&#10;&#9;&#9;&#9;register = string.format(&quot;efx%dModulators&quot;, efxId)&#13;&#10;&#9;&#9;&#9;modName = string.format (&quot;%s&quot;, _G[register][k])&#13;&#10;&#9;&#9;&#9;mod = panel:getModulatorByName(modName)&#13;&#10;&#9;&#9;&#9;if (mod ~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;currentMidiMessage = mod:getMidiMessage(0)&#13;&#10;&#9;&#9;&#9;&#9;if (currentMidiMessage ~= nil) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;midiMessageString = string.format (&quot;%s&quot;, MemoryBlock(currentMidiMessage:toString()):toHexString(3))&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (currentMidiMessage : getMidiMessageType() ~= 9) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;modVal = mod : getModulatorValue ()&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;--void CtrlrModulator::setValue(const int newValue, const bool force, const bool mute)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;--&#9;processor.setValueGeneric (CtrlrModulatorValue (newValue, CtrlrModulatorValue::changedByLua), force, mute);&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;-- setModulatorValue(const int newValue, bool vst, bool midi, bool ui)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;--&#9;processor.setValueGeneric (CtrlrModulatorValue (newValue, CtrlrModulatorValue::changedByLua), true, !midi);&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;-- setValueGeneric(const CtrlrModulatorValue inValue, const bool force, const bool mute)&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;--mod : setModulatorValue (0, true, false, true)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;--mod : setModulatorValue (modVal, true, false, true)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;--mod : setValue (modVal, true, false)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;mod : setValue (modVal, true)&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;console (string.format (&quot;send %s midi message value: %d == %02x&quot;, modName, modVal, modVal))&#13;&#10;&#9;&#9;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;console (string.format (&quot;---- %s midi message: %s  -- disabled&quot;, modName, midiMessageString))&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;console(string.format(&quot;mod = %s not found!&quot;, modName))&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;sendAllEfxParameterByManuallySendingModMidiMessage = function (efxId)&#13;&#10;&#13;&#10;&#9;listAllModulatorsSorted()&#13;&#10;&#13;&#10;&#9;&#9;for k=1, efxModulatorCounter[efxId] do&#13;&#10;&#9;&#9;&#9;register = string.format(&quot;efx%dModulators&quot;, efxId)&#13;&#10;&#9;&#9;&#9;modName = string.format (&quot;%s&quot;, _G[register][k])&#13;&#10;&#9;&#9;&#9;mod = panel:getModulatorByName(modName)&#13;&#10;&#9;&#9;&#9;if (mod ~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;currentMidiMessage = mod:getMidiMessage(0)&#13;&#10;&#9;&#9;&#9;&#9;if (currentMidiMessage ~= nil) then&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;midiMessageString = string.format (&quot;%s&quot;, MemoryBlock(currentMidiMessage:toString()):toHexString(3))&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (currentMidiMessage : getMidiMessageType() ~= 9) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;panel:sendMidiMessageNow(currentMidiMessage)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;console (string.format (&quot;send %s midi message: %s&quot;, modName, midiMessageString))&#13;&#10;&#9;&#9;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;console (string.format (&quot;---- %s midi message: %s  -- disabled&quot;, modName, midiMessageString))&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;else&#13;&#10;&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;console(string.format(&quot;mod = %s not found!&quot;, modName))&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;end"
                 luaMethodLinkedProperty="componentLuaMouseDoubleClick" luaMethodSource="0"
                 uuid="8a9f1decf84f433a8f961865d2c1fc73" luaMethodValid="1"/>
      <luaMethod luaMethodName="CopyDesign" luaMethodCode="--&#13;&#10;-- Called when a double-click event occurs on this component&#13;&#10;--&#13;&#10;&#13;&#10;CopyDesign = function(--[[ CtrlrComponent --]] comp, --[[ MouseEvent --]] event)&#13;&#10;&#13;&#10;&#9;designSourceId = 3&#13;&#10;&#9;targetDesign = {}&#13;&#10;&#9;targetDesign[1] = 1&#13;&#10;&#9;targetDesign[2] = 2&#13;&#10;&#13;&#10;&#9;listAllModulatorsSorted ()&#13;&#10;&#9;&#13;&#10;&#9;efxId = designSourceId&#13;&#10;&#13;&#10;&#9;--for k=1, efxModulatorCounter[efxId] do&#13;&#10;&#9;--&#9;register = string.format(&quot;efx%dModulators&quot;, efxId)&#13;&#10;&#9;for k=1, allEfxDesignElementsCounter[efxId] do&#13;&#10;&#9;&#9;register = string.format(&quot;allEfx%dDesignElements&quot;, efxId)&#13;&#10;&#9;&#9;modName = string.format (&quot;%s&quot;, _G[register][k])&#13;&#10;&#9;&#9;mod = panel:getModulatorByName(modName)&#13;&#10;&#9;&#9;if (mod ~= nil) then&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;comp = mod:getComponent()&#13;&#10;&#9;&#9;&#9;if (comp ~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;sourcePropertyRectangleValue = comp:getProperty(&quot;componentRectangle&quot;)&#13;&#10;&#9;&#9;&#9;&#9;sourcePropertyGroupName = comp:getProperty(&quot;componentGroupName&quot;)&#13;&#10;&#9;&#9;&#9;&#9;sourcePropertyText = comp:getPropertyString(&quot;uiLabelText&quot;)&#13;&#10;&#9;&#9;&#9;&#9;for t=1,2 do&#13;&#10;&#9;&#9;&#9;&#9;&#9;targetDesignId = targetDesign[t]&#13;&#10;&#9;&#9;&#9;&#9;&#9;isEfxParameterLabel = false&#13;&#10;&#9;&#9;&#9;&#9;&#9;if(String(modName):startsWith(&quot;Efx&quot;) == true) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;-- &quot;Efx1_&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;-- 0-2&#9;&#9;&#9;&#9;&#9;type&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;-- 3&#9;&#9;&#9;&#9;&#9;efxId&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;-- 4-String():length()&#9;name&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;targetModName = string.format(&quot;Efx%d%s&quot;,targetDesignId, String(modName):substring(4,String(modName):length()))&#13;&#10;&#9;&#9;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;-- 0-3 &#9;&#9;&#9;&#9;&#9;&#9;type&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;-- 4 &#9;&#9;&#9;&#9;&#9;&#9;efxId&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;-- 5 - String():length()&#9;name&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;-- &quot;lbl_1_...&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;-- &quot;grp_1_...&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;--  0123456&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;preType = String(modName):substring(0,3)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;targetModName = string.format(&quot;%s_%d%s&quot;,preType, targetDesignId, String(modName):substring(5,String(modName):length()))&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (String(modName):startsWith(&quot;lbl&quot;)) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;isEfxParameterLabel = true&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;targetMod = panel:getModulatorByName(targetModName)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;if (targetMod ~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;targetComponent = targetMod:getComponent()&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (targetComponent ~= nil) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (isEfxParameterLabel == true) then&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- &quot;grp_3_GeneralControls&quot;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;--  012345&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;strLen = String(sourcePropertyGroupName):length()&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;preString = String(sourcePropertyGroupName):substring(0,3)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;groupNameString = String(sourcePropertyGroupName):substring(6,strLen)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;newTargetPropertyGroupName = string.format(&quot;%s_%d_%s&quot;,preString,targetDesignId,groupNameString) &#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;console (string.format(&quot;mod= %s set componentGroupName=%s&quot;, mod:getProperty(&quot;name&quot;), newTargetPropertyGroupName))&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- 30.08.2016 15:48 backup&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;targetComponent : setProperty(&quot;componentGroupped&quot;, 0, false)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;targetComponent : setPropertyString(&quot;componentGroupName&quot;, newTargetPropertyGroupName)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;targetComponent : setProperty(&quot;componentGroupped&quot;, 1, false)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;targetComponent : setPropertyString(&quot;uiLabelText&quot;, sourcePropertyText)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;targetComponent : setProperty(&quot;componentRectangle&quot;, sourcePropertyRectangleValue, false)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;console (string.format(&quot;ERROR: targetMod %s has no compoennt!!!&quot;, targetModName))&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;console (string.format(&quot;ERROR: targetMod %s doesnt exist!!!&quot;, targetModName))&#13;&#10;&#9;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;console(string.format(&quot;mod = %s has no component!&quot;, modName))&#13;&#10;&#9;&#9;&#9;end&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;console(string.format(&quot;mod = %s not found!&quot;, modName))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;&#13;&#10;end"
                 luaMethodLinkedProperty="componentLuaMouseDoubleClick" luaMethodSource="0"
                 uuid="88d7fff8e4464711a94e235623622dc6" luaMethodValid="1"/>
      <luaMethod luaMethodName="SortModulatorByName" luaMethodCode="--&#10;-- Called when a double-click event occurs on this component&#10;--&#10;&#10;SortModulatorByName = function(--[[ CtrlrComponent --]] comp, --[[ MouseEvent --]] event)&#13;&#10;&#13;&#10;&#9;listAllModulatorsSorted (false)&#13;&#10;&#10;end"
                 luaMethodLinkedProperty="componentLuaMouseDoubleClick" luaMethodSource="0"
                 uuid="1982f2be90b24266be9ce5e16d782e7a" luaMethodValid="1"/>
      <luaMethod luaMethodName="setCurrentPresetLabel" luaMethodCode="--&#13;&#10;-- Called when a modulator value changes&#13;&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#13;&#10;-- @value    new numeric value of the modulator&#13;&#10;--&#13;&#10;setCurrentPresetLabel = function(--[[ CtrlrModulator --]] mod, --[[ number --]] value, --[[ number --]] source)&#13;&#10;&#13;&#10;&#9;modName = mod:getProperty(&quot;name&quot;)&#13;&#10;&#9;if (modName == nil) then&#13;&#10;&#9;&#9;modName = &quot;nil&quot;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;sModName = String(modName)&#13;&#10;&#9;&#13;&#10;&#9;for efxId=1, 3 do&#13;&#10;&#9;&#13;&#10;&#9;&#9;compareString = string.format (&quot;Efx%d&quot;, efxId)&#13;&#10;&#9;&#9;if sModName:startsWith (compareString) == true then&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;-- 01234567&#13;&#10;&#9;&#9;&#9;-- modName:&#13;&#10;&#9;&#9;&#9;-- Efx3_EQ_Preset_Value&#13;&#10;&#9;&#9;&#9;-- labelName:&#13;&#10;&#9;&#9;&#9;-- Efx3_EQ_Current_Preset&#13;&#10;&#9;&#9;&#9;tableArray = mysplit(modName, &quot;_&quot;) &#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;efxType = tableArray[2]&#13;&#10;--&#9;&#9;&#9;console (string.format(&quot;efxId=%d Preset Type=%s&quot;, efxId, efxType))&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;targetLabelName = string.format(&quot;Efx%d_%s_Current_Preset&quot;, efxId, efxType)&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;currentPresetCombo = mod : getComponent()&#13;&#10;&#9;&#9;&#9;valueMap = currentPresetCombo : getValueMap ()&#13;&#10;&#9;&#9;&#9;index = value&#13;&#10;&#9;&#9;&#9;valueText = valueMap : getTextForIndex(index)&#13;&#10;&#9;&#9;&#9;valueTextAsNativString = MemoryBlock(valueMap : getTextForIndex(index)):toString()&#13;&#10;--&#9;&#9;&#9;console (string.format (&quot;%s custom toString()&quot;, valueTextAsNativString) )&#13;&#10;&#9;&#9;&#9;--valueText = tostring(MemoryBlock(valueMap : getTextForIndex(index)))&#9;-- error&#13;&#10;--&#9;&#9;&#9;presetName = string.format (&quot;%s = valueTextAsNativString&quot;, valueTextAsNativString) &#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;--valueText = MemoryBlock(String(valueMap : getTextForIndex(index))):toString()&#13;&#10;&#9;&#9;&#9;--valueTextTest = MemoryBlock(valueMap : getTextForIndex(index)):toBase64Encoding()&#13;&#10;&#9;&#9;&#9;--console (string.format (&quot;%s toBase64Encoding()&quot;, valueTextTest))&#13;&#10;&#9;&#9;&#9;&#13;&#10;&#9;&#9;&#9;valueText = valueText:__add(&quot; custom&quot;)&#13;&#10;&#9;&#9;&#9;targetLabel = panel : getModulatorByName (targetLabelName) : getComponent ()&#13;&#10;&#9;&#9;&#9;--targetLabel : setText(presetName)&#13;&#10;&#9;&#9;&#9;--targetLabel : setPropertyString(&quot;uiLabelText&quot;, valueText)&#13;&#10;&#9;&#9;&#9;--targetLabel : setProperty(&quot;uiLabelText&quot;, valueText, false)&#13;&#10;&#9;&#9;&#9;targetLabel : setComponentText(valueText)&#13;&#10;&#9;&#13;&#10;&#9;&#9;&#9;break&#13;&#10;&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;&#9;&#13;&#10;&#9;if sModName:startsWith (&quot;HQ_Dist_Preset_Value&quot;) == true then&#13;&#10;&#9;&#9;targetLabelName = string.format(&quot;HQ_Dist_Current_Preset&quot;, 0)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;currentPresetCombo = mod : getComponent()&#13;&#10;&#9;&#9;valueMap = currentPresetCombo : getValueMap ()&#13;&#10;&#9;&#9;index = value&#13;&#10;&#9;&#9;valueText = valueMap : getTextForIndex(index)&#13;&#10;&#9;&#9;&#13;&#10;&#9;&#9;valueText = valueText:__add(&quot; custom&quot;)&#13;&#10;&#9;&#9;targetLabel = panel : getModulatorByName (targetLabelName) : getComponent ()&#13;&#10;&#9;&#9;targetLabel : setComponentText(valueText)&#13;&#10;&#9;&#9;&#13;&#10;&#9;end&#13;&#10;&#9;&#13;&#10;end&#13;&#10;&#13;&#10;function mysplit(inputstr, sep)&#13;&#10;        if sep == nil then&#13;&#10;                sep = &quot;%s&quot;&#13;&#10;        end&#13;&#10;        local t={} ; i=1&#13;&#10;        for str in string.gmatch(inputstr, &quot;([&#94;&quot;..sep..&quot;]+)&quot;) do&#13;&#10;                t[i] = str&#13;&#10;                i = i + 1&#13;&#10;        end&#13;&#10;        return t&#13;&#10;end"
                 luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                 uuid="17d31b8655ce4cefb712bfc0c62a264a" luaMethodValid="1"/>
      <luaMethod luaMethodName="listAllModulators" luaMethodCode="--&#10;-- Called when a double-click event occurs on this component&#10;--&#10;&#10;listAllModulators = function(--[[ CtrlrComponent --]] comp, --[[ MouseEvent --]] event)&#13;&#10;&#13;&#10;&#9;--listAllModulatorsByHiddenPanelIndex()&#13;&#10;&#9;listAllModulatorsSortedByName ()&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;listAllModulatorsByHiddenPanelIndex = function ()&#13;&#10;&#13;&#10;&#9;n = panel:getNumModulators()&#13;&#10;&#9;for modIndex=0,n-1 do&#13;&#10;&#9;&#9;mod = panel:getModulatorByIndex(modIndex)&#13;&#10;&#9;&#9;console ( string.format (&quot;%s&quot;,tostring (mod:getProperty(&quot;name&quot;)) ))&#13;&#10;&#9;&#9;--console (string.format(&quot;modIndex=%d luaModulatorValueChange found: %s(%s,%d)&quot;, modIndex, valChangeMethod, mod:getProperty(&quot;name&quot;), modValue))&#13;&#10;&#9;end&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;&#13;&#10;listAllModulatorsSortedByName = function ()&#13;&#10;&#13;&#10;&#9;console ( string.format (&quot;listAllModulatorsSortedByName()&quot;, 0 ))&#13;&#10;&#9;allPanelModulatorTable = {}&#13;&#10;&#13;&#10;&#9;-- store all in table&#13;&#10;&#9;n = panel:getNumModulators()&#13;&#10;&#9;for modIndex=0,n-1 do&#13;&#10;&#9;&#9;mod = panel:getModulatorByIndex(modIndex)&#13;&#10;&#9;&#9;allPanelModulatorTable[modIndex+1] = tostring (mod:getProperty(&quot;name&quot;))&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;-- sort table&#13;&#10;&#9;table.sort(allPanelModulatorTable)&#13;&#10;&#13;&#10;&#9;-- output&#13;&#10;&#9;for k,v in ipairs(allPanelModulatorTable) do&#13;&#10;&#9;&#9;console ( string.format (&quot;%s&quot;, v ))&#13;&#10;&#9;end&#13;&#10;&#13;&#10;end"
                 luaMethodLinkedProperty="componentLuaMouseDoubleClick" luaMethodSource="0"
                 uuid="b3509a63e617498abbc4be4448c6e747" luaMethodValid="1"/>
    </luaManagerMethods>
  </luaManager>
  <panelResources/>
  <uiPanelEditor uiPanelCanvasRectangle="1 0 1600 925" uiPanelSnapSize="8" uiPanelBackgroundColour="0xffffffff"
                 uiPanelBackgroundColour1="0xffffffff" uiPanelBackgroundColour2="0xffffffff"
                 uiPanelBackgroundGradientType="1" uiPanelImageResource="-- None"
                 uiPanelEditMode="0" uiPanelLock="0" uiPanelDisabledOnEdit="0"
                 uiPanelMenuBarVisible="1" uiPanelMenuBarHideOnExport="0" uiPanelWidth="400"
                 uiPanelHeight="400" name="SD1000 EFX" uiPanelImageAlpha="255"
                 uiPanelImageLayout="64" uiPanelSnapActive="1" uiPanelPropertiesOnRight="0"
                 luaPanelPaintBackground="-- None" luaPanelResized="-- None" luaPanelFileDragDropHandler="-- None"
                 luaPanelFileDragEnterHandler="-- None" luaPanelFileDragExitHandler="-- None"
                 uiPanelInvisibleComponentAlpha="0.5" uiPanelTooltipBackgroundColour="0xffeeeebb"
                 uiPanelTooltipOutlineColour="0xff000000" uiPanelTooltipColour="0xff000000"
                 uiPanelTooltipCornerRound="1" uiPanelTooltipPlacement="2" uiPanelTooltipFont="&lt;Sans-Serif&gt;;15;1;0;0;0;1;3"
                 uiPanelZoom="0.80000000000000004" uiPanelPropertiesSize="382"
                 uiPanelViewPortSize="1528">
    <uiPanelCanvasLayer uiPanelCanvasLayerName="New layer" uiPanelCanvasLayerUid="e4c3411959000000feffffffffffffff"
                        uiPanelCanvasLayerColour="0x000000" uiPanelCanvasLayerVisibility="1"
                        uiPanelCanvasLayerIndex="0"/>
  </uiPanelEditor>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_0_Master" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-8"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="MASTER Controls"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="16 400 268 188"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentLayerUid="e4c3411959000000feffffffffffffff" uiType="uiGroup"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="235" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="MA_Volume_CTRL" modulatorMin="0" serializeIndex="235" TriggerModChangeMethodOnLoad="0"
             PauseMidiDuringModChangeOnLoad="1" modulatorValue="100">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="7" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Volume (CTRL)"
               componentMouseCursor="2" componentGroupName="grp_0_Master" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="100" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="0 24 115 71" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="4" vstIndex="217" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="HQ_Top_NoiseReduction" modulatorMin="0" serializeIndex="217"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,61,F0 00 F7:CC,Direct,Direct,98,01,F0 00 F7:CC,Direct,Direct,06,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Noise Reduction"
               componentMouseCursor="2" componentGroupName="grp_HQ_DistortionTopLevelControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="NR_OFF = 0&#10;LIGHT_SMOOTH = 1&#10;LIGHT_HARD = 2&#10;MEDIUM_SMOOTH = 3&#10;HEAVY_SMOOTH = 4"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="24 296 134 40"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_HQ_DistortionTopLevelControls" modulatorVstExported="0"
             vstIndex="" PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-19"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="1"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="HQ Distortion Top Level Controls"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="560 592 698 343"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               uiLabelFont="Courier New;12;1;0;0;0;0;0" uiType="uiGroup" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentTabName="" componentTabId="4"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="3" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="HQ_Dist_On" modulatorMin="0" serializeIndex="3" TriggerModChangeMethodOnLoad="0"
             PauseMidiDuringModChangeOnLoad="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,61,F0 00 F7:CC,Direct,Direct,98,00,F0 00 F7:CC,Direct,Direct,06,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="none" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=" "
               componentMouseCursor="2" componentGroupName="grp_HQ_DistortionTopLevelControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="1" uiButtonColourOn="ff00ff00"
               uiButtonColourOff="ffff0000" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="ff000000" uiButtonContent="OFF=0&#10;ON=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="16 24 60 55" uiType="uiButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="3" vstIndex="218" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="HQ_Top_Booster" modulatorMin="0" serializeIndex="218" TriggerModChangeMethodOnLoad="0"
             PauseMidiDuringModChangeOnLoad="1" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,61,F0 00 F7:CC,Direct,Direct,98,02,F0 00 F7:CC,Direct,Direct,06,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Booster"
               componentMouseCursor="2" componentGroupName="grp_HQ_DistortionTopLevelControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="NO_BOOST = 0&#10;MEDIUM_BOOST = 1&#10;FULL_BOOST_PROGRESSIVE = 2&#10;FULL_BOOST = 3"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="24 248 136 43"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="7" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setHQDistortionPreset"
             name="HQ_Dist_Preset" modulatorMin="0" TriggerModChangeMethodOnLoad="0"
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="7">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,61,F0 00 F7:CC,Direct,Direct,98,03,F0 00 F7:CC,Direct,Direct,06,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (S.57)"
               componentMouseCursor="2" componentGroupName="grp_HQ_DistortionTopLevelControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF=0&#10;Warm-Drive=1&#10;Overdrive=2&#10;Cry=3&#10;Distortion=4&#10;Max-Saturation=6&#10;Fuzz=7&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="80 48 88 32" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="219" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="HQ_Top_Drive" modulatorMin="0" serializeIndex="219" TriggerModChangeMethodOnLoad="0"
             PauseMidiDuringModChangeOnLoad="1" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,61,F0 00 F7:CC,Direct,Direct,98,04,F0 00 F7:CC,Direct,Direct,06,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Drive"
               componentMouseCursor="2" componentGroupName="grp_HQ_DistortionTopLevelControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="24 176 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="220" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="HQ_Top_Tone" modulatorMin="0" serializeIndex="220" TriggerModChangeMethodOnLoad="0"
             PauseMidiDuringModChangeOnLoad="1" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,61,F0 00 F7:CC,Direct,Direct,98,05,F0 00 F7:CC,Direct,Direct,06,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Tone"
               componentMouseCursor="2" componentGroupName="grp_HQ_DistortionTopLevelControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="104 96 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="221" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="HQ_Top_Level" modulatorMin="0" serializeIndex="221" TriggerModChangeMethodOnLoad="0"
             PauseMidiDuringModChangeOnLoad="1" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,61,F0 00 F7:CC,Direct,Direct,98,06,F0 00 F7:CC,Direct,Direct,06,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Level (Post Gain)"
               componentMouseCursor="2" componentGroupName="grp_HQ_DistortionTopLevelControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="16 96 78 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_1_Equalizer_Controls" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-27"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Equalizer Controls EFX1 (3A)"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="216 8 404 261"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentTabId="1" componentTabName="fxTabs" uiType="uiGroup"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="14" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setEQPresetEfx"
             name="Efx1_EQ_Preset" modulatorMin="0" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="14">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,112,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (1.4)"
               componentMouseCursor="2" componentGroupName="grp_1_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="9" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="Flat=0&#10;JC Clean=1&#10;Acoustic=2&#10;Black Panel=3&#10;Brit Combo=4&#10;Tweed=5&#10;Stack Classic=6&#10;Metal=7&#10;R-Fler=8&#10;Dyna Amp=9&#10;Crunch=10&#10;VO Drive=11&#10;BG Lead=12&#10;MS HiGain=13&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="104 48 88 32"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="14" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_EQ_On" modulatorMin="0" serializeIndex="14" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,113,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="ON/OFF"
               componentMouseCursor="2" componentGroupName="grp_1_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="1" uiButtonColourOn="ff00ff00"
               uiButtonColourOff="ffff0000" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="ff000000" uiButtonContent="OFF=0&#10;ON=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="16 16 73 67" uiType="uiButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="2" vstIndex="15" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_EQ_LowGain" modulatorMin="0" serializeIndex="15" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,114,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low band Gain"
               componentMouseCursor="2" componentGroupName="grp_1_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="-12dB=0&#10;0dB=64&#10;+12dB=127"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="16 264 88 32"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="16" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_EQ_LowFreq" modulatorMin="0" serializeIndex="16" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="40">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,118,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low band frequency"
               componentMouseCursor="2" componentGroupName="grp_1_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="8 176 88 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_HQ_Distortion_Controls" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-47"
               componentMouseCursor="2" componentGroupName="grp_HQ_DistortionTopLevelControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="HQ Distortion Preset Parameter Controls"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="184 24 503 312"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentLayerUid="e4c3411959000000feffffffffffffff" uiType="uiGroup"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="222" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="HQ_Parameter_BiasLevel" modulatorMin="0" serializeIndex="222"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,61,F0 00 F7:CC,Direct,Direct,98,18,F0 00 F7:CC,Direct,Direct,06,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Bias Level"
               componentMouseCursor="2" componentGroupName="grp_HQ_Distortion_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="344 80 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="236" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="MA_Reverb_Level" modulatorMin="0" serializeIndex="236"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="31">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 26 7B 02 00 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Reverb Master Level"
               componentMouseCursor="2" componentGroupName="grp_0_MasterReverbAndChorus"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="32" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="16 64 94 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="237" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="MA_Chorus_Level" modulatorMin="0" serializeIndex="237"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="25">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 26 7B 03 00 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Chorus Master Level"
               componentMouseCursor="2" componentGroupName="grp_0_MasterReverbAndChorus"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="26" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="136 64 94 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="238" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="MA_Pedal_Soft" modulatorMin="0" serializeIndex="238" TriggerModChangeMethodOnLoad="0"
             PauseMidiDuringModChangeOnLoad="1" modulatorValue="0">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="67" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Soft pedal"
               componentMouseCursor="2" componentGroupName="grp_0_PedalControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="LinearVertical"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="16 24 95 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="239" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="MA_Pedal_Sostenuto" modulatorMin="0" serializeIndex="239"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="66" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Sostenuto pedal"
               componentMouseCursor="2" componentGroupName="grp_0_PedalControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="LinearVertical"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="16 96 95 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="240" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="MA_Pedal_Sustain" modulatorMin="0" serializeIndex="240"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="64" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Sustain (damper) pedal  "
               componentMouseCursor="2" componentGroupName="grp_0_PedalControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="LinearVertical"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="16 168 95 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="241" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="MA_Portamento_On" modulatorMin="0" serializeIndex="241"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="65" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Portamento"
               componentMouseCursor="2" componentGroupName="grp_0_Portamento"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="1" uiButtonColourOn="ff00ff00"
               uiButtonColourOff="ffff0000" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="ff000000" uiButtonContent="OFF=0&#10;ON=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="16 24 95 32" uiType="uiButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="242" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="MA_Portamento_Control" modulatorMin="0" serializeIndex="242"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="84" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Poramento Control"
               componentMouseCursor="2" componentGroupName="grp_0_Portamento"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="16 64 95 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="243" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="MA_Reverb_send_level" modulatorMin="0" serializeIndex="243"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="91" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Reverb send level"
               componentMouseCursor="2" componentGroupName="grp_0_MasterReverbAndChorus"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="16 136 94 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="244" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="MA_Pan_SysEx" modulatorMin="0" serializeIndex="244" TriggerModChangeMethodOnLoad="0"
             PauseMidiDuringModChangeOnLoad="1" modulatorValue="64">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="7" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 26 7B 39 00 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Master pan (SysEx)"
               componentMouseCursor="2" componentGroupName="grp_0_Master" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="LinearHorizontal"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="64" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="104 112 148 62"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grpMagixEFX" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-36"
               componentMouseCursor="2" componentGroupName="grpDevelopment"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="MAGIX EFX"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="ffdd00ff"
               uiGroupBackgroundColour2="ffffe300" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="160 24 101 57"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentTabId="0" componentTabName="" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiGroup"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="3" vstIndex="4" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setEfxModus"
             name="efxModus" modulatorMin="0" serializeIndex="4" TriggerModChangeMethodOnLoad="1"
             PauseMidiDuringModChangeOnLoad="0" modulatorValue="0">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 41 00 42 12 40 4y 22 xx XX F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="EFX Modus"
               componentMouseCursor="2" componentGroupName="grpMagixEFX" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="1"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="No FX=0&#10;EFX1=1&#10;EFX2=2&#10;EFX1 &amp; 2=3"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="8 16 88 32" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_0_PedalControls" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="PedalControls"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Pedal Controls"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="424 592 128 242"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentLayerUid="e4c3411959000000feffffffffffffff" uiType="uiGroup"
               componentTabName="" componentTabId="0"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_1_Compressor-Limiter_Controls" modulatorVstExported="0"
             vstIndex="" PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-69"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Compressor/Limiter Controls (EFX1)"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="880 272 358 269"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentTabId="1" componentTabName="fxTabs" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiGroup"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="7" vstIndex="245" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="MA_Chorus_type_Preset" modulatorMin="0" serializeIndex="245"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="2">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 26 7B 01 00 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Chorus type (S.60)"
               componentMouseCursor="2" componentGroupName="grp_0_MasterReverbAndChorus"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="Chorus1=16&#10;Chorus2=17&#10;Chorus3 (std)=18&#10;Chorus4=19&#10;Feedback=20&#10;Flanger=21&#10;Short delay=22&#10;FB delay=23"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="136 24 94 32" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="7" vstIndex="246" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="MA_Reverb_type_Preset" modulatorMin="0" serializeIndex="246"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="3">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 26 7B 00 00 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Reverb type (S.60)"
               componentMouseCursor="2" componentGroupName="grp_0_MasterReverbAndChorus"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="Room1=16&#10;Room2=17&#10;Room3=18&#10;Hall1 (std)=19&#10;Hall2=20&#10;Plate=21&#10;Delay=22&#10;Pan delay=23"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="16 24 94 32"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="247" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="MA_Chorus_send_level" modulatorMin="0" serializeIndex="247"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="93" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Chorus send level"
               componentMouseCursor="2" componentGroupName="grp_0_MasterReverbAndChorus"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="136 136 94 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="9" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setCompPresetEfx"
             name="Efx1_CompLimit_Preset" modulatorMin="0" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="9">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,64,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Compressor/Limiter"
               componentMouseCursor="2" componentGroupName="grp_1_CompressorLimiter_Presets"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="No Compression=0&#10;Compression -18dB (2:1)=1&#10;Compression -15dB (3:1)=2&#10;Compression -18dB (5:1)=3&#10;Compression -21dB (7:1)=4&#10;Compression -24dB (12:1)=5&#10;Limiter -6dB=6&#10;Limiter -12dB=7&#10;Limiter -18dB=8&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="8 40 222 45" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="17" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Comp_On" modulatorMin="0" serializeIndex="17" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,65,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="ON/OFF"
               componentMouseCursor="2" componentGroupName="grp_1_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="1" uiButtonColourOn="ff00ff00"
               uiButtonColourOff="ffff0000" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="ff000000" uiButtonContent="OFF=0&#10;ON=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="8 16 73 56" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="18" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Comp_Attack" modulatorMin="0" serializeIndex="18"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,66,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Attack time"
               componentMouseCursor="2" componentGroupName="grp_1_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="280 160 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="19" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Comp_Release" modulatorMin="0" serializeIndex="19"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,67,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Release time"
               componentMouseCursor="2" componentGroupName="grp_1_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="216 160 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="20" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Comp_Threshold" modulatorMin="0" serializeIndex="20"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,68,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Threshold"
               componentMouseCursor="2" componentGroupName="grp_1_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="152 160 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="21" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Comp_Ratio" modulatorMin="0" serializeIndex="21" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,69,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Ratio"
               componentMouseCursor="2" componentGroupName="grp_1_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="88 160 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="5" vstIndex="22" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Comp_Boost" modulatorMin="0" serializeIndex="22" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,70,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Boost"
               componentMouseCursor="2" componentGroupName="grp_1_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="x1=0&#10;x1.5=24&#10;x2=32&#10;x3=48&#10;x4=64&#10;x8=127"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="8 72 76 39"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="23" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Comp_Knee" modulatorMin="0" serializeIndex="23" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,71,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Knee"
               componentMouseCursor="2" componentGroupName="grp_1_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="1" uiButtonColourOn="ffffff00"
               uiButtonColourOff="ffffac00" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="0xff454545" uiButtonContent="Hard Knee=0&#10;Soft Knee=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="8 184 73 72" uiType="uiButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_1_GeneralControls" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-88"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="General/Mix Controls (EFX1)"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="8 104 203 442"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentTabId="1" componentTabName="fxTabs" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiGroup"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="24" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Mix_Gain" modulatorMin="0" serializeIndex="24" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,33,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Input Gain"
               componentMouseCursor="2" componentGroupName="grp_1_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="16 16 61 57" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="25" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Mix_LoCutFreq" modulatorMin="0" serializeIndex="25"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,34,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Lo-cut filter freq"
               componentMouseCursor="2" componentGroupName="grp_1_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="0 264 97 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="26" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Mix_HiCutFreq" modulatorMin="0" serializeIndex="26"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,35,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Hi-cut filter freq"
               componentMouseCursor="2" componentGroupName="grp_1_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="96 72 108 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="27" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Mix_Panning" modulatorMin="0" serializeIndex="27"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,43,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Output panning"
               componentMouseCursor="2" componentGroupName="grp_1_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="LinearHorizontal"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="64" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="8 80 79 54"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="28" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Mix_FrontRear" modulatorMin="0" serializeIndex="28"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,44,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Output Fr/Re Mix"
               componentMouseCursor="2" componentGroupName="grp_1_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="LinearVertical"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="64" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="0 160 95 73" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="29" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Mix_Reverb" modulatorMin="0" serializeIndex="29" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,45,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Reverb"
               componentMouseCursor="2" componentGroupName="grp_1_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="96 168 108 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="30" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Mix_Chorus" modulatorMin="0" serializeIndex="30" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,46,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Chorus"
               componentMouseCursor="2" componentGroupName="grp_1_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="96 264 108 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_1_WahControls" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-100"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Wah-Wah Controls (EFX1)"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="408 272 169 277"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentTabId="1" componentTabName="fxTabs" uiType="uiGroup"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="14" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="setAmpPresetEfx"
             name="Efx1_Mix_Preset" modulatorMin="0" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="14">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,32,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Amp Model Preset (S.6)"
               componentMouseCursor="2" componentGroupName="grp_1_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF=0&#10;JC Clean=1&#10;Acoustic=2&#10;Black Panel=3&#10;Brit Combo=4&#10;Tweed=5&#10;Stack Classic=6&#10;Metal=7&#10;R-Fler=8&#10;Dyna Amp=9&#10;Crunch=10&#10;VO Drive=11&#10;BG Lead=12&#10;MS Higain=13&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="96 40 96 32"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="223" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="HQ_Parameter_PreGain" modulatorMin="0" serializeIndex="223"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,61,F0 00 F7:CC,Direct,Direct,98,22,F0 00 F7:CC,Direct,Direct,06,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Pre-Gain"
               componentMouseCursor="2" componentGroupName="grp_HQ_Distortion_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="416 80 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="31" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Wah_Resonance" modulatorMin="0" serializeIndex="31"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,83,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="resonance"
               componentMouseCursor="2" componentGroupName="grp_1_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="8 104 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="32" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Wah_Type" modulatorMin="0" serializeIndex="32" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,81,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Type"
               componentMouseCursor="2" componentGroupName="grp_1_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ffffff00"
               uiButtonColourOff="ffffac00" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="0xff454545" uiButtonContent="low pass=0&#10;band pass=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="80 216 81 46" uiType="uiButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="6" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setWahPresetEfx"
             name="Efx1_Wah_Preset" modulatorMin="0" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="6">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,80,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (S.5)"
               componentMouseCursor="2" componentGroupName="grp_1_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF=0&#10;Auto-Wah 1&#10;Auto-Wah 2&#10;Auto-Wah 3&#10;Wah-Wah 1&#10;Wah-Wah 2&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="8 56 72 33"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="33" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Wah_Position" modulatorMin="0" serializeIndex="33"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,82,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="38" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="frequency&#10;Pedal Position"
               componentMouseCursor="2" componentGroupName="grp_1_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="88 72 86 97" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="34" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Wah_Sensitivity" modulatorMin="0" serializeIndex="34"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,84,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="sensitivity"
               componentMouseCursor="2" componentGroupName="grp_1_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="8 200 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="fxTabs" modulatorVstExported="0" serializeIndex="5" vstIndex="5"
             TriggerModChangeMethodOnLoad="1" PauseMidiDuringModChangeOnLoad="0"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="FX Tabs"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiTabsCurrentTabChanged="fxTabChange"
               uiTabsDepth="24" uiTabsOutlineThickness="2" uiTabsFrontTabOutline="1"
               uiTabsTabOutline="1" uiTabsIndentThickness="0" uiTabsOrientation="0"
               uiTabsFrontTabFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiTabsTabFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiTabsOutlineGlobalColour="0x00000000" uiTabsOutlineGlobalBackgroundColour="0x67000000"
               uiTabsOutlineTabColour="0xff303030" uiTabsTextTabColour="0xff909090"
               uiTabsFrontTabOutlineColour="0xff000000" uiTabsFrontTabTextColour="0xff000000"
               uiTabsAddTab="0" uiTabsRemoveTab="0" componentRectangle="344 8 1253 580"
               uiTabsCurrentTab="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiTabs">
      <uiTabsTab uiTabsTabIndex="0" uiTabsTabName="No FX" uiTabsTabContentBackgroundColour="ffffff00"
                 uiTabsTabBackgroundColour="ffd3d3d3" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="1" uiTabsTabName="EFX1" uiTabsTabContentBackgroundColour="ffffff00"
                 uiTabsTabBackgroundColour="ffd3d3d3" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="2" uiTabsTabName="EFX 2" uiTabsTabContentBackgroundColour="ffffff00"
                 uiTabsTabBackgroundColour="ffd3d3d3" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="3" uiTabsTabName="EFX 1&amp;2" uiTabsTabContentBackgroundColour="ffffff00"
                 uiTabsTabBackgroundColour="ffd3d3d3" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
    </component>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="248" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="0"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnMegaPanicReset" modulatorMin="0" serializeIndex="248"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="67">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="2304" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,123,0,F0 00 F7:CC,Direct,Direct,121,0,F0 00 F7:CC,Direct,Direct,120,0,F0 00 F7:SysEx,Direct,Direct,-1,-1,F0 7E 7F 09 01 F7:CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,127,F0 00 F7:CC,Direct,Direct,6,0,F0 00 F7:CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,127,F0 00 F7:CC,Direct,Direct,6,0,F0 00 F7:CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,127,F0 00 F7:CC,Direct,Direct,6,0,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Global Reset"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="MegaPanicReset" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ffff00ff"
               uiButtonColourOff="ffff00ff" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="0xff454545" uiButtonContent="" uiButtonConnectedLeft="0"
               uiButtonConnectedRight="0" uiButtonConnectedTop="0" uiButtonConnectedBottom="0"
               uiButtonRepeat="0" uiButtonRepeatRate="100" uiButtonTriggerOnMouseDown="0"
               componentInternalFunction="-- None" componentRectangle="160 16 82 51"
               uiType="uiButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="21" vstIndex="224" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="HQ_Parameter_Type" modulatorMin="0" serializeIndex="224"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,61,F0 00 F7:CC,Direct,Direct,98,21,F0 00 F7:CC,Direct,Direct,06,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Type (internal)"
               componentMouseCursor="2" componentGroupName="grp_HQ_Distortion_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="SOFT_DRIVE = 0&#10;WARM_DRIVE =1&#10;TUBE =2&#10;TUBE_OVERDRIVE =3&#10;OVERDRIVE =4&#10;CRUNCH =5&#10;DISTORTION =6&#10;BRIGHT_DISTORTION =7&#10;LIGHT_SATURATION =8&#10;SATURATION =9&#10;SATURATION_OUTPUT_STAGE =10&#10;LIGHT_FUZZ =11&#10;FUZZ =12&#10;FUZZY_DISTORTION =13&#10;CROSSOVER_DISTORTION =14&#10;MUFFLED_TUBE =15&#10;VALVE_DISTORTION =16&#10;LIGHT_CLIP =17&#10;DAMPED_SATURATION =18&#10;HARD_ROCK =19&#10;DIRTY_PEAKY =20&#10;MELLOW_FUZZ =21"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="328 24 151 34"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="5" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setDelayPresetEfx"
             name="Efx1_Delay_Preset" modulatorMin="0" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="5">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,88,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (S.7)"
               componentMouseCursor="2" componentGroupName="grp_1_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF&#10;mono1&#10;mono2&#10;stereo1&#10;stereo2&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="16 40 88 32"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="35" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Delay_On" modulatorMin="0" serializeIndex="35" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,89,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="ON/OFF"
               componentMouseCursor="2" componentGroupName="grp_1_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="1" uiButtonColourOn="ff00ff00"
               uiButtonColourOff="ffff0000" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="ff000000" uiButtonContent="OFF=0&#10;ON=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="16 80 88 43" uiType="uiButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="36" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Delay_Mode" modulatorMin="0" serializeIndex="36" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,90,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Mode"
               componentMouseCursor="2" componentGroupName="grp_1_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="0xff0000ff"
               uiButtonColourOff="ffffac00" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="0xff454545" uiButtonContent="mono=0&#10;stereo=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="16 128 88 54" uiType="uiButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="37" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Delay_PreLp" modulatorMin="0" serializeIndex="37"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,91,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="PreLP"
               componentMouseCursor="2" componentGroupName="grp_1_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="8 192 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_1_DelayControls" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-156"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Delay Controls (EFX1)"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="216 272 186 274"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentTabId="1" componentTabName="fxTabs" uiType="uiGroup"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="38" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Delay_Level" modulatorMin="0" serializeIndex="38"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,92,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Level"
               componentMouseCursor="2" componentGroupName="grp_1_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="64 192 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="39" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Delay_Time" modulatorMin="0" serializeIndex="39" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,93,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Time"
               componentMouseCursor="2" componentGroupName="grp_1_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="120 104 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="40" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Delay_Feedback" modulatorMin="0" serializeIndex="40"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,94,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Feedback"
               componentMouseCursor="2" componentGroupName="grp_1_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="120 192 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="41" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Delay_Hdamp" modulatorMin="0" serializeIndex="41"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,95,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="HDAMP"
               componentMouseCursor="2" componentGroupName="grp_1_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="120 16 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="249" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="MA_Volume_SysEx_std" modulatorMin="0" serializeIndex="249"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="7" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 7F 7F 04 01 00 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Master Volume (std. SysEx)"
               componentMouseCursor="2" componentGroupName="grp_0_Master" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="LinearHorizontal"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="127" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="104 32 148 62"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="250" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="MA_Tune_SysEx" modulatorMin="0" serializeIndex="250" TriggerModChangeMethodOnLoad="0"
             PauseMidiDuringModChangeOnLoad="1" modulatorValue="64">
    <midi midiMessageType="5" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="7" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula="F0 26 7B 0C 00 00 xx F7"/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Tune (SysEx)"
               componentMouseCursor="2" componentGroupName="grp_0_Master" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="64" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="0 104 115 69"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="251" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="MA_Portamento_Time" modulatorMin="0" serializeIndex="251"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="5" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Poramento Time"
               componentMouseCursor="2" componentGroupName="grp_0_Portamento"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="16 136 95 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="225" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="HQ_Parameter_InputHighPassCutOff" modulatorMin="0" serializeIndex="225"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,61,F0 00 F7:CC,Direct,Direct,98,16,F0 00 F7:CC,Direct,Direct,06,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Input high pass Cutoff"
               componentMouseCursor="2" componentGroupName="grp_HQ_Distortion_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="24 24 129 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="226" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="HQ_Parameter_InputLowPassCutOff" modulatorMin="0" serializeIndex="226"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,61,F0 00 F7:CC,Direct,Direct,98,19,F0 00 F7:CC,Direct,Direct,06,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Input low pass Cutoff"
               componentMouseCursor="2" componentGroupName="grp_HQ_Distortion_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="176 24 129 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="227" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="HQ_Paramter_FreqLow" modulatorMin="0" serializeIndex="227"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,61,F0 00 F7:CC,Direct,Direct,98,23,F0 00 F7:CC,Direct,Direct,06,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="PEQ Freq low"
               componentMouseCursor="2" componentGroupName="grp_HQ_Distortion_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="208 136 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="228" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="HQ_Parameter_GainLow_min" modulatorMin="0" serializeIndex="228"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,61,F0 00 F7:CC,Direct,Direct,98,24,F0 00 F7:CC,Direct,Direct,06,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="PEQ Gain low"
               componentMouseCursor="2" componentGroupName="grp_HQ_Distortion_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="176 208 74 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="229" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="HQ_Parameter_GainHigh_min" modulatorMin="0" serializeIndex="229"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,61,F0 00 F7:CC,Direct,Direct,98,27,F0 00 F7:CC,Direct,Direct,06,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="PEQ Gain high"
               componentMouseCursor="2" componentGroupName="grp_HQ_Distortion_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="64" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="16 208 78 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="230" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="HQ_Paramter_FreqHigh" modulatorMin="0" serializeIndex="230"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,61,F0 00 F7:CC,Direct,Direct,98,26,F0 00 F7:CC,Direct,Direct,06,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="PEQ Freq high"
               componentMouseCursor="2" componentGroupName="grp_HQ_Distortion_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="64" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="56 136 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="2" vstIndex="42" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_EQ_LowMidGain" modulatorMin="0" serializeIndex="42"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,115,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low-Mid band Gain"
               componentMouseCursor="2" componentGroupName="grp_1_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="-12dB=0&#10;0dB=64&#10;+12dB=127"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="112 264 88 32" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="2" vstIndex="43" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_EQ_HighMidGain" modulatorMin="0" serializeIndex="43"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,116,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="High-Mid band Gain"
               componentMouseCursor="2" componentGroupName="grp_1_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="-12dB=0&#10;0dB=64&#10;+12dB=127"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="208 264 88 32"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="2" vstIndex="44" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_EQ_HighGain" modulatorMin="0" serializeIndex="44"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,117,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="High band Gain"
               componentMouseCursor="2" componentGroupName="grp_1_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="-12dB=0&#10;0dB=64&#10;+12dB=127"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="304 264 88 32" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="45" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_EQ_LowMidFreq" modulatorMin="0" serializeIndex="45"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="24">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,119,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low-Mid band frequency"
               componentMouseCursor="2" componentGroupName="grp_1_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="104 176 88 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="46" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_EQ_HighMidFreq" modulatorMin="0" serializeIndex="46"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,120,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="High-Mid band frequency"
               componentMouseCursor="2" componentGroupName="grp_1_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="200 176 88 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="47" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_EQ_HighFreq" modulatorMin="0" serializeIndex="47"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,121,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="High band frequency"
               componentMouseCursor="2" componentGroupName="grp_1_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="296 176 88 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="48" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_EQ_LowMidQ" modulatorMin="0" serializeIndex="48" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,122,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low-Mid band Q"
               componentMouseCursor="2" componentGroupName="grp_1_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="304 8 88 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="49" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_EQ_HighMidQ" modulatorMin="0" serializeIndex="49"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,123,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="High-Mid band Q"
               componentMouseCursor="2" componentGroupName="grp_1_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="208 8 88 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_1_CompressorLimiter_Presets" modulatorVstExported="0"
             vstIndex="" PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-196"
               componentMouseCursor="2" componentGroupName="grp_1_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Presets (1.2)"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="96 24 247 97"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               uiType="uiGroup" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_01" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-37"
               componentMouseCursor="2" componentGroupName="grp_1_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;0.68;3"
               uiLabelText="0 = ~1.5KHz,...100=~6KHz, till 127 = OFF" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="120 136 65 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_02" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-37"
               componentMouseCursor="2" componentGroupName="grp_1_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;0.68;3"
               uiLabelText="0=left, till 127=right" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="16 128 61 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_03" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-37"
               componentMouseCursor="2" componentGroupName="grp_1_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;0.68;3"
               uiLabelText="0 = only Front, 64 = both, till 127 = only Rear"
               uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="16 232 64 30"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_04" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-37"
               componentMouseCursor="2" componentGroupName="grp_1_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;0.68;3"
               uiLabelText="0 = ~1.5KHz,...100=~6KHz, till 127 = OFF" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="1018 -23 88 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_05" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-37"
               componentMouseCursor="2" componentGroupName="grp_1_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;0.68;3"
               uiLabelText="0=~ &#8211;oo, 1=~ -42dB, 127=~ 0dB" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="112 232 68 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_06" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-37"
               componentMouseCursor="2" componentGroupName="grp_1_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;0.68;3"
               uiLabelText="0=~ &#8211;oo, 1=~ -42dB, 127=~ 0dB" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="118 328 64 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_07" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-48"
               componentMouseCursor="2" componentGroupName="grp_1_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0 = OFF, till 127 = ~300Hz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="16 328 65 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_08" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-48"
               componentMouseCursor="2" componentGroupName="grp_1_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=40Hz, till 127=1.5KHz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="8 232 85 30"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_09" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-48"
               componentMouseCursor="2" componentGroupName="grp_1_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=40Hz, till 127=2,5KHz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="104 232 85 30" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_10" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-48"
               componentMouseCursor="2" componentGroupName="grp_1_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=40Hz, till 127=10KHz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentTabId="0" componentTabName="fxTabs" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="200 232 85 30" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_11" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-48"
               componentMouseCursor="2" componentGroupName="grp_1_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=500Hz, til127=2KHz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="296 232 85 30"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_12" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-48"
               componentMouseCursor="2" componentGroupName="grp_1_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0:Q=1, 64:Q=2, 127:Q=20" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="208 64 85 30" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_13" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-134"
               componentMouseCursor="2" componentGroupName="grp_1_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0:Q=1, 64:Q=2, 127:Q=20" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="304 64 85 30"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_14" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-134"
               componentMouseCursor="2" componentGroupName="grp_1_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=1ms, till 127=30ms" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="104 88 65 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_15" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-134"
               componentMouseCursor="2" componentGroupName="grp_1_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0 to 127= 0 to 100%" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="187 88 69 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_16" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-134"
               componentMouseCursor="2" componentGroupName="grp_1_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0= no filter to 1.2kHz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="280 88 66 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_17" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-204"
               componentMouseCursor="2" componentGroupName="grp_1_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0= ~0,023 Hz, ...64=~0,89Hz, till 127= ~5,8 Hz (Tremolo: ~1Hz to ~20Hz)"
               uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="368 96 99 27"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_18" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-204"
               componentMouseCursor="2" componentGroupName="grp_1_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0 = triangle, till 127 = square" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="480 88 81 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_19" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-204"
               componentMouseCursor="2" componentGroupName="grp_1_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0 to 127 = 0 to 100 %" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="120 72 63 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_20" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-217"
               componentMouseCursor="2" componentGroupName="grp_1_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3"
               uiLabelText="0 to 127 = 0 to 574ms" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="120 160 63 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_21" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-217"
               componentMouseCursor="2" componentGroupName="grp_1_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3"
               uiLabelText="0=closed 0Hz, till 127=open8kHz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="96 168 67 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_hq_1" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-222"
               componentMouseCursor="2" componentGroupName="grp_HQ_Distortion_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0...64...127=-12dB...0...+12dB" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="40 280 72 23"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_hq_2" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-222"
               componentMouseCursor="2" componentGroupName="grp_HQ_Distortion_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0...64...127=-12dB...0...+12dB" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="200 280 65 21" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_22" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-48"
               componentMouseCursor="2" componentGroupName="grp_1_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=no resonance, till 127=max resonance" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="8 168 67 22"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_1_Insert_Controls" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-168"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Insert (MFX1) Chorus/Flanger/Phaser/Tremolo/Rotary Controls"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="624 8 618 261"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               uiType="uiGroup" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentTabName="fxTabs" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setModPresetEfx"
             name="Efx1_Mod_Preset" modulatorMin="0" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="24">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,48,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (1.5)"
               componentMouseCursor="2" componentGroupName="grp_1_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF&#10;Chorus Light 1&#10;Chorus Light 2&#10;Chorus Medium 1&#10;Chorus Medium 2&#10;Chorus Deep 1&#10;Chorus Deep 2&#10;Chorus Fast 1&#10;Chorus Fast 2&#10;Resonant Chorus&#10;Long Time Chorus&#10;Flange Light&#10;Flange Medium&#10;Flange Slow Deep&#10;Flange Deep&#10;Phaser Light&#10;Phaser Medium&#10;Phaser Slow Deep&#10;Phaser Fast&#10;Tremolo Slow&#10;Tremolo Medium 1&#10;Tremolo Medium 2&#10;Tremolo Fast&#10;Rotary Slow&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentTabId="0" componentTabName="fxTabs"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="8 120 90 36"
               uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="50" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Mod_Time" modulatorMin="0" serializeIndex="50" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,50,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="28" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3" componentVisibleName="Chorus/Flanging&#10;delay time"
               componentMouseCursor="2" componentGroupName="grp_1_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="96 16 85 79"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="51" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Mod_Feedback" modulatorMin="0" serializeIndex="51"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,51,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3" componentVisibleName="Chorus/Flanging feedback"
               componentMouseCursor="2" componentGroupName="grp_1_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="184 120 81 65" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="52" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Mod_Level" modulatorMin="0" serializeIndex="52" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,49,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Effect level"
               componentMouseCursor="2" componentGroupName="grp_1_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="192 192 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="53" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Mod_Rate" modulatorMin="0" serializeIndex="53" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,54,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Modulation rate"
               componentMouseCursor="2" componentGroupName="grp_1_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="376 32 84 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="54" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Mod_Depth" modulatorMin="0" serializeIndex="54" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,55,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Modulation depth"
               componentMouseCursor="2" componentGroupName="grp_1_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="96 120 84 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="55" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Mod_Shape" modulatorMin="0" serializeIndex="55" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,56,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3" componentVisibleName="Tremolo modulation shape"
               componentMouseCursor="2" componentGroupName="grp_1_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="464 32 117 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="56" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Mod_Filter" modulatorMin="0" serializeIndex="56" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,52,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="28" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3" componentVisibleName="Chorus/Flanging/Short-Delay&#10;high pass filter on input"
               componentMouseCursor="2" componentGroupName="grp_1_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="264 16 99 80"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="57" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Mod_Hdamp" modulatorMin="0" serializeIndex="57" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,53,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="28" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3" componentVisibleName="HDAMP&#10;high frequency filter on delay feedback"
               componentMouseCursor="2" componentGroupName="grp_1_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="168 16 106 79" uiType="uiSlider" componentTabName="fxTabs"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="58" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Mod_Speed" modulatorMin="0" serializeIndex="58" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,57,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Rotary Speed"
               componentMouseCursor="2" componentGroupName="grp_1_Insert_Controls_Rotary"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="slow&#10;fast"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="8 40 73 28"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_23" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="0=1ms, till 127=30ms"
               componentMouseCursor="2" componentGroupName="grp_1_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3"
               uiLabelText="0=off, till 127=100%" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="8 256 66 30"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_24" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="0=1ms, till 127=30ms"
               componentMouseCursor="2" componentGroupName="grp_1_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3"
               uiLabelText="0=OFF, 1 = -42dB till 127 = 0dB" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="78 80 58 28" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_25" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="0=1ms, till 127=30ms"
               componentMouseCursor="2" componentGroupName="grp_1_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3"
               uiLabelText="0 till 7 (0 to +42dB)" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="152 80 58 30"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_26" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3" componentVisibleName="0=1ms, till 127=30ms"
               componentMouseCursor="2" componentGroupName="grp_1_DistortionControls"
               componentGroupped="1" componentSnapSize="9" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="36.600000000000001"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="54" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3"
               uiLabelText="0=OFF, 1 = -42dB till 127 = 0dB" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="216 80 63 36" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_27" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="0=1ms, till 127=30ms"
               componentMouseCursor="2" componentGroupName="grp_1_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3"
               uiLabelText="0=closed 0Hz, till 127= open 24kHz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="16 232 67 26" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_1_DistortionControls" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-42"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Distortion Controls (EFX1)"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="583 273 290 265"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentTabId="1" componentTabName="fxTabs" uiType="uiGroup"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="59" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Dist_On" modulatorMin="0" serializeIndex="59" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,97,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="ON/OFF"
               componentMouseCursor="2" componentGroupName="grp_1_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="1" uiButtonColourOn="ff00ff00"
               uiButtonColourOff="ffff0000" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="ff000000" uiButtonContent="OFF=0&#10;ON=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="8 56 56 52" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="14" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setDistPresetEfx"
             name="Efx1_Dist_Preset" modulatorMin="0" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="14">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,96,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Presets (1.3)"
               componentMouseCursor="2" componentGroupName="grp_1_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF=0&#10;Tube Dist Low 1=1&#10;Tube Dist Low 2=2&#10;Tube Dist Mid 1=3&#10;Tube Dist Mid 2=4&#10;Tube Dist High 1=5&#10;Tube Dist High 2=6&#10;Smooth OD=7&#10;Distortion=8&#10;Crunch=9&#10;Fuzz=10&#10;Grunge=11&#10;Metal=12&#10;Mess=13&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="16 128 125 32"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="7" vstIndex="60" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Dist_Type" modulatorMin="0" serializeIndex="60" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,99,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Type"
               componentMouseCursor="2" componentGroupName="grp_1_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="Tube=0&#10;asymmetric parabolic1=1&#10;asymmetric parabolic2=2&#10;unknown=3&#10;unknown=4&#10;unknown=5&#10;unknown=6&#10;unknown=7"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="152 128 124 32"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="61" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Dist_Rc" modulatorMin="0" serializeIndex="61" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,104,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3" componentVisibleName="RC type low pass&#10;filer value"
               componentMouseCursor="2" componentGroupName="grp_1_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="184 176 107 58"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="62" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Dist_FilterReso" modulatorMin="0" serializeIndex="62"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,101,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low Pass Filter resonance"
               componentMouseCursor="2" componentGroupName="grp_1_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="96 176 101 57" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="63" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Dist_FilterFreq" modulatorMin="0" serializeIndex="63"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,100,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low Pass Filter frequency"
               componentMouseCursor="2" componentGroupName="grp_1_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="0 176 100 58"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="7" vstIndex="64" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Dist_Drive" modulatorMin="0" serializeIndex="64" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,103,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Drive"
               componentMouseCursor="2" componentGroupName="grp_1_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="7" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="144 24 69 61" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="65" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Dist_PostGain" modulatorMin="0" serializeIndex="65"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,102,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Post Gain"
               componentMouseCursor="2" componentGroupName="grp_1_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="208 24 85 61"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="66" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Dist_PreGain" modulatorMin="0" serializeIndex="66"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,98,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Pre Gain"
               componentMouseCursor="2" componentGroupName="grp_1_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="79 24 57 61" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_28" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-208"
               componentMouseCursor="2" componentGroupName="grp_1_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0 = no resonance, till 127 = max resonance" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="112 232 67 26"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_29" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-208"
               componentMouseCursor="2" componentGroupName="grp_1_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0 = closed 0Hz , till 127 = open 8kHz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="200 232 67 26" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_30" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-208"
               componentMouseCursor="2" componentGroupName="grp_1_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=fast attack (0.1ms), &#8230; 60=1ms, &#8230;100=10ms, till 127=slow attack (100ms)"
               uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentTabId="0" componentTabName="fxTabs" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="280 232 69 28" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_31" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-208"
               componentMouseCursor="2" componentGroupName="grp_1_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=fast release (10ms), &#8230; 60=100ms, &#8230; 100=1s, till 127=slow release (~5s)"
               uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="216 232 69 28" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentTabName="fxTabs" componentTabId="0"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_32" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-208"
               componentMouseCursor="2" componentGroupName="grp_1_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=-42.3, 1=-42dB, 2=-41.66dB, 126=-0.33dB, 127=0dB"
               uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentTabId="0" componentTabName="fxTabs" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="152 232 69 28" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_1_33" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-208"
               componentMouseCursor="2" componentGroupName="grp_1_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="127=1:128, 126=2:128 (1:64), 125=3:128, &#8230; 64=64:128 (1:2), &#8230; 0=1:1"
               uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="88 232 69 28" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentTabName="fxTabs" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="67" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Comp_Boost_Slider" modulatorMin="0" serializeIndex="67"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,70,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Boost"
               componentMouseCursor="2" componentGroupName="grp_1_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="16 112 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="68" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_EQ_LowGain_Slider" modulatorMin="0" serializeIndex="68"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,114,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low band Gain"
               componentMouseCursor="2" componentGroupName="grp_1_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="24 96 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="69" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_EQ_LowMidGain_Slider" modulatorMin="0" serializeIndex="69"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,115,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low-Mid band Gain"
               componentMouseCursor="2" componentGroupName="grp_1_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="112 96 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="70" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_EQ_HighMidGain_Slider" modulatorMin="0" serializeIndex="70"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,116,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="High-Mid band Gain"
               componentMouseCursor="2" componentGroupName="grp_1_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="208 96 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="71" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_EQ_HighGain_Slider" modulatorMin="0" serializeIndex="71"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,117,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="High band Gain"
               componentMouseCursor="2" componentGroupName="grp_1_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="304 96 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_2_GeneralControls" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-88"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="General/Mix Controls (EFX2)"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="8 104 203 442"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               uiType="uiGroup" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentTabName="fxTabs" componentTabId="2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="84" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Mix_FrontRear" modulatorMin="0" serializeIndex="84"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,44,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Output Fr/Re Mix"
               componentMouseCursor="2" componentGroupName="grp_2_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="LinearVertical"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="64" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="0 160 95 73"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="85" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Mix_Panning" modulatorMin="0" serializeIndex="85"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,43,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Output panning"
               componentMouseCursor="2" componentGroupName="grp_2_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="LinearHorizontal"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="64" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="8 80 79 54" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="86" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Mix_Gain" modulatorMin="0" serializeIndex="86" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,33,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Input Gain"
               componentMouseCursor="2" componentGroupName="grp_2_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="16 16 61 57"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="87" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Mix_LoCutFreq" modulatorMin="0" serializeIndex="87"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,34,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Lo-cut filter freq"
               componentMouseCursor="2" componentGroupName="grp_2_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="0 264 97 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="88" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Mix_HiCutFreq" modulatorMin="0" serializeIndex="88"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,35,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Hi-cut filter freq"
               componentMouseCursor="2" componentGroupName="grp_2_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="96 72 108 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="89" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Mix_Reverb" modulatorMin="0" serializeIndex="89" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,45,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Reverb"
               componentMouseCursor="2" componentGroupName="grp_2_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="96 168 108 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="90" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Mix_Chorus" modulatorMin="0" serializeIndex="90" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,46,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Chorus"
               componentMouseCursor="2" componentGroupName="grp_2_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="96 264 108 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="14" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setAmpPresetEfx"
             name="Efx2_Mix_Preset" modulatorMin="0" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="14">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,32,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Amp Model Preset (S.6)"
               componentMouseCursor="2" componentGroupName="grp_2_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF=0&#10;JC Clean=1&#10;Acoustic=2&#10;Black Panel=3&#10;Brit Combo=4&#10;Tweed=5&#10;Stack Classic=6&#10;Metal=7&#10;R-Fler=8&#10;Dyna Amp=9&#10;Crunch=10&#10;VO Drive=11&#10;BG Lead=12&#10;MS Higain=13&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentRectangle="96 40 96 32" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiCombo"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_01" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-48"
               componentMouseCursor="2" componentGroupName="grp_2_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0 = ~1.5KHz,...100=~6KHz, till 127 = OFF" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="120 136 65 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_02" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-48"
               componentMouseCursor="2" componentGroupName="grp_2_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=left, till 127=right" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="16 128 61 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_03" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-48"
               componentMouseCursor="2" componentGroupName="grp_2_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0 = only Front, 64 = both, till 127 = only Rear"
               uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="16 232 64 30"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_04" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-48"
               componentMouseCursor="2" componentGroupName="grp_2_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0 = ~1.5KHz,...100=~6KHz, till 127 = OFF" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="1018 -23 88 24" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentTabName="fxTabs" componentTabId="0"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_05" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-48"
               componentMouseCursor="2" componentGroupName="grp_2_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=~ &#8211;oo, 1=~ -42dB, 127=~ 0dB" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="112 232 68 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_06" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-48"
               componentMouseCursor="2" componentGroupName="grp_2_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=~ &#8211;oo, 1=~ -42dB, 127=~ 0dB" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="118 328 64 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_07" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-48"
               componentMouseCursor="2" componentGroupName="grp_2_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0 = OFF, till 127 = ~300Hz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="16 328 65 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_2_Equalizer_Controls" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-27"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Equalizer Controls EFX2 (3B)"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="216 8 404 261"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentLayerUid="e4c3411959000000feffffffffffffff" uiType="uiGroup"
               componentTabName="fxTabs" componentTabId="2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="14" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setEQPresetEfx"
             name="Efx2_EQ_Preset" modulatorMin="0" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="14">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,112,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (1.4)"
               componentMouseCursor="2" componentGroupName="grp_2_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="9" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="Flat=0&#10;JC Clean=1&#10;Acoustic=2&#10;Black Panel=3&#10;Brit Combo=4&#10;Tweed=5&#10;Stack Classic=6&#10;Metal=7&#10;R-Fler=8&#10;Dyna Amp=9&#10;Crunch=10&#10;VO Drive=11&#10;BG Lead=12&#10;MS HiGain=13&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="104 48 88 32" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="91" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_EQ_On" modulatorMin="0" serializeIndex="91" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,113,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="ON/OFF"
               componentMouseCursor="2" componentGroupName="grp_2_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="1" uiButtonColourOn="ff00ff00"
               uiButtonColourOff="ffff0000" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="ff000000" uiButtonContent="OFF=0&#10;ON=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="16 16 73 67" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="2" vstIndex="92" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_EQ_LowGain" modulatorMin="0" serializeIndex="92" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,114,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low band Gain"
               componentMouseCursor="2" componentGroupName="grp_2_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="-12dB=0&#10;0dB=64&#10;+12dB=127"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="16 264 88 32" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="93" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_EQ_LowFreq" modulatorMin="0" serializeIndex="93" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="40">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,118,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low band frequency"
               componentMouseCursor="2" componentGroupName="grp_2_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="8 176 88 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="2" vstIndex="94" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_EQ_LowMidGain" modulatorMin="0" serializeIndex="94"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,115,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low-Mid band Gain"
               componentMouseCursor="2" componentGroupName="grp_2_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="-12dB=0&#10;0dB=64&#10;+12dB=127"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="112 264 88 32"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="2" vstIndex="95" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_EQ_HighMidGain" modulatorMin="0" serializeIndex="95"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,116,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="High-Mid band Gain"
               componentMouseCursor="2" componentGroupName="grp_2_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="-12dB=0&#10;0dB=64&#10;+12dB=127"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="208 264 88 32" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="2" vstIndex="96" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_EQ_HighGain" modulatorMin="0" serializeIndex="96"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,117,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="High band Gain"
               componentMouseCursor="2" componentGroupName="grp_2_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="-12dB=0&#10;0dB=64&#10;+12dB=127"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="304 264 88 32"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="97" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_EQ_LowMidFreq" modulatorMin="0" serializeIndex="97"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="24">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,119,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low-Mid band frequency"
               componentMouseCursor="2" componentGroupName="grp_2_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="104 176 88 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="98" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_EQ_HighMidFreq" modulatorMin="0" serializeIndex="98"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,120,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="High-Mid band frequency"
               componentMouseCursor="2" componentGroupName="grp_2_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="200 176 88 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="99" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_EQ_HighFreq" modulatorMin="0" serializeIndex="99"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,121,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="High band frequency"
               componentMouseCursor="2" componentGroupName="grp_2_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="296 176 88 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="100" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_EQ_LowMidQ" modulatorMin="0" serializeIndex="100"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,122,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low-Mid band Q"
               componentMouseCursor="2" componentGroupName="grp_2_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="304 8 88 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="101" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_EQ_HighMidQ" modulatorMin="0" serializeIndex="101"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,123,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="High-Mid band Q"
               componentMouseCursor="2" componentGroupName="grp_2_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="208 8 88 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_08" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-37"
               componentMouseCursor="2" componentGroupName="grp_2_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;0.68;3"
               uiLabelText="0=40Hz, till 127=1.5KHz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="8 232 85 30" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_09" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-37"
               componentMouseCursor="2" componentGroupName="grp_2_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;0.68;3"
               uiLabelText="0=40Hz, till 127=2,5KHz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="104 232 85 30"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_10" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-37"
               componentMouseCursor="2" componentGroupName="grp_2_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;0.68;3"
               uiLabelText="0=40Hz, till 127=10KHz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="200 232 85 30" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_11" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-37"
               componentMouseCursor="2" componentGroupName="grp_2_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;0.68;3"
               uiLabelText="0=500Hz, til127=2KHz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="296 232 85 30"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_12" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-37"
               componentMouseCursor="2" componentGroupName="grp_2_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;0.68;3"
               uiLabelText="0:Q=1, 64:Q=2, 127:Q=20" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="208 64 85 30" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_13" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-37"
               componentMouseCursor="2" componentGroupName="grp_2_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;0.68;3"
               uiLabelText="0:Q=1, 64:Q=2, 127:Q=20" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="304 64 85 30"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="102" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_EQ_LowGain_Slider" modulatorMin="0" serializeIndex="102"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,114,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low band Gain"
               componentMouseCursor="2" componentGroupName="grp_2_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="24 96 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="103" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_EQ_LowMidGain_Slider" modulatorMin="0" serializeIndex="103"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,115,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low-Mid band Gain"
               componentMouseCursor="2" componentGroupName="grp_2_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="112 96 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="104" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_EQ_HighMidGain_Slider" modulatorMin="0" serializeIndex="104"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,116,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="High-Mid band Gain"
               componentMouseCursor="2" componentGroupName="grp_2_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="208 96 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="105" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_EQ_HighGain_Slider" modulatorMin="0" serializeIndex="105"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,117,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="High band Gain"
               componentMouseCursor="2" componentGroupName="grp_2_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="304 96 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_2_Insert_Controls" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-168"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Insert (MFX2) Chorus/Flanger/Phaser/Tremolo/Rotary Controls"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="624 8 618 261"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentTabId="2" componentTabName="fxTabs" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiGroup"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setModPresetEfx"
             name="Efx2_Mod_Preset" modulatorMin="0" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="24">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,48,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (1.5)"
               componentMouseCursor="2" componentGroupName="grp_2_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF&#10;Chorus Light 1&#10;Chorus Light 2&#10;Chorus Medium 1&#10;Chorus Medium 2&#10;Chorus Deep 1&#10;Chorus Deep 2&#10;Chorus Fast 1&#10;Chorus Fast 2&#10;Resonant Chorus&#10;Long Time Chorus&#10;Flange Light&#10;Flange Medium&#10;Flange Slow Deep&#10;Flange Deep&#10;Phaser Light&#10;Phaser Medium&#10;Phaser Slow Deep&#10;Phaser Fast&#10;Tremolo Slow&#10;Tremolo Medium 1&#10;Tremolo Medium 2&#10;Tremolo Fast&#10;Rotary Slow&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="8 120 90 36"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentTabName="fxTabs"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="106" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Mod_Time" modulatorMin="0" serializeIndex="106" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,50,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="28" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3" componentVisibleName="Chorus/Flanging&#10;delay time"
               componentMouseCursor="2" componentGroupName="grp_2_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="96 16 85 79" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="107" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Mod_Feedback" modulatorMin="0" serializeIndex="107"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,51,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3" componentVisibleName="Chorus/Flanging feedback"
               componentMouseCursor="2" componentGroupName="grp_2_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="184 120 81 65"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="108" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Mod_Level" modulatorMin="0" serializeIndex="108" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,49,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Effect level"
               componentMouseCursor="2" componentGroupName="grp_2_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="192 192 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="109" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Mod_Rate" modulatorMin="0" serializeIndex="109" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,54,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Modulation rate"
               componentMouseCursor="2" componentGroupName="grp_2_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="376 32 84 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="110" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Mod_Depth" modulatorMin="0" serializeIndex="110" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,55,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Modulation depth"
               componentMouseCursor="2" componentGroupName="grp_2_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="96 120 84 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="111" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Mod_Shape" modulatorMin="0" serializeIndex="111" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,56,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3" componentVisibleName="Tremolo modulation shape"
               componentMouseCursor="2" componentGroupName="grp_2_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="464 32 117 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="112" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Mod_Filter" modulatorMin="0" serializeIndex="112"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,52,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="28" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3" componentVisibleName="Chorus/Flanging/Short-Delay&#10;high pass filter on input"
               componentMouseCursor="2" componentGroupName="grp_2_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="264 16 99 80" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="113" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Mod_Hdamp" modulatorMin="0" serializeIndex="113" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,53,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="28" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3" componentVisibleName="HDAMP&#10;high frequency filter on delay feedback"
               componentMouseCursor="2" componentGroupName="grp_2_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="0" componentTabName="fxTabs"
               uiType="uiSlider" componentRectangle="168 16 106 79" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="114" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Mod_Speed" modulatorMin="0" serializeIndex="114" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,57,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Rotary Speed"
               componentMouseCursor="2" componentGroupName="grp_2_Insert_Controls_Rotary"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="slow&#10;fast"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="8 40 73 28" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_14" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="0=1ms, till 127=30ms"
               componentMouseCursor="2" componentGroupName="grp_2_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3"
               uiLabelText="0=1ms, till 127=30ms" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="104 88 65 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_15" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="0=1ms, till 127=30ms"
               componentMouseCursor="2" componentGroupName="grp_2_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3"
               uiLabelText="0 to 127= 0 to 100%" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="187 88 69 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_16" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="0=1ms, till 127=30ms"
               componentMouseCursor="2" componentGroupName="grp_2_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3"
               uiLabelText="0= no filter to 1.2kHz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="280 88 66 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_17" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3" componentVisibleName="0=1ms, till 127=30ms"
               componentMouseCursor="2" componentGroupName="grp_2_Insert_Controls"
               componentGroupped="1" componentSnapSize="9" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="36.600000000000001"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="54" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3"
               uiLabelText="0= ~0,023 Hz, ...64=~0,89Hz, till 127= ~5,8 Hz (Tremolo: ~1Hz to ~20Hz)"
               uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="368 96 99 27"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_18" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="0=1ms, till 127=30ms"
               componentMouseCursor="2" componentGroupName="grp_2_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3"
               uiLabelText="0 = triangle, till 127 = square" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="480 88 81 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_2_DelayControls" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-156"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Delay Controls (EFX2)"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="216 272 186 274"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentLayerUid="e4c3411959000000feffffffffffffff" uiType="uiGroup"
               componentTabName="fxTabs" componentTabId="2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="5" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setDelayPresetEfx"
             name="Efx2_Delay_Preset" modulatorMin="0" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="5">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,88,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (S.7)"
               componentMouseCursor="2" componentGroupName="grp_2_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF&#10;mono1&#10;mono2&#10;stereo1&#10;stereo2&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="16 40 88 32" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="115" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Delay_On" modulatorMin="0" serializeIndex="115" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,89,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="ON/OFF"
               componentMouseCursor="2" componentGroupName="grp_2_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="1" uiButtonColourOn="ff00ff00"
               uiButtonColourOff="ffff0000" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="ff000000" uiButtonContent="OFF=0&#10;ON=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="16 80 88 43" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="116" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Delay_Mode" modulatorMin="0" serializeIndex="116"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,90,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Mode"
               componentMouseCursor="2" componentGroupName="grp_2_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="0xff0000ff"
               uiButtonColourOff="ffffac00" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="0xff454545" uiButtonContent="mono=0&#10;stereo=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="16 128 88 54" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="117" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Delay_PreLp" modulatorMin="0" serializeIndex="117"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,91,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="PreLP"
               componentMouseCursor="2" componentGroupName="grp_2_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="8 192 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="118" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Delay_Level" modulatorMin="0" serializeIndex="118"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,92,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Level"
               componentMouseCursor="2" componentGroupName="grp_2_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="64 192 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="119" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Delay_Time" modulatorMin="0" serializeIndex="119"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,93,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Time"
               componentMouseCursor="2" componentGroupName="grp_2_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="120 104 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="120" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Delay_Feedback" modulatorMin="0" serializeIndex="120"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,94,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Feedback"
               componentMouseCursor="2" componentGroupName="grp_2_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="120 192 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="121" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Delay_Hdamp" modulatorMin="0" serializeIndex="121"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,95,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="HDAMP"
               componentMouseCursor="2" componentGroupName="grp_2_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="120 16 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_19" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-217"
               componentMouseCursor="2" componentGroupName="grp_2_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3"
               uiLabelText="0 to 127 = 0 to 100 %" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="120 72 63 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_20" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-217"
               componentMouseCursor="2" componentGroupName="grp_2_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3"
               uiLabelText="0 to 127 = 0 to 574ms" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="120 160 63 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_2_WahControls" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-100"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Wah-Wah Controls (EFX2)"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="408 272 169 277"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentLayerUid="e4c3411959000000feffffffffffffff" uiType="uiGroup"
               componentTabName="fxTabs" componentTabId="2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="122" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Wah_Resonance" modulatorMin="0" serializeIndex="122"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,83,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="resonance"
               componentMouseCursor="2" componentGroupName="grp_2_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="8 104 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="123" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Wah_Type" modulatorMin="0" serializeIndex="123" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,81,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Type"
               componentMouseCursor="2" componentGroupName="grp_2_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ffffff00"
               uiButtonColourOff="ffffac00" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="0xff454545" uiButtonContent="low pass=0&#10;band pass=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="80 216 81 46" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="6" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setWahPresetEfx"
             name="Efx2_Wah_Preset" modulatorMin="0" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="6">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,80,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (S.5)"
               componentMouseCursor="2" componentGroupName="grp_2_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF=0&#10;Auto-Wah 1&#10;Auto-Wah 2&#10;Auto-Wah 3&#10;Wah-Wah 1&#10;Wah-Wah 2&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="8 56 72 33" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="124" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Wah_Position" modulatorMin="0" serializeIndex="124"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,82,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="38" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="frequency&#10;Pedal Position"
               componentMouseCursor="2" componentGroupName="grp_2_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="88 72 86 97"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="125" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Wah_Sensitivity" modulatorMin="0" serializeIndex="125"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,84,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="sensitivity"
               componentMouseCursor="2" componentGroupName="grp_2_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="8 200 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_21" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-204"
               componentMouseCursor="2" componentGroupName="grp_2_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=closed 0Hz, till 127=open8kHz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="96 168 67 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_22" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-204"
               componentMouseCursor="2" componentGroupName="grp_2_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=no resonance, till 127=max resonance" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="8 168 67 22"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_23" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-204"
               componentMouseCursor="2" componentGroupName="grp_2_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=off, till 127=100%" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="8 256 66 30" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_2_DistortionControls" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-42"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Distortion Controls (EFX2)"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="583 273 290 265"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentLayerUid="e4c3411959000000feffffffffffffff" uiType="uiGroup"
               componentTabName="fxTabs" componentTabId="2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="126" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Dist_On" modulatorMin="0" serializeIndex="126" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,97,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="ON/OFF"
               componentMouseCursor="2" componentGroupName="grp_2_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="1" uiButtonColourOn="ff00ff00"
               uiButtonColourOff="ffff0000" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="ff000000" uiButtonContent="OFF=0&#10;ON=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="8 56 56 52" uiType="uiButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="127" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Dist_Rc" modulatorMin="0" serializeIndex="127" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,104,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3" componentVisibleName="RC type low pass&#10;filer value"
               componentMouseCursor="2" componentGroupName="grp_2_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="184 176 107 58" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="128" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Dist_FilterReso" modulatorMin="0" serializeIndex="128"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,101,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low Pass Filter resonance"
               componentMouseCursor="2" componentGroupName="grp_2_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="96 176 101 57"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="129" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Dist_FilterFreq" modulatorMin="0" serializeIndex="129"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,100,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low Pass Filter frequency"
               componentMouseCursor="2" componentGroupName="grp_2_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="0 176 100 58" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="7" vstIndex="130" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Dist_Drive" modulatorMin="0" serializeIndex="130"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,103,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Drive"
               componentMouseCursor="2" componentGroupName="grp_2_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="7" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="144 24 69 61"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="131" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Dist_PostGain" modulatorMin="0" serializeIndex="131"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,102,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Post Gain"
               componentMouseCursor="2" componentGroupName="grp_2_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="208 24 85 61" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="132" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Dist_PreGain" modulatorMin="0" serializeIndex="132"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,98,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Pre Gain"
               componentMouseCursor="2" componentGroupName="grp_2_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="79 24 57 61"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_24" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-208"
               componentMouseCursor="2" componentGroupName="grp_2_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=OFF, 1 = -42dB till 127 = 0dB" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="78 80 58 28" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_25" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-208"
               componentMouseCursor="2" componentGroupName="grp_2_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0 till 7 (0 to +42dB)" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="152 80 58 30"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_26" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-208"
               componentMouseCursor="2" componentGroupName="grp_2_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=OFF, 1 = -42dB till 127 = 0dB" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="216 80 67 39" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentTabName="fxTabs" componentTabId="0"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_27" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-208"
               componentMouseCursor="2" componentGroupName="grp_2_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=closed 0Hz, till 127= open 24kHz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentTabId="0" componentTabName="fxTabs" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="16 232 67 26" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_28" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-208"
               componentMouseCursor="2" componentGroupName="grp_2_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0 = no resonance, till 127 = max resonance" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="112 232 67 26" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentTabName="fxTabs" componentTabId="0"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_29" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-208"
               componentMouseCursor="2" componentGroupName="grp_2_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0 = closed 0Hz , till 127 = open 8kHz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentTabId="0" componentTabName="fxTabs" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="200 232 67 26" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="14" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setDistPresetEfx"
             name="Efx2_Dist_Preset" modulatorMin="0" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="14">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,96,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Presets (1.3)"
               componentMouseCursor="2" componentGroupName="grp_2_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF=0&#10;Tube Dist Low 1=1&#10;Tube Dist Low 2=2&#10;Tube Dist Mid 1=3&#10;Tube Dist Mid 2=4&#10;Tube Dist High 1=5&#10;Tube Dist High 2=6&#10;Smooth OD=7&#10;Distortion=8&#10;Crunch=9&#10;Fuzz=10&#10;Grunge=11&#10;Metal=12&#10;Mess=13&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="16 128 125 32" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="7" vstIndex="133" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Dist_Type" modulatorMin="0" serializeIndex="133" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,99,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Type"
               componentMouseCursor="2" componentGroupName="grp_2_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="Tube=0&#10;asymmetric parabolic1=1&#10;asymmetric parabolic2=2&#10;unknown=3&#10;unknown=4&#10;unknown=5&#10;unknown=6&#10;unknown=7"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="152 128 124 32" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_2_Compressor-Limiter_Controls" modulatorVstExported="0"
             vstIndex="" PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-69"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Compressor/Limiter Controls (EFX2)"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="880 272 358 269"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               uiType="uiGroup" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentTabName="fxTabs" componentTabId="2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="134" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Comp_On" modulatorMin="0" serializeIndex="134" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,65,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="ON/OFF"
               componentMouseCursor="2" componentGroupName="grp_2_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="1" uiButtonColourOn="ff00ff00"
               uiButtonColourOff="ffff0000" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="ff000000" uiButtonContent="OFF=0&#10;ON=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="8 16 73 56" uiType="uiButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="135" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Comp_Attack" modulatorMin="0" serializeIndex="135"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,66,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Attack time"
               componentMouseCursor="2" componentGroupName="grp_2_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="280 160 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="136" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Comp_Release" modulatorMin="0" serializeIndex="136"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,67,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Release time"
               componentMouseCursor="2" componentGroupName="grp_2_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="216 160 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="137" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Comp_Threshold" modulatorMin="0" serializeIndex="137"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,68,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Threshold"
               componentMouseCursor="2" componentGroupName="grp_2_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="152 160 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="138" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Comp_Ratio" modulatorMin="0" serializeIndex="138"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,69,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Ratio"
               componentMouseCursor="2" componentGroupName="grp_2_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="88 160 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="5" vstIndex="139" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Comp_Boost" modulatorMin="0" serializeIndex="139"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,70,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Boost"
               componentMouseCursor="2" componentGroupName="grp_2_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="x1=0&#10;x1.5=24&#10;x2=32&#10;x3=48&#10;x4=64&#10;x8=127"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="8 72 76 39" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="140" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Comp_Knee" modulatorMin="0" serializeIndex="140" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,71,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Knee"
               componentMouseCursor="2" componentGroupName="grp_2_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="1" uiButtonColourOn="ffffff00"
               uiButtonColourOff="ffffac00" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="0xff454545" uiButtonContent="Hard Knee=0&#10;Soft Knee=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="8 184 73 72" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiButton"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_30" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-134"
               componentMouseCursor="2" componentGroupName="grp_2_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=fast attack (0.1ms), &#8230; 60=1ms, &#8230;100=10ms, till 127=slow attack (100ms)"
               uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="280 232 69 28" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_31" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-134"
               componentMouseCursor="2" componentGroupName="grp_2_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=fast release (10ms), &#8230; 60=100ms, &#8230; 100=1s, till 127=slow release (~5s)"
               uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="216 232 69 28"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_32" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-134"
               componentMouseCursor="2" componentGroupName="grp_2_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=-42.3, 1=-42dB, 2=-41.66dB, 126=-0.33dB, 127=0dB"
               uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="152 232 69 28" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_2_33" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-134"
               componentMouseCursor="2" componentGroupName="grp_2_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="127=1:128, 126=2:128 (1:64), 125=3:128, &#8230; 64=64:128 (1:2), &#8230; 0=1:1"
               uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="88 232 69 28"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="141" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Comp_Boost_Slider" modulatorMin="0" serializeIndex="141"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,70,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Boost"
               componentMouseCursor="2" componentGroupName="grp_2_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="16 112 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_2_CompressorLimiter_Presets" modulatorVstExported="0"
             vstIndex="" PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-196"
               componentMouseCursor="2" componentGroupName="grp_2_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Presets (1.2)"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="ffc2c2c2" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="96 24 247 97"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentLayerUid="e4c3411959000000feffffffffffffff" uiType="uiGroup"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="9" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setCompPresetEfx"
             name="Efx2_CompLimit_Preset" modulatorMin="0" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="9">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,64,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Compressor/Limiter"
               componentMouseCursor="2" componentGroupName="grp_2_CompressorLimiter_Presets"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="No Compression=0&#10;Compression -18dB (2:1)=1&#10;Compression -15dB (3:1)=2&#10;Compression -18dB (5:1)=3&#10;Compression -21dB (7:1)=4&#10;Compression -24dB (12:1)=5&#10;Limiter -6dB=6&#10;Limiter -12dB=7&#10;Limiter -18dB=8&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="8 40 222 45"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_3_GeneralControls" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-88"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="General/Mix Controls (EFX1&amp;2)"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="8 104 203 442"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentTabId="3" componentTabName="fxTabs" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiGroup"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="14" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setAmpPresetEfx"
             name="Efx3_Mix_Preset" modulatorMin="0" midiMessageType="9" TriggerModChangeMethodOnLoad="0"
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="14">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,32,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Amp Model Preset (S.6)"
               componentMouseCursor="2" componentGroupName="grp_3_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF=0&#10;JC Clean=1&#10;Acoustic=2&#10;Black Panel=3&#10;Brit Combo=4&#10;Tweed=5&#10;Stack Classic=6&#10;Metal=7&#10;R-Fler=8&#10;Dyna Amp=9&#10;Crunch=10&#10;VO Drive=11&#10;BG Lead=12&#10;MS Higain=13&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="96 40 96 32"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="154" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Mix_Chorus" modulatorMin="0" midiMessageType="9" serializeIndex="154"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,46,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Chorus"
               componentMouseCursor="2" componentGroupName="grp_3_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="96 264 108 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="155" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Mix_LoCutFreq" modulatorMin="0" midiMessageType="9"
             serializeIndex="155" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,34,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Lo-cut filter freq"
               componentMouseCursor="2" componentGroupName="grp_3_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="0 264 97 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="156" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Mix_Reverb" modulatorMin="0" midiMessageType="9" serializeIndex="156"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,45,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Reverb"
               componentMouseCursor="2" componentGroupName="grp_3_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="96 168 108 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="157" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Mix_FrontRear" modulatorMin="0" midiMessageType="9"
             serializeIndex="157" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,44,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Output Fr/Re Mix"
               componentMouseCursor="2" componentGroupName="grp_3_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="LinearVertical"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="64" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="0 160 95 73" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="158" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Mix_HiCutFreq" modulatorMin="0" midiMessageType="9"
             serializeIndex="158" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,35,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Hi-cut filter freq"
               componentMouseCursor="2" componentGroupName="grp_3_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="96 72 108 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="159" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Mix_Panning" modulatorMin="0" midiMessageType="9"
             serializeIndex="159" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,43,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Output panning"
               componentMouseCursor="2" componentGroupName="grp_3_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="LinearHorizontal"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="64" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="8 80 79 54"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="160" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Mix_Gain" modulatorMin="0" midiMessageType="9" serializeIndex="160"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,33,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Input Gain"
               componentMouseCursor="2" componentGroupName="grp_3_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="16 16 61 57" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_01" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-48"
               componentMouseCursor="2" componentGroupName="grp_3_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0 = ~1.5KHz,...100=~6KHz, till 127 = OFF" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="120 136 65 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_02" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-48"
               componentMouseCursor="2" componentGroupName="grp_3_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=left, till 127=right" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="16 128 61 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_03" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-48"
               componentMouseCursor="2" componentGroupName="grp_3_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0 = only Front, 64 = both, till 127 = only Rear"
               uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="16 232 64 30" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_04" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-48"
               componentMouseCursor="2" componentGroupName="grp_3_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0 = ~1.5KHz,...100=~6KHz, till 127 = OFF" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentTabId="0" componentTabName="fxTabs" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="1018 -23 88 24" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_05" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-48"
               componentMouseCursor="2" componentGroupName="grp_3_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=~ &#8211;oo, 1=~ -42dB, 127=~ 0dB" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="112 232 68 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_06" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-48"
               componentMouseCursor="2" componentGroupName="grp_3_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=~ &#8211;oo, 1=~ -42dB, 127=~ 0dB" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="118 328 64 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_07" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-48"
               componentMouseCursor="2" componentGroupName="grp_3_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0 = OFF, till 127 = ~300Hz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="16 328 65 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_3_Equalizer_Controls" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-27"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Equalizer Controls EFX1&amp;2 (3C)"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="216 8 404 261"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentTabId="3" componentTabName="fxTabs" uiType="uiGroup"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="161" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_EQ_On" modulatorMin="0" midiMessageType="9" serializeIndex="161"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,113,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="ON/OFF"
               componentMouseCursor="2" componentGroupName="grp_3_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="1" uiButtonColourOn="ff00ff00"
               uiButtonColourOff="ffff0000" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="ff000000" uiButtonContent="OFF=0&#10;ON=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="16 16 73 67" uiType="uiButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="14" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setEQPresetEfx"
             name="Efx3_EQ_Preset" modulatorMin="0" midiMessageType="9" TriggerModChangeMethodOnLoad="0"
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="14">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,112,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (1.4)"
               componentMouseCursor="2" componentGroupName="grp_3_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="9" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="Flat=0&#10;JC Clean=1&#10;Acoustic=2&#10;Black Panel=3&#10;Brit Combo=4&#10;Tweed=5&#10;Stack Classic=6&#10;Metal=7&#10;R-Fler=8&#10;Dyna Amp=9&#10;Crunch=10&#10;VO Drive=11&#10;BG Lead=12&#10;MS HiGain=13&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="104 48 88 32"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="162" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_EQ_HighFreq" modulatorMin="0" midiMessageType="9"
             serializeIndex="162" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,121,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="High band frequency"
               componentMouseCursor="2" componentGroupName="grp_3_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="296 176 88 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="163" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_EQ_HighMidFreq" modulatorMin="0" midiMessageType="9"
             serializeIndex="163" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,120,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="High-Mid band frequency"
               componentMouseCursor="2" componentGroupName="grp_3_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="200 176 88 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="164" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_EQ_LowMidFreq" modulatorMin="0" midiMessageType="9"
             serializeIndex="164" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="24">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,119,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low-Mid band frequency"
               componentMouseCursor="2" componentGroupName="grp_3_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="104 176 88 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="165" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_EQ_LowFreq" modulatorMin="0" midiMessageType="9" serializeIndex="165"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="40">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,118,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low band frequency"
               componentMouseCursor="2" componentGroupName="grp_3_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="8 176 88 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="166" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_EQ_LowGain_Slider" modulatorMin="0" midiMessageType="9"
             serializeIndex="166" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,114,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low band Gain"
               componentMouseCursor="2" componentGroupName="grp_3_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="24 96 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="2" vstIndex="167" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_EQ_HighGain" modulatorMin="0" midiMessageType="9"
             serializeIndex="167" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,117,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="High band Gain"
               componentMouseCursor="2" componentGroupName="grp_3_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="-12dB=0&#10;0dB=64&#10;+12dB=127"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="304 264 88 32" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="2" vstIndex="168" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_EQ_HighMidGain" modulatorMin="0" midiMessageType="9"
             serializeIndex="168" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,116,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="High-Mid band Gain"
               componentMouseCursor="2" componentGroupName="grp_3_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="-12dB=0&#10;0dB=64&#10;+12dB=127"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="208 264 88 32"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="2" vstIndex="169" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_EQ_LowMidGain" modulatorMin="0" midiMessageType="9"
             serializeIndex="169" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,115,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low-Mid band Gain"
               componentMouseCursor="2" componentGroupName="grp_3_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="-12dB=0&#10;0dB=64&#10;+12dB=127"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="112 264 88 32" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="2" vstIndex="170" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_EQ_LowGain" modulatorMin="0" midiMessageType="9" serializeIndex="170"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,114,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low band Gain"
               componentMouseCursor="2" componentGroupName="grp_3_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="-12dB=0&#10;0dB=64&#10;+12dB=127"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="16 264 88 32"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="171" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_EQ_LowMidQ" modulatorMin="0" midiMessageType="9" serializeIndex="171"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,122,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low-Mid band Q"
               componentMouseCursor="2" componentGroupName="grp_3_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="304 8 88 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="172" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_EQ_HighMidQ" modulatorMin="0" midiMessageType="9"
             serializeIndex="172" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,123,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="High-Mid band Q"
               componentMouseCursor="2" componentGroupName="grp_3_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="208 8 88 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="173" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_EQ_HighGain_Slider" modulatorMin="0" midiMessageType="9"
             serializeIndex="173" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,114,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="High band Gain"
               componentMouseCursor="2" componentGroupName="grp_3_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="304 96 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="174" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_EQ_HighMidGain_Slider" modulatorMin="0" midiMessageType="9"
             serializeIndex="174" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,114,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="High-Mid band Gain"
               componentMouseCursor="2" componentGroupName="grp_3_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="208 96 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="175" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_EQ_LowMidGain_Slider" modulatorMin="0" midiMessageType="9"
             serializeIndex="175" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,114,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low-Mid band Gain"
               componentMouseCursor="2" componentGroupName="grp_3_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="112 96 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_08" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-37"
               componentMouseCursor="2" componentGroupName="grp_3_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;0.68;3"
               uiLabelText="0=40Hz, till 127=1.5KHz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="8 232 85 30"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_09" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-37"
               componentMouseCursor="2" componentGroupName="grp_3_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;0.68;3"
               uiLabelText="0=40Hz, till 127=2,5KHz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="104 232 85 30" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_10" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-37"
               componentMouseCursor="2" componentGroupName="grp_3_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;0.68;3"
               uiLabelText="0=40Hz, till 127=10KHz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="200 232 85 30"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_11" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-37"
               componentMouseCursor="2" componentGroupName="grp_3_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;0.68;3"
               uiLabelText="0=500Hz, til127=2KHz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="296 232 85 30" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_12" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-37"
               componentMouseCursor="2" componentGroupName="grp_3_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;0.68;3"
               uiLabelText="0:Q=1, 64:Q=2, 127:Q=20" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="208 64 85 30"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_13" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-37"
               componentMouseCursor="2" componentGroupName="grp_3_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;0.68;3"
               uiLabelText="0:Q=1, 64:Q=2, 127:Q=20" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="304 64 85 30" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_3_Insert_Controls" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-168"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Insert (MFX1&amp;2) Chorus/Flanger/Phaser/Tremolo/Rotary Controls"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="624 8 618 261"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentTabId="3" componentTabName="fxTabs" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiGroup"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setModPresetEfx"
             name="Efx3_Mod_Preset" modulatorMin="0" midiMessageType="9" TriggerModChangeMethodOnLoad="0"
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="24">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,48,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (1.5)"
               componentMouseCursor="2" componentGroupName="grp_3_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF&#10;Chorus Light 1&#10;Chorus Light 2&#10;Chorus Medium 1&#10;Chorus Medium 2&#10;Chorus Deep 1&#10;Chorus Deep 2&#10;Chorus Fast 1&#10;Chorus Fast 2&#10;Resonant Chorus&#10;Long Time Chorus&#10;Flange Light&#10;Flange Medium&#10;Flange Slow Deep&#10;Flange Deep&#10;Phaser Light&#10;Phaser Medium&#10;Phaser Slow Deep&#10;Phaser Fast&#10;Tremolo Slow&#10;Tremolo Medium 1&#10;Tremolo Medium 2&#10;Tremolo Fast&#10;Rotary Slow&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="8 120 90 36"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentTabName="fxTabs"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="176" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Mod_Time" modulatorMin="0" midiMessageType="9" serializeIndex="176"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,50,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="28" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3" componentVisibleName="Chorus/Flanging&#10;delay time"
               componentMouseCursor="2" componentGroupName="grp_3_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="96 16 85 79" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="177" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Mod_Feedback" modulatorMin="0" midiMessageType="9"
             serializeIndex="177" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,51,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3" componentVisibleName="Chorus/Flanging feedback"
               componentMouseCursor="2" componentGroupName="grp_3_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="184 120 81 65"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="178" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Mod_Level" modulatorMin="0" midiMessageType="9" serializeIndex="178"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,49,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Effect level"
               componentMouseCursor="2" componentGroupName="grp_3_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="192 192 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="179" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Mod_Rate" modulatorMin="0" midiMessageType="9" serializeIndex="179"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,54,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Modulation rate"
               componentMouseCursor="2" componentGroupName="grp_3_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="376 32 84 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="180" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Mod_Depth" modulatorMin="0" midiMessageType="9" serializeIndex="180"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,55,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Modulation depth"
               componentMouseCursor="2" componentGroupName="grp_3_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="96 120 84 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="181" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Mod_Shape" modulatorMin="0" midiMessageType="9" serializeIndex="181"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,56,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3" componentVisibleName="Tremolo modulation shape"
               componentMouseCursor="2" componentGroupName="grp_3_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="464 32 117 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="182" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Mod_Filter" modulatorMin="0" midiMessageType="9" serializeIndex="182"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,52,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="28" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3" componentVisibleName="Chorus/Flanging/Short-Delay&#10;high pass filter on input"
               componentMouseCursor="2" componentGroupName="grp_3_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="264 16 99 80" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="183" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Mod_Hdamp" modulatorMin="0" midiMessageType="9" serializeIndex="183"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,53,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="28" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3" componentVisibleName="HDAMP&#10;high frequency filter on delay feedback"
               componentMouseCursor="2" componentGroupName="grp_3_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentTabId="0" componentTabName="fxTabs"
               uiType="uiSlider" componentRectangle="168 16 106 79" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="184" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Mod_Speed" modulatorMin="0" midiMessageType="9" serializeIndex="184"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,57,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Rotary Speed"
               componentMouseCursor="2" componentGroupName="grp_3_Insert_Controls_Rotary"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="slow&#10;fast"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="8 40 73 28" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_14" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="0=1ms, till 127=30ms"
               componentMouseCursor="2" componentGroupName="grp_3_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3"
               uiLabelText="0=1ms, till 127=30ms" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="104 88 65 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_15" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="0=1ms, till 127=30ms"
               componentMouseCursor="2" componentGroupName="grp_3_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3"
               uiLabelText="0 to 127= 0 to 100%" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="187 88 69 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_16" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="0=1ms, till 127=30ms"
               componentMouseCursor="2" componentGroupName="grp_3_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3"
               uiLabelText="0= no filter to 1.2kHz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="280 88 66 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_17" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3" componentVisibleName="0=1ms, till 127=30ms"
               componentMouseCursor="2" componentGroupName="grp_3_Insert_Controls"
               componentGroupped="1" componentSnapSize="9" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="36.600000000000001"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="54" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3"
               uiLabelText="0= ~0,023 Hz, ...64=~0,89Hz, till 127= ~5,8 Hz (Tremolo: ~1Hz to ~20Hz)"
               uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="368 96 99 27"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_18" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="0=1ms, till 127=30ms"
               componentMouseCursor="2" componentGroupName="grp_3_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3"
               uiLabelText="0 = triangle, till 127 = square" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="480 88 81 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_3_DelayControls" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-156"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Delay Controls (EFX1&amp;2)"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="216 272 186 274"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentTabId="3" componentTabName="fxTabs" uiType="uiGroup"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="5" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setDelayPresetEfx"
             name="Efx3_Delay_Preset" modulatorMin="0" midiMessageType="9"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="5">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,88,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (S.7)"
               componentMouseCursor="2" componentGroupName="grp_3_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF&#10;mono1&#10;mono2&#10;stereo1&#10;stereo2&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="16 40 88 32"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="185" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Delay_PreLp" modulatorMin="0" midiMessageType="9"
             serializeIndex="185" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,91,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="PreLP"
               componentMouseCursor="2" componentGroupName="grp_3_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="8 192 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="186" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Delay_Level" modulatorMin="0" midiMessageType="9"
             serializeIndex="186" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,92,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Level"
               componentMouseCursor="2" componentGroupName="grp_3_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="64 192 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="187" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Delay_Feedback" modulatorMin="0" midiMessageType="9"
             serializeIndex="187" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,94,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Feedback"
               componentMouseCursor="2" componentGroupName="grp_3_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="120 192 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="188" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Delay_Mode" modulatorMin="0" midiMessageType="9" serializeIndex="188"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,90,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Mode"
               componentMouseCursor="2" componentGroupName="grp_3_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="0xff0000ff"
               uiButtonColourOff="ffffac00" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="0xff454545" uiButtonContent="mono=0&#10;stereo=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="16 128 88 54" uiType="uiButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="189" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Delay_Time" modulatorMin="0" midiMessageType="9" serializeIndex="189"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,93,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Time"
               componentMouseCursor="2" componentGroupName="grp_3_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="120 104 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="190" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Delay_On" modulatorMin="0" midiMessageType="9" serializeIndex="190"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,89,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="ON/OFF"
               componentMouseCursor="2" componentGroupName="grp_3_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="1" uiButtonColourOn="ff00ff00"
               uiButtonColourOff="ffff0000" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="ff000000" uiButtonContent="OFF=0&#10;ON=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="16 80 88 43" uiType="uiButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="191" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Delay_Hdamp" modulatorMin="0" midiMessageType="9"
             serializeIndex="191" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,95,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="HDAMP"
               componentMouseCursor="2" componentGroupName="grp_3_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="120 16 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_19" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-217"
               componentMouseCursor="2" componentGroupName="grp_3_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3"
               uiLabelText="0 to 127 = 0 to 100 %" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="120 72 63 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_20" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-217"
               componentMouseCursor="2" componentGroupName="grp_3_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3"
               uiLabelText="0 to 127 = 0 to 574ms" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="120 160 63 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_3_WahControls" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-100"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Wah-Wah Controls (EFX1&amp;2)"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="408 272 169 277"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentTabId="3" componentTabName="fxTabs" uiType="uiGroup"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="6" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setWahPresetEfx"
             name="Efx3_Wah_Preset" modulatorMin="0" midiMessageType="9" TriggerModChangeMethodOnLoad="0"
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="6">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,80,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (S.5)"
               componentMouseCursor="2" componentGroupName="grp_3_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF=0&#10;Auto-Wah 1&#10;Auto-Wah 2&#10;Auto-Wah 3&#10;Wah-Wah 1&#10;Wah-Wah 2&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="8 56 72 33"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="192" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Wah_Sensitivity" modulatorMin="0" midiMessageType="9"
             serializeIndex="192" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,84,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="sensitivity"
               componentMouseCursor="2" componentGroupName="grp_3_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="8 200 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="193" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Wah_Type" modulatorMin="0" midiMessageType="9" serializeIndex="193"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,81,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Type"
               componentMouseCursor="2" componentGroupName="grp_3_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ffffff00"
               uiButtonColourOff="ffffac00" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="0xff454545" uiButtonContent="low pass=0&#10;band pass=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="80 216 81 46" uiType="uiButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="194" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Wah_Resonance" modulatorMin="0" midiMessageType="9"
             serializeIndex="194" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,83,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="resonance"
               componentMouseCursor="2" componentGroupName="grp_3_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="8 104 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="195" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Wah_Position" modulatorMin="0" midiMessageType="9"
             serializeIndex="195" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,82,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="38" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="frequency&#10;Pedal Position"
               componentMouseCursor="2" componentGroupName="grp_3_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="88 72 86 97" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_21" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-204"
               componentMouseCursor="2" componentGroupName="grp_3_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=closed 0Hz, till 127=open8kHz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="96 168 67 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_22" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-204"
               componentMouseCursor="2" componentGroupName="grp_3_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=no resonance, till 127=max resonance" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="8 168 67 22" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_23" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-204"
               componentMouseCursor="2" componentGroupName="grp_3_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=off, till 127=100%" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="8 256 66 30"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_3_DistortionControls" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-42"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Distortion Controls (EFX1&amp;2)"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="583 273 290 265"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentTabId="3" componentTabName="fxTabs" uiType="uiGroup"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="196" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Dist_Rc" modulatorMin="0" midiMessageType="9" serializeIndex="196"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,104,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;9;0;0;0;0;1;3" componentVisibleName="RC type low pass&#10;filer value"
               componentMouseCursor="2" componentGroupName="grp_3_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="184 176 107 58"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="197" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Dist_FilterReso" modulatorMin="0" midiMessageType="9"
             serializeIndex="197" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,101,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low Pass Filter resonance"
               componentMouseCursor="2" componentGroupName="grp_3_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="96 176 101 57" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="198" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Dist_FilterFreq" modulatorMin="0" midiMessageType="9"
             serializeIndex="198" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,100,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Low Pass Filter frequency"
               componentMouseCursor="2" componentGroupName="grp_3_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="0 176 100 58"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="199" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Dist_PostGain" modulatorMin="0" midiMessageType="9"
             serializeIndex="199" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,102,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Post Gain"
               componentMouseCursor="2" componentGroupName="grp_3_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="208 24 85 61"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="7" vstIndex="200" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Dist_Drive" modulatorMin="0" midiMessageType="9" serializeIndex="200"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,103,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Drive"
               componentMouseCursor="2" componentGroupName="grp_3_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="7" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="144 24 69 61" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="201" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Dist_PreGain" modulatorMin="0" midiMessageType="9"
             serializeIndex="201" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,98,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Pre Gain"
               componentMouseCursor="2" componentGroupName="grp_3_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="79 24 57 61" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="202" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Dist_On" modulatorMin="0" midiMessageType="9" serializeIndex="202"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,97,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="ON/OFF"
               componentMouseCursor="2" componentGroupName="grp_3_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="1" uiButtonColourOn="ff00ff00"
               uiButtonColourOff="ffff0000" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="ff000000" uiButtonContent="OFF=0&#10;ON=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="8 56 56 52" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiButton"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_24" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-208"
               componentMouseCursor="2" componentGroupName="grp_3_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=OFF, 1 = -42dB till 127 = 0dB" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="78 80 58 28"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_25" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-208"
               componentMouseCursor="2" componentGroupName="grp_3_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0 till 7 (0 to +42dB)" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="152 80 58 30" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_26" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-208"
               componentMouseCursor="2" componentGroupName="grp_3_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=OFF, 1 = -42dB till 127 = 0dB" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentTabId="0" componentTabName="fxTabs" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="216 80 67 39" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_27" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-208"
               componentMouseCursor="2" componentGroupName="grp_3_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=closed 0Hz, till 127= open 24kHz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="16 232 67 26" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentTabName="fxTabs" componentTabId="0"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_28" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-208"
               componentMouseCursor="2" componentGroupName="grp_3_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0 = no resonance, till 127 = max resonance" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentTabId="0" componentTabName="fxTabs" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="112 232 67 26" uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_29" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-208"
               componentMouseCursor="2" componentGroupName="grp_3_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0 = closed 0Hz , till 127 = open 8kHz" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="200 232 67 26" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentTabName="fxTabs" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="14" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setDistPresetEfx"
             name="Efx3_Dist_Preset" modulatorMin="0" midiMessageType="9"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="14">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,96,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Presets (1.3)"
               componentMouseCursor="2" componentGroupName="grp_3_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF=0&#10;Tube Dist Low 1=1&#10;Tube Dist Low 2=2&#10;Tube Dist Mid 1=3&#10;Tube Dist Mid 2=4&#10;Tube Dist High 1=5&#10;Tube Dist High 2=6&#10;Smooth OD=7&#10;Distortion=8&#10;Crunch=9&#10;Fuzz=10&#10;Grunge=11&#10;Metal=12&#10;Mess=13&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="16 128 125 32"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="7" vstIndex="203" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Dist_Type" modulatorMin="0" midiMessageType="9" serializeIndex="203"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,99,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Type"
               componentMouseCursor="2" componentGroupName="grp_3_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="Tube=0&#10;asymmetric parabolic1=1&#10;asymmetric parabolic2=2&#10;unknown=3&#10;unknown=4&#10;unknown=5&#10;unknown=6&#10;unknown=7"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="152 128 124 32"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_3_Compressor-Limiter_Controls" modulatorVstExported="0"
             vstIndex="" PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-69"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Compressor/Limiter Controls (EFX1&amp;2)"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="880 272 358 269"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentTabId="3" componentTabName="fxTabs" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiGroup"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="204" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Comp_Knee" modulatorMin="0" midiMessageType="9" serializeIndex="204"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,71,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Knee"
               componentMouseCursor="2" componentGroupName="grp_3_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="1" uiButtonColourOn="ffffff00"
               uiButtonColourOff="ffffac00" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="0xff454545" uiButtonContent="Hard Knee=0&#10;Soft Knee=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="8 184 73 72" uiType="uiButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="205" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Comp_Attack" modulatorMin="0" midiMessageType="9"
             serializeIndex="205" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,66,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Attack time"
               componentMouseCursor="2" componentGroupName="grp_3_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="280 160 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="206" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Comp_Release" modulatorMin="0" midiMessageType="9"
             serializeIndex="206" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,67,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Release time"
               componentMouseCursor="2" componentGroupName="grp_3_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="216 160 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="207" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Comp_Threshold" modulatorMin="0" midiMessageType="9"
             serializeIndex="207" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,68,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Threshold"
               componentMouseCursor="2" componentGroupName="grp_3_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="152 160 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="208" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Comp_Ratio" modulatorMin="0" midiMessageType="9" serializeIndex="208"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,69,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Ratio"
               componentMouseCursor="2" componentGroupName="grp_3_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="88 160 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="209" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Comp_Boost_Slider" modulatorMin="0" midiMessageType="9"
             serializeIndex="209" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,70,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Boost"
               componentMouseCursor="2" componentGroupName="grp_3_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="16 112 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="5" vstIndex="210" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Comp_Boost" modulatorMin="0" midiMessageType="9" serializeIndex="210"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,70,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Boost"
               componentMouseCursor="2" componentGroupName="grp_3_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="x1=0&#10;x1.5=24&#10;x2=32&#10;x3=48&#10;x4=64&#10;x8=127"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="8 72 76 39"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="211" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Comp_On" modulatorMin="0" midiMessageType="9" serializeIndex="211"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,65,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="ON/OFF"
               componentMouseCursor="2" componentGroupName="grp_3_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="1" uiButtonColourOn="ff00ff00"
               uiButtonColourOff="ffff0000" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="ff000000" uiButtonContent="OFF=0&#10;ON=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="8 16 73 56" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiButton"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_30" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-134"
               componentMouseCursor="2" componentGroupName="grp_3_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=fast attack (0.1ms), &#8230; 60=1ms, &#8230;100=10ms, till 127=slow attack (100ms)"
               uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="280 232 69 28"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_31" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-134"
               componentMouseCursor="2" componentGroupName="grp_3_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=fast release (10ms), &#8230; 60=100ms, &#8230; 100=1s, till 127=slow release (~5s)"
               uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="216 232 69 28" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_32" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-134"
               componentMouseCursor="2" componentGroupName="grp_3_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="0=-42.3, 1=-42dB, 2=-41.66dB, 126=-0.33dB, 127=0dB"
               uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="152 232 69 28"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="lbl_3_33" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-134"
               componentMouseCursor="2" componentGroupName="grp_3_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;10;0;0;0;0;1;3"
               uiLabelText="127=1:128, 126=2:128 (1:64), 125=3:128, &#8230; 64=64:128 (1:2), &#8230; 0=1:1"
               uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="88 232 69 28" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_3_CompressorLimiter_Presets" modulatorVstExported="0"
             vstIndex="" PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-196"
               componentMouseCursor="2" componentGroupName="grp_3_Compressor-Limiter_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Presets (1.2)"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="ffc2c2c2" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="96 24 247 97"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               uiType="uiGroup" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="9" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setCompPresetEfx"
             name="Efx3_CompLimit_Preset" modulatorMin="0" midiMessageType="9"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="9">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,64,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Compressor/Limiter"
               componentMouseCursor="2" componentGroupName="grp_3_CompressorLimiter_Presets"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="No Compression=0&#10;Compression -18dB (2:1)=1&#10;Compression -15dB (3:1)=2&#10;Compression -18dB (5:1)=3&#10;Compression -21dB (7:1)=4&#10;Compression -24dB (12:1)=5&#10;Limiter -6dB=6&#10;Limiter -12dB=7&#10;Limiter -18dB=8&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="8 40 222 45" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="2" vstIndex="231" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="HQ_Parameter_InputHighPassMode" modulatorMin="0" serializeIndex="231"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,61,F0 00 F7:CC,Direct,Direct,98,17,F0 00 F7:CC,Direct,Direct,06,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Input high pass Mode"
               componentMouseCursor="2" componentGroupName="grp_HQ_Distortion_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="Normal=0&#10;LIGHT_RESONANCE=1&#10;STRONG_RESONANCE=2"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="40 96 88 32"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="7" vstIndex="232" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="HQ_Parameter_InputLowPassMode" modulatorMin="0" serializeIndex="232"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,61,F0 00 F7:CC,Direct,Direct,98,20,F0 00 F7:CC,Direct,Direct,06,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Input low pass Mode"
               componentMouseCursor="2" componentGroupName="grp_HQ_Distortion_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="SMOOTH = 0&#10;MEDIUM = 1&#10;SHARP = 2&#10;PROGRESSIVE = 3&#10;LIGHT_SINGLE_RESONANCE = 4&#10;STRONG_SINGLE_RESONANCE = 5&#10;LIGHT_MULTIPLE_RESONANCE = 6&#10;STRONG_MULTIPLE_RESONANCE = 7"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="192 96 88 32"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="233" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="HQ_Parameter_GainHigh_max" modulatorMin="0" serializeIndex="233"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,61,F0 00 F7:CC,Direct,Direct,98,28,F0 00 F7:CC,Direct,Direct,06,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="PEQ Gain high max"
               componentMouseCursor="2" componentGroupName="grp_HQ_Distortion_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="64" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="ff00ffff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="88 208 78 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="234" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="HQ_Parameter_GainLow_max" modulatorMin="0" serializeIndex="234"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,61,F0 00 F7:CC,Direct,Direct,98,25,F0 00 F7:CC,Direct,Direct,06,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="PEQ Gain low max"
               componentMouseCursor="2" componentGroupName="grp_HQ_Distortion_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="ff00ffff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="248 208 74 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="debug" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-2"
               componentMouseCursor="2" componentGroupName="grpDevelopment"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="0xff000000" uiLabelOutline="0" uiLabelOutlineColour="ff000000"
               uiLabelJustification="topLeft" uiLabelFitFont="0" uiLabelFont="Courier New;12;1;0;0;0;1;0"
               uiLabelText="Panel start&#10;" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" uiType="uiLabel"
               componentRectangle="183 92 139 169" componentBubbleNameJustification="centred"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameColour="0xff000000"
               componentBubbleValueJustification="centred" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueColour="0xff000000" componentBubbleBackgroundGradientType="1"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleRoundAngle="10"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Efx1_Mix_Current_Preset" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Current Preset"
               componentMouseCursor="2" componentGroupName="grp_1_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff00ff00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiLabelText="OFF custom" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="104 16 88 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Efx1_EQ_Current_Preset" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Current Preset"
               componentMouseCursor="2" componentGroupName="grp_1_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff00ff00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiLabelText="Flat custom" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentTabName="" uiType="uiLabel" componentRectangle="104 16 88 24"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Efx1_Delay_Current_Preset" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Current Preset"
               componentMouseCursor="2" componentGroupName="grp_1_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff00ff00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiLabelText="OFF custom" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="16 16 88 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Efx1_CompLimit_Current_Preset" modulatorVstExported="0"
             vstIndex="" PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Current Preset"
               componentMouseCursor="2" componentGroupName="grp_1_CompressorLimiter_Presets"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff00ff00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiLabelText="No Compression custom" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="48 8 180 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Efx1_Dist_Current_Preset" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Current Preset"
               componentMouseCursor="2" componentGroupName="grp_1_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff00ff00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiLabelText="OFF custom" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="0 24 88 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Efx1_Mod_Current_Preset" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Current Preset"
               componentMouseCursor="2" componentGroupName="grp_1_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff00ff00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiLabelText="OFF custom" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="8 24 88 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Efx1_Wah_Current_Preset" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Current Preset"
               componentMouseCursor="2" componentGroupName="grp_1_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff00ff00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiLabelText="OFF custom" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="8 24 88 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="HQ_Dist_Current_Preset" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Current Preset"
               componentMouseCursor="2" componentGroupName="grp_HQ_DistortionTopLevelControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff00ff00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiLabelText="OFF custom" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="80 24 88 24"
               uiType="uiLabel" componentTabName=""/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="252" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="testMethod"
             name="btnTestMethod" modulatorMin="0" serializeIndex="252" TriggerModChangeMethodOnLoad="0"
             PauseMidiDuringModChangeOnLoad="1" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="grpDevelopment"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="1" uiButtonColourOn="ff00ff07"
               uiButtonColourOff="ffff4343" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="0xff454545" uiButtonContent="False&#10;True"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="32 224 88 32" uiType="uiButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="65536" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="dev_Keyboard" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Keyboard"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiMidiKeyboardOrientation="horizontalKeyboard"
               uiMidiKeyboardWhiteButtonColour="0xffffffff" uiMidiKeyboardBlackButtonColour="0xff000000"
               uiMidiKeyboardSeparatorLineColour="0xff000000" uiMidiKeyboardMouseOverColour="0xffff0000"
               uiMidiKeyboardMouseDownColour="0xff0000ff" uiMidiKeyboardTextLabelColour="0xff000000"
               uiMidiKeyboardButtonBackgroundColour="0xff0f0f0f" uiMidiKeyboardButtonArrowColour="0xff000000"
               uiMidiKeyboardLowestVisibleKey="48" uiMidiKeyboardBaseOctaveKeyPress="5"
               uiMidiKeyboardOctaveFroMiddleC="3" uiMidiKeyboardMapToNoteNumber="0"
               componentRectangle="16 840 532 75" uiType="uiMidiKeyboard" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="253" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnModSave" modulatorMin="0" serializeIndex="253" TriggerModChangeMethodOnLoad="0"
             PauseMidiDuringModChangeOnLoad="1" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-3"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="saveAllModVal" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ff000000"
               uiButtonColourOff="ff6f6f6f" uiButtonTextColourOn="ff6f6f6f"
               uiButtonTextColourOff="ff000000" uiButtonContent="Save" uiButtonConnectedLeft="0"
               uiButtonConnectedRight="0" uiButtonConnectedTop="0" uiButtonConnectedBottom="0"
               uiButtonRepeat="0" uiButtonRepeatRate="100" uiButtonTriggerOnMouseDown="0"
               componentInternalFunction="-- None" componentRectangle="8 16 59 40"
               componentLayerUid="e4c3411959000000feffffffffffffff" uiType="uiButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="254" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnModLoad" modulatorMin="0" serializeIndex="254" TriggerModChangeMethodOnLoad="0"
             PauseMidiDuringModChangeOnLoad="1" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-3"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="loadAllModVal" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ff000000"
               uiButtonColourOff="ff6f6f6f" uiButtonTextColourOn="ff6f6f6f"
               uiButtonTextColourOff="ff000000" uiButtonContent="Load" uiButtonConnectedLeft="0"
               uiButtonConnectedRight="0" uiButtonConnectedTop="0" uiButtonConnectedBottom="0"
               uiButtonRepeat="0" uiButtonRepeatRate="100" uiButtonTriggerOnMouseDown="0"
               componentInternalFunction="-- None" componentRectangle="72 16 59 40"
               uiType="uiButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="255" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnInitSerializationIndex" modulatorMin="0" serializeIndex="255"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-3"
               componentMouseCursor="2" componentGroupName="grpDevelopment"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="InitSerializeProperty" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ff000000"
               uiButtonColourOff="ff6f6f6f" uiButtonTextColourOn="ff6f6f6f"
               uiButtonTextColourOff="ff000000" uiButtonContent="Init Serialize Property"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="88 104 83 48" uiType="uiButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="511" vstIndex="6" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="calculateProgramChange"
             name="programList" modulatorMin="0" serializeIndex="6" TriggerModChangeMethodOnLoad="1"
             PauseMidiDuringModChangeOnLoad="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Bank Select and Program Change"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="A: 1  Grand Piano  St&#10;A: 2  Rock Piano  St&#10;A: 3  Electric  St&#10;A: 4  Honky-tonk  St&#10;A: 5  El.Piano1&#10;A: 6  El.Piano2&#10;A: 7  Harpsichord&#10;A: 8  Clavi&#10;A: 9  Celesta&#10;A: 10  Glockenspiel&#10;A: 11  MusicBox&#10;A: 12  Vibraphone&#10;A: 13  Marimba&#10;A: 14  Xylophone&#10;A: 15  Tubular bells&#10;A: 16  Dulcimer&#10;A: 17  Rotary&#10;A: 18  Percussive&#10;A: 19  Rock Organ&#10;A: 20  Church&#10;A: 21  Theatre&#10;A: 22  Musette&#10;A: 23  Harmonica&#10;A: 24  Bandoneon&#10;A: 25  Nylon&#10;A: 26  Steel  M&#10;A: 27  Jazz&#10;A: 28  Clean&#10;A: 29  Muted&#10;A: 30  Overdrive&#10;A: 31  Distorted&#10;A: 32  Harmonics&#10;A: 33  Acoustic&#10;A: 34  Finger&#10;A: 35  Picked&#10;A: 36  Fretless&#10;A: 37  Slap Bass1&#10;A: 38  Slap Bass2&#10;A: 39  Synbas1&#10;A: 40  Synbas2&#10;A: 41  Violin&#10;A: 42  Viola&#10;A: 43  Cello&#10;A: 44  Contrabass&#10;A: 45  Tremolo&#10;A: 46  Pizzicato&#10;A: 47  Harp&#10;A: 48  Timpani &#10;A: 49  Strings Ens.  St&#10;A: 50  SlowStrings  St&#10;A: 51  SynStrings1 &#10;A: 52  SynStrings2 &#10;A: 53  Choir Aah  St, M&#10;A: 54  Voice Ooh &#10;A: 55  Synth Voice &#10;A: 56  Hits &#10;A: 57  Trumpet &#10;A: 58  Trombone &#10;A: 59  Tuba &#10;A: 60  Muted Tpt  &#10;A: 61  French Horn &#10;A: 62  Brass Sect. &#10;A: 63  SynBrass1 &#10;A: 64  SynBrass2 &#10;A: 65  Altosoft &#10;A: 66  Contralto &#10;A: 67  Tenor Sax &#10;A: 68  Bariton Sax &#10;A: 69  Oboe  &#10;A: 70  Engl.Horn &#10;A: 71  Bassoon &#10;A: 72  Clarinet &#10;A: 73  Piccolo &#10;A: 74  Flute &#10;A: 75  Recorder &#10;A: 76  Pan Flute &#10;A: 77  Bottle &#10;A: 78  Shakuhashi &#10;A: 79  Whistle &#10;A: 80  Ocarina &#10;A: 81  Square &#10;A: 82  Sawtooth &#10;A: 83  Calliope &#10;A: 84  Chiff &#10;A: 85  Charang &#10;A: 86  Voice  St&#10;A: 87  Fifth &#10;A: 88  Bass&amp;Lead &#10;A: 89  Fantasy  St&#10;A: 90  Warm  St&#10;A: 91  New Age &#10;A: 92  Space &#10;A: 93  Soft &#10;A: 94  Metal  St&#10;A: 95  Halo &#10;A: 96  Sweep&#10;A: 97  Ice Rain&#10;A: 98  Soundtrack&#10;A: 99  Crystal&#10;A: 100  Atmosphere&#10;A: 101  Brightness&#10;A: 102  Goblin&#10;A: 103  Echodrops&#10;A: 104  Startheme&#10;A: 105  Sitar&#10;A: 106  Banjo &#10;A: 107  Shamisen&#10;A: 108  Koto&#10;A: 109  Kalimba&#10;A: 110  Bagpipe&#10;A: 111  Fiddle&#10;A: 112  Shanai&#10;A: 113  Tinkle bell&#10;A: 114  Agogo&#10;A: 115  Steeldrum  St&#10;A: 116  Woodblock&#10;A: 117  Taiko&#10;A: 118  Melotom&#10;A: 119  Syntom&#10;A: 120  Reverse&#10;A: 121  Fret Noise&#10;A: 122  Breath&#10;A: 123  Seashore&#10;A: 124  Bird&#10;A: 125  Telephone&#10;A: 126  Helicopter&#10;A: 127  Applause&#10;A: 128  Gunshot&#10;B: 1  Jingle        &#10;B: 2  Dark Grand  St&#10;B: 3  House  St&#10;B: 4  Suitcase&#10;B: 5  Mark&#10;B: 6  Funk Dx &#10;B: 7  Fm Tine &#10;B: 8  DX Piano&#10;B: 9  ToyPad&#10;B: 10  Orch. Bell &#10;B: 11  Mallet&#10;B: 12  Short Vibe&#10;B: 13  Karimba&#10;B: 14  Etnowood&#10;B: 15  Metallophone&#10;B: 16  Windchimes&#10;B: 17  Rotor Fast&#10;B: 18  Jazz Organ&#10;B: 19  Drawbar&#10;B: 20  Positive&#10;B: 21  French Musette&#10;B: 22  Francaise&#10;B: 23  Cassotto&#10;B: 24  Tango &#10;B: 25  Classic&#10;B: 26  Folk&#10;B: 27  Funk Strat&#10;B: 28  60&#8217; Stopped&#10;B: 29  Muted velo&#10;B: 30  Vintage&#10;B: 31  12 Strings&#10;B: 32  Solidbody&#10;B: 33  WarmBass&#10;B: 34  Folk Bass&#10;B: 35  MuteBass&#10;B: 36  Deep Bass&#10;B: 37  Precision &#10;B: 38  Reso Bass&#10;B: 39  Saw Bass&#10;B: 40  House Bass&#10;B: 41  Philarmonic &#10;B: 42  Quartet&#10;B: 43  GlockString&#10;B: 44  OctaStrings1&#10;B: 45  OctaStrings2&#10;B: 46  Marcato&#10;B: 47  String&amp;Fall  St &#10;B: 48  Slow Arcos  St&#10;B: 49  Bowed Strings  St&#10;B: 50  Dark Strings  St&#10;B: 51  Dah&#10;B: 52  Classic Choir &#10;B: 53  Men_Doo&#10;B: 54  Girl_Doo  St&#10;B: 55  Laah&#10;B: 56  Voices&#10;B: 57  Swing Tpt &#10;B: 58  Cornet&#10;B: 59  Euphonium&#10;B: 60  Miles Tpt&#10;B: 61  Flughorn&#10;B: 62  Stereo Brass  St&#10;B: 63  GrowBras &#10;B: 64  Octabrass &#10;B: 65  Soprano&#10;B: 66  Circus Sax&#10;B: 67  Lounge  Tenor&#10;B: 68  Growl Sax&#10;B: 69  Melo Trumpet&#10;B: 70  Horn Swell&#10;B: 71  Trumpets  St &#10;B: 72  Soft Trombones  St&#10;B: 73  Latin Flute  St&#10;B: 74  Pop Flute&#10;B: 75  Andes&#10;B: 76  Voice Flute&#10;B: 77  Analogs  St&#10;B: 78  Flanger&#10;B: 79  Brightpad&#10;B: 80  Wiring  St&#10;B: 81  Wow  St&#10;B: 82  Polysynth  St&#10;B: 83  Trance  St &#10;B: 84  Wave&#10;B: 85  Rave Bass&#10;B: 86  Modular Bass St&#10;B: 87  Percussive Bass  St&#10;B: 88  Wild Bass  St&#10;B: 89  2nd Perc&#10;B: 90  3th Perc&#10;B: 91  Power Fast&#10;B: 92  Tonebar&#10;B: 93  Dark B3&#10;B: 94  Jimmy Org.&#10;B: 95  Lower 8&#8217; - 4&#8217;&#10;B: 96  Jazzy&#10;B: 97  Pop Strat&#10;B: 98  Telecast&#10;B: 99  Strato&#10;B: 100  Texas&#10;B: 101  Western&#10;B: 102  Fingerpick&#10;B: 103  5th Stops&#10;B: 104  Wha guitar&#10;B: 105  Hawaian&#10;B: 106  Mandolin&#10;B: 107  Django &#10;B: 108  ClassicFx&#10;B: 109  Pedalsteel&#10;B: 110  Rock&amp;Roll&#10;B: 111  Reed 8&#8217;&#10;B: 112  Fisa 8&#8217;&#10;B: 113  Gategroup  St&#10;B: 114  Amazing  St&#10;B: 115  Housesynth  St&#10;B: 116  Resonance &#10;B: 117  Key Lead  St&#10;B: 118  Juno Synth  St &#10;B: 119  Obx Poly  St&#10;B: 120  JX Brass&#10;B: 121  Alarm&amp;Sirene&#10;B: 122  Jet           &#10;B: 123  Pfif&amp;Jew_Harp  &#10;B: 124  Rain          &#10;B: 125  Vocals     &#10;B: 126  Thunder       &#10;B: 127  Train         &#10;B: 128  Sweep &#10;C: 1  Piano&amp;Strings  St, M &#10;C: 2  Grand&amp;Pad  St, M &#10;C: 3  Octapiano  St&#10;C: 4  Electropad  M&#10;C: 5  Msk &#10;C: 6  StagePno&#10;C: 7  Rodes&#10;C: 8  Elopiano&#10;C: 9  FM Layer&#10;C: 10  Chinese Bell&#10;C: 11  Stereochrom&#10;C: 12  Bright Vibes&#10;C: 13  Toy Box &#10;C: 14  Mbira&#10;C: 15  XMas Bell&#10;C: 16  FM Marimba &#10;C: 17  Pop Organ&#10;C: 18  Gospel &#10;C: 19  Power Slow&#10;C: 20  Principale&#10;C: 21  Dry Organ &#10;C: 22  Alpen  &#10;C: 23  Bellow&#10;C: 24  Steirisch&#10;C: 25  DynaFolk &#10;C: 26  CountryFx&#10;C: 27  Humbuck&#10;C: 28  StratoFx&#10;C: 29  Ac. Stereo  St&#10;C: 30  Acid  &#10;C: 31  Plucked &#10;C: 32  Flamenco &#10;C: 33  Acoustic Bass&#10;C: 34  Bass&amp;Guit1&#10;C: 35  Oberbas1&#10;C: 36  RetroBass&#10;C: 37  Fusion&#10;C: 38  Oberbas2&#10;C: 39  Pedalbass&#10;C: 40  Bass&amp;Guit 2 &#10;C: 41  Slow Violin&#10;C: 42  Electric Violin &#10;C: 43  Chamber&#10;C: 44  Tzivago&#10;C: 45  Staccato  St, M&#10;C: 46  String Fall   St&#10;C: 47  Harp&amp;Orchestra St, M&#10;C: 48  Symphony  St, M&#10;C: 49  Full Ensemble  St, M&#10;C: 50  Digistring&#10;C: 51  Disco Strings  St, M&#10;C: 52  Country Violin&#10;C: 53  Tuuh&#10;C: 54  Ooh Girls&#10;C: 55  Aah Girls  St &#10;C: 56  Choir &#10;C: 57  Tbones&amp;Cornet  St, M&#10;C: 58  Slide Trombone&#10;C: 59  Dixie Tpt&#10;C: 60  Open Horn  St&#10;C: 61  Brass Fall Off&#10;C: 62  Horn Pad  St, M&#10;C: 63  Multi Brass  St, M&#10;C: 64  Brass Cool  St, M &#10;C: 65  Altosax&#10;C: 66  Jazz Alto&#10;C: 67  Alto Straight&#10;C: 68  Rock Sax &#10;C: 69  Superhorn  St, M&#10;C: 70  Tpt Slide Up  St&#10;C: 71  Dry Trumpet&#10;C: 72  Trumpet Section  M&#10;C: 73  Open Trombones  St, M&#10;C: 74  Irish Flute&#10;C: 75  Staccato Flute&#10;C: 76  Asian Flute &#10;C: 77  Fife&#10;C: 78  Ethnic Flute&#10;C: 79  Staccato Whistle&#10;C: 80  Pipe&#10;C: 81  Solo Dance  St&#10;C: 82  Juicy&#10;C: 83  Drama&#10;C: 84  Odissey&#10;C: 85  Minimug  M&#10;C: 86  Attack  St, M&#10;C: 87  Phantom  M&#10;C: 88  Soloist  St, M&#10;C: 89  Warmness&#10;C: 90  Explorer&#10;C: 91  Choral  M&#10;C: 92  Cyber  St, M&#10;C: 93  Magic  M&#10;C: 94  Glockpad&#10;C: 95  Stream&#10;C: 96  Digi Pro &#10;C: 97  UsPad&#10;C: 98  Bottled Air&#10;C: 99  Bellvox&#10;C: 100  DigiPad  St&#10;C: 101  Syntax  St&#10;C: 102  Bright Analog  St, M&#10;C: 103  Aura Pad  M &#10;C: 104  Acoustic Dream  St, M&#10;C: 105  Tres&#10;C: 106  Banjo 5 String&#10;C: 107  Futozao&#10;C: 108  Hackbrett&#10;C: 109  Paraguayan Harp&#10;C: 110  Short Mandolin&#10;C: 111  Harp Glissando&#10;C: 112  Bouzuki&#10;C: 113  Tinkles&#10;C: 114  Triangle&#10;C: 115  Tambora&#10;C: 116  Claves&#10;C: 117  Ac.Tom&#10;C: 118  Brushtom&#10;C: 119  Snare&#10;C: 120  Crash&#10;C: 121  Scratch1&#10;C: 122  Scratch2&#10;C: 123  Scratch3&#10;C: 124  Scratch4&#10;C: 125  Scratch5&#10;C: 126  FxSlap&#10;C: 127  Laser &#10;C: 128  Wind&#10;D: 1  Layered Piano  M&#10;D: 2  Latin Piano  St, M&#10;D: 3  Fm Thin &#10;D: 4  Rdx Operator  M&#10;D: 5  Twin Electro  M&#10;D: 6  Stage Mix  M&#10;D: 7  Huge FM  M&#10;D: 8  Digitine  St, M&#10;D: 9  Glasshouse  St, M&#10;D: 10  Fantasyland  St, M&#10;D: 11  Italian Positive&#10;D: 12  Principale&amp;Octave  M&#10;D: 13  Full Organ  M&#10;D: 14  ChorusB3&#10;D: 15  Hot Organ&#10;D: 16  16-8-5&#10;D: 17  Pipe Octave&#10;D: 18  Tonewheel  M&#10;D: 19  Movie Organ  M&#10;D: 20  Fast Drawbars M&#10;D: 21  Carousel Org  M &#10;D: 22  Diatonic  M&#10;D: 23  Blues Harp&#10;D: 24  Conservatory  M&#10;D: 25  Classic Bright&#10;D: 26  Thin Folk&#10;D: 27  Jazz Octave  M&#10;D: 28  Muted Wha &#10;D: 29  Rock Strat&#10;D: 30  Str Power&#10;D: 31  Valve Lead  M&#10;D: 32  Smooth Electro M&#10;D: 33  Strat&amp;Folk  M&#10;D: 34  Open Country St, M&#10;D: 35  Golden Steel  M&#10;D: 36  Cntry Detune&#10;D: 37  Acoust. Picking  M&#10;D: 38  Twin Folk  M &#10;D: 39  Gipsy&#10;D: 40  Brazilian&#10;D: 41  Rockabilly &#10;D: 42  Funk Bass&#10;D: 43  Maxipick&#10;D: 44  Ooh Mix  St&#10;D: 45  Duh Group  M&#10;D: 46  Dah Quartet  M&#10;D: 47  Lah Trio   M&#10;D: 48  Vocal_Praise  M&#10;D: 49  Cinema Strings   &#10;D: 50  Score  M&#10;D: 51  AahMix  St&#10;D: 52  Humming&#10;D: 53  Lah Choir  St, M &#10;D: 54  Lah Mello Choir M&#10;D: 55  Church Choir  M&#10;D: 56  Night Vocals&#10;D: 57  Mmh&#10;D: 58  Boom&amp;Uap&#10;D: 59  Horn Crescendo M&#10;D: 60  Emperor Brass  St, M&#10;D: 61  Dry Tenor&#10;D: 62  Sax Club&#10;D: 63  Swing Tenor&#10;D: 64  Baritone&#10;D: 65  Glenn Sax  M&#10;D: 66  Boogie Sax  M&#10;D: 67  Octasax   M&#10;D: 68  Countie Sax  M &#10;D: 69  Sax Section  M &#10;D: 70  Saxes  M&#10;D: 71  Billy Sax   M      &#10;D: 72  Pop Sax   M&#10;D: 73  Lute&#10;D: 74  Mandola&#10;D: 75  Latin Harp&#10;D: 76  Portuguese&#10;D: 77  Fingered&amp;Slide&#10;D: 78  Fingered Gtr&#10;D: 79  Finger Slap &#10;D: 80  Planet&#10;D: 81  Rock Synth  M&#10;D: 82  Chuck  St, M&#10;D: 83  Smooth Lead  St, M&#10;D: 84  Synth Plug  St, M&#10;D: 85  Subbass&#10;D: 86  Synvoice&#10;D: 87  Deep Jazz &#10;D: 88  Memory Synth&#10;D: 89  Evolution&#10;D: 90  Sideral  St, M&#10;D: 91  North Wire  St, M&#10;D: 92  Blowing  St, M&#10;D: 93  Aural  St, M&#10;D: 94  Velvet  St, M&#10;D: 95  Etnovox  St, M&#10;D: 96  Whisper  M&#10;D: 97  Evopad  St, M&#10;D: 98  Plucking  St, M&#10;D: 99  Mallet Area  St, M&#10;D: 100  80&#8217;s Pad  St, M &#10;D: 101  Fluty Pad   St, M&#10;D: 102  Nylon Theme  St, M&#10;D: 103  BottledChoir&#10;D: 104  Brass Hits  St, M&#10;D: 105  Southern Harp  M&#10;D: 106  Ungarian Zither M&#10;D: 107  Alpen Choir  M&#10;D: 108  Mallet World  M&#10;D: 109  Country&amp;Western M&#10;D: 110  StereoFolk  St, M&#10;D: 111  Alpen Musette&#10;D: 112  Jazz Accordion&#10;D: 113  Bright Musette  M &#10;D: 114  335 Jazz &#10;D: 115  Smooth_Bass&#10;D: 116  Funky Muted&#10;D: 117  Country Gtr&#10;D: 118  Nylon_slide&#10;D: 119  Power Guit&#10;D: 120  Clean Chorus  FX&#10;D: 121  Tremolo Mark  FX&#10;D: 122  Phase  Electro FX         &#10;D: 123  Organ Overdrive FX&#10;D: 124  Metal  FX    &#10;D: 125  Distorted  FX&#10;D: 126  Crunch  FX    &#10;D: 127  Jazz Combo  St, M, FX&#10;D: 128  Echolead  St, FX"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="168 72 147 32" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_0_MasterReverbAndChorus" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-5"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Reverb &amp; Chorus Controls"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="16 592 268 220"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentTabId="0" componentTabName="" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiGroup"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="256" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnTestButton" modulatorMin="0" serializeIndex="256" TriggerModChangeMethodOnLoad="0"
             PauseMidiDuringModChangeOnLoad="1" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-3"
               componentMouseCursor="2" componentGroupName="grpDevelopment"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="0xff0000ff"
               uiButtonColourOff="ff57ff43" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="0xff454545" uiButtonContent="0&#10;1&#10;2&#10;3"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="16 264 82 45" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="257" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnModAdded" modulatorMin="0" serializeIndex="257" TriggerModChangeMethodOnLoad="0"
             PauseMidiDuringModChangeOnLoad="1" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="grpDevelopment"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="NewModulatorAddedToPanel" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ff000000"
               uiButtonColourOff="ff6f6f6f" uiButtonTextColourOn="ff6f6f6f"
               uiButtonTextColourOff="ff000000" uiButtonContent="Modulator added"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="8 104 72 46" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiButton"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Efx2_Mix_Current_Preset" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Current Preset"
               componentMouseCursor="2" componentGroupName="grp_2_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff00ff00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiLabelText="OFF custom" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="104 16 88 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Efx3_Mix_Current_Preset" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Current Preset"
               componentMouseCursor="2" componentGroupName="grp_3_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff00ff00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiLabelText="OFF custom" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="104 16 88 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Efx2_EQ_Current_Preset" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Current Preset"
               componentMouseCursor="2" componentGroupName="grp_2_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff00ff00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiLabelText="Flat custom" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="104 16 88 24"
               uiType="uiLabel" componentTabName=""/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Efx3_EQ_Current_Preset" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Current Preset"
               componentMouseCursor="2" componentGroupName="grp_3_Equalizer_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff00ff00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiLabelText="Flat custom" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentTabName="" uiType="uiLabel" componentRectangle="104 16 88 24"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Efx2_Mod_Current_Preset" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Current Preset"
               componentMouseCursor="2" componentGroupName="grp_2_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff00ff00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiLabelText="OFF custom" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="8 24 88 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Efx3_Mod_Current_Preset" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Current Preset"
               componentMouseCursor="2" componentGroupName="grp_3_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff00ff00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiLabelText="OFF custom" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="8 24 88 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Efx2_CompLimit_Current_Preset" modulatorVstExported="0"
             vstIndex="" PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Current Preset"
               componentMouseCursor="2" componentGroupName="grp_2_CompressorLimiter_Presets"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff00ff00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiLabelText="No Compression custom" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="48 8 180 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Efx3_CompLimit_Current_Preset" modulatorVstExported="0"
             vstIndex="" PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Current Preset"
               componentMouseCursor="2" componentGroupName="grp_3_CompressorLimiter_Presets"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff00ff00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiLabelText="No Compression custom" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="48 8 180 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Efx2_Delay_Current_Preset" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Current Preset"
               componentMouseCursor="2" componentGroupName="grp_2_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff00ff00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiLabelText="OFF custom" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="16 16 88 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Efx2_Wah_Current_Preset" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Current Preset"
               componentMouseCursor="2" componentGroupName="grp_2_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff00ff00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiLabelText="OFF custom" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="8 24 88 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Efx2_Dist_Current_Preset" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Current Preset"
               componentMouseCursor="2" componentGroupName="grp_2_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff00ff00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiLabelText="OFF custom" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="0 24 88 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Efx3_Delay_Current_Preset" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Current Preset"
               componentMouseCursor="2" componentGroupName="grp_3_DelayControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff00ff00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiLabelText="OFF custom" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="16 16 88 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Efx3_Wah_Current_Preset" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Current Preset"
               componentMouseCursor="2" componentGroupName="grp_3_WahControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff00ff00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiLabelText="OFF custom" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="8 24 88 24" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="Efx3_Dist_Current_Preset" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Current Preset"
               componentMouseCursor="2" componentGroupName="grp_3_DistortionControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ff00ff00" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="&lt;Sans-Serif&gt;;14;1;0;0;0;1;3"
               uiLabelText="OFF custom" uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="0 24 88 24"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="258" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnMapHqDist" modulatorMin="0" serializeIndex="258" TriggerModChangeMethodOnLoad="0"
             PauseMidiDuringModChangeOnLoad="1" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-3"
               componentMouseCursor="2" componentGroupName="grpDevelopment"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="MapHQDistortionToAllChannel" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ff000000"
               uiButtonColourOff="ff6f6f6f" uiButtonTextColourOn="ff6f6f6f"
               uiButtonTextColourOff="ff000000" uiButtonContent="Map HQ Distortion to all Channel"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="216 272 104 44" uiType="uiButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="259" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnSendEfxMode" modulatorMin="0" serializeIndex="259" TriggerModChangeMethodOnLoad="0"
             PauseMidiDuringModChangeOnLoad="1" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-3"
               componentMouseCursor="2" componentGroupName="grpDevelopment"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="sendEfxModeBySysEx" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ff000000"
               uiButtonColourOff="ff6f6f6f" uiButtonTextColourOn="ff6f6f6f"
               uiButtonTextColourOff="ff000000" uiButtonContent="send Efx Mode"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="104 272 104 44" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiButton" componentTabName="" componentTabId="3"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="268" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setLoadingCompleteFlag"
             name="loadingCompleteMod" modulatorMin="0" serializeIndex="268"
             TriggerModChangeMethodOnLoad="1" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-6"
               componentMouseCursor="2" componentGroupName="grpLoadingModulators"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTextColourOn="0xff000000"
               uiToggleButtonFocusOutline="0x00000000" uiToggleButtonText="Button"
               uiButtonTrueValue="1" uiButtonFalseValue="0" uiButtonColourOff="0xff0000ff"
               componentRectangle="16 24 88 32" uiType="uiToggleButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="261" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnSortModsByName" modulatorMin="0" serializeIndex="261"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Sort Modulator By Name"
               componentMouseCursor="2" componentGroupName="grpDevelopment"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="SortModulatorByName" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="0xff0000ff"
               uiButtonColourOff="0xff4364ff" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="0xff454545" uiButtonContent="False&#10;True"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="24 152 110 32" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="72" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Mix_OutputLevel" modulatorMin="0" serializeIndex="72"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,42,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Output Level"
               componentMouseCursor="2" componentGroupName="grp_1_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="Rotary"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="127" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="8 368 79 58" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_2_Insert_Controls_Rotary" modulatorVstExported="0"
             vstIndex="" PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-5"
               componentMouseCursor="2" componentGroupName="grp_2_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Rotary Preset Only Controls"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="280 136 320 110"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               uiType="uiGroup" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="142" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Mod_Rotary_Fast_Mod_Rate" modulatorMin="0" serializeIndex="142"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,58,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Modu. Rate"
               componentMouseCursor="2" componentGroupName="grp_2_Insert_Controls_Rotary"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="96 24 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="143" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Mod_Rotary_Acc_Time" modulatorMin="0" serializeIndex="143"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,59,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Acceleration"
               componentMouseCursor="2" componentGroupName="grp_2_Insert_Controls_Rotary"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="168 24 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="144" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Mod_Rotary_Dec_Time" modulatorMin="0" serializeIndex="144"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="64">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,60,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Deceleration"
               componentMouseCursor="2" componentGroupName="grp_2_Insert_Controls_Rotary"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="240 24 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grpLoadingModulators" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-5"
               componentMouseCursor="2" componentGroupName="grpDevelopment"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Loading Modulators"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="16 24 128 72"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               uiType="uiGroup" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="145" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Mix_OutputLevel" modulatorMin="0" serializeIndex="145"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,42,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Output Level"
               componentMouseCursor="2" componentGroupName="grp_2_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="Rotary"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="127" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="8 368 79 58"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="212" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Mix_OutputLevel" modulatorMin="0" serializeIndex="212"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,42,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Output Level"
               componentMouseCursor="2" componentGroupName="grp_3_GeneralControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="Rotary"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="127" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="8 368 79 58"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_1_Insert_Controls_Rotary" modulatorVstExported="0"
             vstIndex="" PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-5"
               componentMouseCursor="2" componentGroupName="grp_1_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Rotary Preset Only Controls"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="280 136 320 110"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentLayerUid="e4c3411959000000feffffffffffffff" uiType="uiGroup"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="73" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Mod_Rotary_Fast_Mod_Rate" modulatorMin="0" serializeIndex="73"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,58,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Modu. Rate"
               componentMouseCursor="2" componentGroupName="grp_1_Insert_Controls_Rotary"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="96 24 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="74" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Mod_Rotary_Acc_Time" modulatorMin="0" serializeIndex="74"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="127">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,59,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Acceleration"
               componentMouseCursor="2" componentGroupName="grp_1_Insert_Controls_Rotary"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="168 24 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="75" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Mod_Rotary_Dec_Time" modulatorMin="0" serializeIndex="75"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,60,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Deceleration"
               componentMouseCursor="2" componentGroupName="grp_1_Insert_Controls_Rotary"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="240 24 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_3_Insert_Controls_Rotary" modulatorVstExported="0"
             vstIndex="" PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-5"
               componentMouseCursor="2" componentGroupName="grp_3_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Rotary Preset Only Controls"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="280 136 320 110"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               uiType="uiGroup" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="213" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Mod_Rotary_Fast_Mod_Rate" modulatorMin="0" serializeIndex="213"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,58,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Modu. Rate"
               componentMouseCursor="2" componentGroupName="grp_3_Insert_Controls_Rotary"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="96 24 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="214" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Mod_Rotary_Dec_Time" modulatorMin="0" serializeIndex="214"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,60,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Deceleration"
               componentMouseCursor="2" componentGroupName="grp_3_Insert_Controls_Rotary"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="240 24 64 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="215" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Mod_Rotary_Acc_Time" modulatorMin="0" serializeIndex="215"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="100">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,59,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Acceleration"
               componentMouseCursor="2" componentGroupName="grp_3_Insert_Controls_Rotary"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="168 24 64 64" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="262" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="0"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnChannelPanicReset" modulatorMin="0" serializeIndex="262"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="20">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="2304" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,123,0,F0 00 F7:CC,Direct,Direct,121,0,F0 00 F7:CC,Direct,Direct,120,0,F0 00 F7:SysEx,Direct,Direct,-1,-1,F0 7E 7F 09 01 F7:CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,127,F0 00 F7:CC,Direct,Direct,6,0,F0 00 F7:CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,127,F0 00 F7:CC,Direct,Direct,6,0,F0 00 F7:CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,127,F0 00 F7:CC,Direct,Direct,6,0,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Channel Reset"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="PanicReset" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ffff00ff"
               uiButtonColourOff="ffff00ff" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="0xff454545" uiButtonContent="" uiButtonConnectedLeft="0"
               uiButtonConnectedRight="0" uiButtonConnectedTop="0" uiButtonConnectedBottom="0"
               uiButtonRepeat="0" uiButtonRepeatRate="100" uiButtonTriggerOnMouseDown="0"
               componentInternalFunction="-- None" componentRectangle="248 16 83 51"
               componentLayerUid="e4c3411959000000feffffffffffffff" uiType="uiButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="16" vstIndex="1" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="panelMidiOutputChannelDevice"
             modulatorLinkedToModulatorProperty="-- None" modulatorLinkedToModulator="-- None"
             modulatorLinkedToModulatorSource="1" modulatorLinkedToComponent="Modulator"
             modulatorBaseValue="0" modulatorCustomIndex="0" modulatorCustomName=""
             modulatorCustomIndexGroup="0" modulatorCustomNameGroup="" modulatorVstNameFormat="%n"
             luaModulatorValueChange="-- None" name="MIDIChannel" modulatorMin="1"
             serializeIndex="1" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="0"
             modulatorValue="4">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="MIDI Channel"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="1" uiSliderMax="16" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="0xff000000" uiSliderValueBgColour="0xffffffff"
               uiSliderRotaryOutlineColour="0xff0000ff" uiSliderRotaryFillColour="0xff0000ff"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="0xffffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="24 64 76 64"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="263" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="efx3_sendAll" modulatorMin="0" serializeIndex="263" TriggerModChangeMethodOnLoad="0"
             PauseMidiDuringModChangeOnLoad="1" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="sendAllEfxParameter" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ff000000"
               uiButtonColourOff="ff6f6f6f" uiButtonTextColourOn="ff6f6f6f"
               uiButtonTextColourOff="ff000000" uiButtonContent="Send all EFX Parameter"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="15 16 188 64" uiType="uiButton" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentTabName="fxTabs" componentTabId="3"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="264" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="efx2_sendAll" modulatorMin="0" serializeIndex="264" TriggerModChangeMethodOnLoad="0"
             PauseMidiDuringModChangeOnLoad="1" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="sendAllEfxParameter" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ff000000"
               uiButtonColourOff="ff6f6f6f" uiButtonTextColourOn="ff6f6f6f"
               uiButtonTextColourOff="ff000000" uiButtonContent="Send all EFX Parameter"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="15 16 188 64" componentTabId="2" componentTabName="fxTabs"
               componentLayerUid="e4c3411959000000feffffffffffffff" uiType="uiButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="265" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="efx1_sendAll" modulatorMin="0" serializeIndex="265" TriggerModChangeMethodOnLoad="0"
             PauseMidiDuringModChangeOnLoad="1" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="sendAllEfxParameter" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="ff000000"
               uiButtonColourOff="ff6f6f6f" uiButtonTextColourOn="ff6f6f6f"
               uiButtonTextColourOff="ff000000" uiButtonContent="Send all EFX Parameter"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="15 16 188 64" uiType="uiButton" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentTabName="fxTabs" componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="14" vstIndex="7" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="setCurrentPresetLabel"
             name="Efx1_Mix_Preset_Value" modulatorMin="0" serializeIndex="7"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="0"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,32,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Amp Model Preset (S.6)"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="1"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF=0&#10;JC Clean=1&#10;Acoustic=2&#10;Black Panel=3&#10;Brit Combo=4&#10;Tweed=5&#10;Stack Classic=6&#10;Metal=7&#10;R-Fler=8&#10;Dyna Amp=9&#10;Crunch=10&#10;VO Drive=11&#10;BG Lead=12&#10;MS Higain=13&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentRectangle="8 0 96 32" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiCombo" componentTabName="tabEfxPresets" componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="14" vstIndex="77" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setCurrentPresetLabel"
             name="Efx2_Mix_Preset_Value" modulatorMin="0" serializeIndex="77"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="0"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,32,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Amp Model Preset (S.6)"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="1"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF=0&#10;JC Clean=1&#10;Acoustic=2&#10;Black Panel=3&#10;Brit Combo=4&#10;Tweed=5&#10;Stack Classic=6&#10;Metal=7&#10;R-Fler=8&#10;Dyna Amp=9&#10;Crunch=10&#10;VO Drive=11&#10;BG Lead=12&#10;MS Higain=13&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="8 0 96 32" componentTabName="tabEfxPresets"
               componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="14" vstIndex="147" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setCurrentPresetLabel"
             name="Efx3_Mix_Preset_Value" modulatorMin="0" midiMessageType="9"
             serializeIndex="147" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="0"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,32,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Amp Model Preset (S.6)"
               componentMouseCursor="2" componentGroupName="grp_GeneralControls-2"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF=0&#10;JC Clean=1&#10;Acoustic=2&#10;Black Panel=3&#10;Brit Combo=4&#10;Tweed=5&#10;Stack Classic=6&#10;Metal=7&#10;R-Fler=8&#10;Dyna Amp=9&#10;Crunch=10&#10;VO Drive=11&#10;BG Lead=12&#10;MS Higain=13&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentRectangle="8 0 96 32" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiCombo" componentTabName="tabEfxPresets" componentTabId="2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="14" vstIndex="8" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setCurrentPresetLabel"
             name="Efx1_EQ_Preset_Value" modulatorMin="0" serializeIndex="8"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="0"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,112,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (1.4)"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="1"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="9" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="Flat=0&#10;JC Clean=1&#10;Acoustic=2&#10;Black Panel=3&#10;Brit Combo=4&#10;Tweed=5&#10;Stack Classic=6&#10;Metal=7&#10;R-Fler=8&#10;Dyna Amp=9&#10;Crunch=10&#10;VO Drive=11&#10;BG Lead=12&#10;MS HiGain=13&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="8 32 88 32" uiType="uiCombo" componentTabName="tabEfxPresets"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="9" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setCurrentPresetLabel"
             name="Efx1_Mod_Preset_Value" modulatorMin="0" serializeIndex="9"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="0"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,48,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (1.5)"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="1"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF&#10;Chorus Light 1&#10;Chorus Light 2&#10;Chorus Medium 1&#10;Chorus Medium 2&#10;Chorus Deep 1&#10;Chorus Deep 2&#10;Chorus Fast 1&#10;Chorus Fast 2&#10;Resonant Chorus&#10;Long Time Chorus&#10;Flange Light&#10;Flange Medium&#10;Flange Slow Deep&#10;Flange Deep&#10;Phaser Light&#10;Phaser Medium&#10;Phaser Slow Deep&#10;Phaser Fast&#10;Tremolo Slow&#10;Tremolo Medium 1&#10;Tremolo Medium 2&#10;Tremolo Fast&#10;Rotary Slow&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="8 64 90 36"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentTabName="tabEfxPresets"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="5" vstIndex="10" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setCurrentPresetLabel"
             name="Efx1_Delay_Preset_Value" modulatorMin="0" serializeIndex="10"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="0"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,88,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (S.7)"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="1"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF&#10;mono1&#10;mono2&#10;stereo1&#10;stereo2&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="8 104 88 32" uiType="uiCombo" componentTabName="tabEfxPresets"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="6" vstIndex="11" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setCurrentPresetLabel"
             name="Efx1_Wah_Preset_Value" modulatorMin="0" serializeIndex="11"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="0"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,80,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (S.5)"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="1"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF=0&#10;Auto-Wah 1&#10;Auto-Wah 2&#10;Auto-Wah 3&#10;Wah-Wah 1&#10;Wah-Wah 2&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="8 136 72 32" uiType="uiCombo" componentTabName="tabEfxPresets"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="14" vstIndex="12" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setCurrentPresetLabel"
             name="Efx1_Dist_Preset_Value" modulatorMin="0" serializeIndex="12"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="0"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,96,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Presets (1.3)"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="1"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF=0&#10;Tube Dist Low 1=1&#10;Tube Dist Low 2=2&#10;Tube Dist Mid 1=3&#10;Tube Dist Mid 2=4&#10;Tube Dist High 1=5&#10;Tube Dist High 2=6&#10;Smooth OD=7&#10;Distortion=8&#10;Crunch=9&#10;Fuzz=10&#10;Grunge=11&#10;Metal=12&#10;Mess=13&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="8 168 125 32" uiType="uiCombo" componentTabName="tabEfxPresets"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="9" vstIndex="13" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setCurrentPresetLabel"
             name="Efx1_CompLimit_Preset_Value" modulatorMin="0" serializeIndex="13"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="0"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,64,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Compressor/Limiter"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="1"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="No Compression=0&#10;Compression -18dB (2:1)=1&#10;Compression -15dB (3:1)=2&#10;Compression -18dB (5:1)=3&#10;Compression -21dB (7:1)=4&#10;Compression -24dB (12:1)=5&#10;Limiter -6dB=6&#10;Limiter -12dB=7&#10;Limiter -18dB=8&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="8 200 174 30"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentTabName="tabEfxPresets"
               componentTabId="0"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="14" vstIndex="78" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setCurrentPresetLabel"
             name="Efx2_EQ_Preset_Value" modulatorMin="0" serializeIndex="78"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="0"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,112,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (1.4)"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="1"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="9" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="Flat=0&#10;JC Clean=1&#10;Acoustic=2&#10;Black Panel=3&#10;Brit Combo=4&#10;Tweed=5&#10;Stack Classic=6&#10;Metal=7&#10;R-Fler=8&#10;Dyna Amp=9&#10;Crunch=10&#10;VO Drive=11&#10;BG Lead=12&#10;MS HiGain=13&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="8 32 88 32"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentTabName="tabEfxPresets"
               componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="79" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setCurrentPresetLabel"
             name="Efx2_Mod_Preset_Value" modulatorMin="0" serializeIndex="79"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="0"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,48,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (1.5)"
               componentMouseCursor="2" componentGroupName="grp_Insert_Controls-1"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF&#10;Chorus Light 1&#10;Chorus Light 2&#10;Chorus Medium 1&#10;Chorus Medium 2&#10;Chorus Deep 1&#10;Chorus Deep 2&#10;Chorus Fast 1&#10;Chorus Fast 2&#10;Resonant Chorus&#10;Long Time Chorus&#10;Flange Light&#10;Flange Medium&#10;Flange Slow Deep&#10;Flange Deep&#10;Phaser Light&#10;Phaser Medium&#10;Phaser Slow Deep&#10;Phaser Fast&#10;Tremolo Slow&#10;Tremolo Medium 1&#10;Tremolo Medium 2&#10;Tremolo Fast&#10;Rotary Slow&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentTabId="1" componentTabName="tabEfxPresets"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="8 64 90 36"
               uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="5" vstIndex="80" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setCurrentPresetLabel"
             name="Efx2_Delay_Preset_Value" modulatorMin="0" serializeIndex="80"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="0"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,88,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (S.7)"
               componentMouseCursor="2" componentGroupName="grp_DelayControls-1"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF&#10;mono1&#10;mono2&#10;stereo1&#10;stereo2&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="8 104 88 32"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentTabName="tabEfxPresets"
               componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="6" vstIndex="81" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setCurrentPresetLabel"
             name="Efx2_Wah_Preset_Value" modulatorMin="0" serializeIndex="81"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="0"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,80,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (S.5)"
               componentMouseCursor="2" componentGroupName="grp_WahControls-1"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF=0&#10;Auto-Wah 1&#10;Auto-Wah 2&#10;Auto-Wah 3&#10;Wah-Wah 1&#10;Wah-Wah 2&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="8 136 72 32"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentTabName="tabEfxPresets"
               componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="14" vstIndex="82" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setCurrentPresetLabel"
             name="Efx2_Dist_Preset_Value" modulatorMin="0" serializeIndex="82"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="0"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,96,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Presets (1.3)"
               componentMouseCursor="2" componentGroupName="grp_DistortionControls-1"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF=0&#10;Tube Dist Low 1=1&#10;Tube Dist Low 2=2&#10;Tube Dist Mid 1=3&#10;Tube Dist Mid 2=4&#10;Tube Dist High 1=5&#10;Tube Dist High 2=6&#10;Smooth OD=7&#10;Distortion=8&#10;Crunch=9&#10;Fuzz=10&#10;Grunge=11&#10;Metal=12&#10;Mess=13&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="8 168 125 32"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentTabName="tabEfxPresets"
               componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="9" vstIndex="83" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setCurrentPresetLabel"
             name="Efx2_CompLimit_Preset_Value" modulatorMin="0" serializeIndex="83"
             componentRectangle="" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="0"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,64,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Compressor/Limiter"
               componentMouseCursor="2" componentGroupName="grp_Compressor_Presets-1"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="No Compression=0&#10;Compression -18dB (2:1)=1&#10;Compression -15dB (3:1)=2&#10;Compression -18dB (5:1)=3&#10;Compression -21dB (7:1)=4&#10;Compression -24dB (12:1)=5&#10;Limiter -6dB=6&#10;Limiter -12dB=7&#10;Limiter -18dB=8&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="8 200 174 30" uiType="uiCombo" componentTabName="tabEfxPresets"
               componentTabId="1"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="14" vstIndex="148" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setCurrentPresetLabel"
             name="Efx3_EQ_Preset_Value" modulatorMin="0" midiMessageType="9"
             serializeIndex="148" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="0"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,112,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (1.4)"
               componentMouseCursor="2" componentGroupName="grp_Equalizer_Controls-2"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="9" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="Flat=0&#10;JC Clean=1&#10;Acoustic=2&#10;Black Panel=3&#10;Brit Combo=4&#10;Tweed=5&#10;Stack Classic=6&#10;Metal=7&#10;R-Fler=8&#10;Dyna Amp=9&#10;Crunch=10&#10;VO Drive=11&#10;BG Lead=12&#10;MS HiGain=13&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="8 32 88 32" uiType="uiCombo" componentTabName="tabEfxPresets"
               componentTabId="2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="5" vstIndex="149" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setCurrentPresetLabel"
             name="Efx3_Delay_Preset_Value" modulatorMin="0" midiMessageType="9"
             serializeIndex="149" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="0"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,88,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (S.7)"
               componentMouseCursor="2" componentGroupName="grp_DelayControls-2"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF&#10;mono1&#10;mono2&#10;stereo1&#10;stereo2&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="8 104 88 32" uiType="uiCombo" componentTabName="tabEfxPresets"
               componentTabId="2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="6" vstIndex="150" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setCurrentPresetLabel"
             name="Efx3_Wah_Preset_Value" modulatorMin="0" midiMessageType="9"
             serializeIndex="150" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="0"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,80,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (S.5)"
               componentMouseCursor="2" componentGroupName="grp_WahControls-2"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF=0&#10;Auto-Wah 1&#10;Auto-Wah 2&#10;Auto-Wah 3&#10;Wah-Wah 1&#10;Wah-Wah 2&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="8 136 72 32" uiType="uiCombo" componentTabName="tabEfxPresets"
               componentTabId="2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="14" vstIndex="151" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setCurrentPresetLabel"
             name="Efx3_Dist_Preset_Value" modulatorMin="0" midiMessageType="9"
             serializeIndex="151" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="0"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,96,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Presets (1.3)"
               componentMouseCursor="2" componentGroupName="grp_DistortionControls-2"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF=0&#10;Tube Dist Low 1=1&#10;Tube Dist Low 2=2&#10;Tube Dist Mid 1=3&#10;Tube Dist Mid 2=4&#10;Tube Dist High 1=5&#10;Tube Dist High 2=6&#10;Smooth OD=7&#10;Distortion=8&#10;Crunch=9&#10;Fuzz=10&#10;Grunge=11&#10;Metal=12&#10;Mess=13&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="e4c3411959000000feffffffffffffff"
               componentRectangle="8 168 125 32" uiType="uiCombo" componentTabName="tabEfxPresets"
               componentTabId="2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="9" vstIndex="152" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setCurrentPresetLabel"
             name="Efx3_CompLimit_Preset_Value" modulatorMin="0" midiMessageType="9"
             serializeIndex="152" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="0"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,64,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Compressor/Limiter"
               componentMouseCursor="2" componentGroupName="grp_Compressor_Presets-2"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="No Compression=0&#10;Compression -18dB (2:1)=1&#10;Compression -15dB (3:1)=2&#10;Compression -18dB (5:1)=3&#10;Compression -21dB (7:1)=4&#10;Compression -24dB (12:1)=5&#10;Limiter -6dB=6&#10;Limiter -12dB=7&#10;Limiter -18dB=8&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="8 200 174 30"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentTabName="tabEfxPresets"
               componentTabId="2"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="24" vstIndex="153" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setCurrentPresetLabel"
             name="Efx3_Mod_Preset_Value" modulatorMin="0" midiMessageType="9"
             serializeIndex="153" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="0"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,48,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (1.5)"
               componentMouseCursor="2" componentGroupName="grp_Insert_Controls-2"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF&#10;Chorus Light 1&#10;Chorus Light 2&#10;Chorus Medium 1&#10;Chorus Medium 2&#10;Chorus Deep 1&#10;Chorus Deep 2&#10;Chorus Fast 1&#10;Chorus Fast 2&#10;Resonant Chorus&#10;Long Time Chorus&#10;Flange Light&#10;Flange Medium&#10;Flange Slow Deep&#10;Flange Deep&#10;Phaser Light&#10;Phaser Medium&#10;Phaser Slow Deep&#10;Phaser Fast&#10;Tremolo Slow&#10;Tremolo Medium 1&#10;Tremolo Medium 2&#10;Tremolo Fast&#10;Rotary Slow&#10;Load=99"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentTabId="2" componentTabName="tabEfxPresets"
               componentLayerUid="e4c3411959000000feffffffffffffff" componentRectangle="8 64 90 36"
               uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="6" vstIndex="2" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="setCurrentPresetLabel"
             name="HQ_Dist_Preset_Value" modulatorMin="0" serializeIndex="2"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="0"
             modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,61,F0 00 F7:CC,Direct,Direct,98,03,F0 00 F7:CC,Direct,Direct,06,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Preset (S.57)"
               componentMouseCursor="2" componentGroupName="grp_HQ_DistortionTopLevelControls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="0" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="OFF=0&#10;Warm-Drive=1&#10;Overdrive=2&#10;Cry=3&#10;Distortion=4&#10;Max-Saturation=6&#10;Fuzz=7"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="96 176 88 32"
               componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grpDevelopment" modulatorVstExported="0" vstIndex="" PauseMidiDuringModChangeOnLoad="-1"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-5"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="1"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Development"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="1264 592 331 354"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentLayerUid="e4c3411959000000feffffffffffffff" uiType="uiGroup"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="tabEfxPresets" modulatorVstExported="0" serializeIndex="266"
             vstIndex="266" TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="65535">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiTabsCurrentTabChanged=""
               uiTabsDepth="24" uiTabsOutlineThickness="2" uiTabsFrontTabOutline="1"
               uiTabsTabOutline="1" uiTabsIndentThickness="0" uiTabsOrientation="0"
               uiTabsFrontTabFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiTabsTabFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiTabsOutlineGlobalColour="0x00000000" uiTabsOutlineGlobalBackgroundColour="0x67000000"
               uiTabsOutlineTabColour="0xff303030" uiTabsTextTabColour="0xff909090"
               uiTabsFrontTabOutlineColour="0xff000000" uiTabsFrontTabTextColour="0xff000000"
               uiTabsAddTab="0" uiTabsRemoveTab="0" componentRectangle="216 128 189 275"
               componentTabId="0" componentTabName="" uiType="uiTabs" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiTabsCurrentTab="0">
      <uiTabsTab uiTabsTabIndex="0" uiTabsTabName="EFX1" uiTabsTabContentBackgroundColour="ffffff00"
                 uiTabsTabBackgroundColour="ffd3d3d3" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="1" uiTabsTabName="EFX2" uiTabsTabContentBackgroundColour="ffffff00"
                 uiTabsTabBackgroundColour="ffd3d3d3" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="2" uiTabsTabName="EFX3" uiTabsTabContentBackgroundColour="ffffff00"
                 uiTabsTabBackgroundColour="ffd3d3d3" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
    </component>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="267" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="btnReAlignDesign" modulatorMin="0" serializeIndex="267"
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="65535">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="CloneDesign"
               componentMouseCursor="2" componentGroupName="grpDevelopment"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="1" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="CopyDesign" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="0xff0000ff"
               uiButtonColourOff="0xff4364ff" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="0xff454545" uiButtonContent="False&#10;True"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="32 184 88 32" uiType="uiButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grpOnLoadFXControlsEnableSettings" modulatorVstExported="0"
             vstIndex="" PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="EFX Insert Controls"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="8 8 172 217"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentTabId="0" componentTabName="tabFxInsertGroups" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiGroup"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="dev_MIDI_Enable_Mix" modulatorMin="0" PauseMidiDuringModChangeOnLoad="-1"
             TriggerModChangeMethodOnLoad="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Mix"
               componentMouseCursor="2" componentGroupName="grpOnLoadFXControlsEnableSettings"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTextColourOn="0xff000000"
               uiToggleButtonFocusOutline="0x00000000" uiToggleButtonText="Mix"
               uiButtonTrueValue="1" uiButtonFalseValue="0" uiButtonColourOff="0xff0000ff"
               componentRectangle="8 16 88 32" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiToggleButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="dev_MIDI_Enable_EQ" modulatorMin="0" PauseMidiDuringModChangeOnLoad="-1"
             TriggerModChangeMethodOnLoad="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="EQ"
               componentMouseCursor="2" componentGroupName="grpOnLoadFXControlsEnableSettings"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTextColourOn="0xff000000"
               uiToggleButtonFocusOutline="0x00000000" uiToggleButtonText="EQ"
               uiButtonTrueValue="1" uiButtonFalseValue="0" uiButtonColourOff="0xff0000ff"
               componentRectangle="8 40 88 32" uiType="uiToggleButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="dev_MIDI_Enable_Dist" modulatorMin="0" PauseMidiDuringModChangeOnLoad="-1"
             TriggerModChangeMethodOnLoad="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Distortion"
               componentMouseCursor="2" componentGroupName="grpOnLoadFXControlsEnableSettings"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTextColourOn="0xff000000"
               uiToggleButtonFocusOutline="0x00000000" uiToggleButtonText="Distortion"
               uiButtonTrueValue="1" uiButtonFalseValue="0" uiButtonColourOff="0xff0000ff"
               componentRectangle="8 64 112 32" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiToggleButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="dev_MIDI_Enable_Mod" modulatorMin="0" PauseMidiDuringModChangeOnLoad="-1"
             TriggerModChangeMethodOnLoad="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Mod"
               componentMouseCursor="2" componentGroupName="grpOnLoadFXControlsEnableSettings"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTextColourOn="0xff000000"
               uiToggleButtonFocusOutline="0x00000000" uiToggleButtonText="Mod"
               uiButtonTrueValue="1" uiButtonFalseValue="0" uiButtonColourOff="0xff0000ff"
               componentRectangle="8 88 88 32" uiType="uiToggleButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="dev_MIDI_Enable_Delay" modulatorMin="0" PauseMidiDuringModChangeOnLoad="-1"
             TriggerModChangeMethodOnLoad="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Delay"
               componentMouseCursor="2" componentGroupName="grpOnLoadFXControlsEnableSettings"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTextColourOn="0xff000000"
               uiToggleButtonFocusOutline="0x00000000" uiToggleButtonText="Delay"
               uiButtonTrueValue="1" uiButtonFalseValue="0" uiButtonColourOff="0xff0000ff"
               componentRectangle="8 160 88 32" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiToggleButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="dev_MIDI_Enable_CompLimit" modulatorMin="0" PauseMidiDuringModChangeOnLoad="-1"
             TriggerModChangeMethodOnLoad="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="CompLimit"
               componentMouseCursor="2" componentGroupName="grpOnLoadFXControlsEnableSettings"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTextColourOn="0xff000000"
               uiToggleButtonFocusOutline="0x00000000" uiToggleButtonText="CompLimit"
               uiButtonTrueValue="1" uiButtonFalseValue="0" uiButtonColourOff="0xff0000ff"
               componentRectangle="8 136 121 32" uiType="uiToggleButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="dev_MIDI_Enable_Wah" modulatorMin="0" PauseMidiDuringModChangeOnLoad="-1"
             TriggerModChangeMethodOnLoad="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Wah"
               componentMouseCursor="2" componentGroupName="grpOnLoadFXControlsEnableSettings"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTextColourOn="0xff000000"
               uiToggleButtonFocusOutline="0x00000000" uiToggleButtonText="Wah"
               uiButtonTrueValue="1" uiButtonFalseValue="0" uiButtonColourOff="0xff0000ff"
               componentRectangle="8 112 88 32" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiToggleButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="dev_MIDI_Enable_MA" modulatorMin="0" PauseMidiDuringModChangeOnLoad="-1"
             TriggerModChangeMethodOnLoad="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Master"
               componentMouseCursor="2" componentGroupName="grpOnLoadMAControlsEnableSettings"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTextColourOn="0xff000000"
               uiToggleButtonFocusOutline="0x00000000" uiToggleButtonText="Master (vol, pan, tune)"
               uiButtonTrueValue="1" uiButtonFalseValue="0" uiButtonColourOff="0xff0000ff"
               componentRectangle="8 16 161 32" uiType="uiToggleButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="tabFxInsertGroups" modulatorVstExported="0" serializeIndex="260"
             vstIndex="260" PauseMidiDuringModChangeOnLoad="1" TriggerModChangeMethodOnLoad="0"
             modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Enable MIDI Message on Load"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="0"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiTabsCurrentTabChanged=""
               uiTabsDepth="24" uiTabsOutlineThickness="2" uiTabsFrontTabOutline="1"
               uiTabsTabOutline="1" uiTabsIndentThickness="0" uiTabsOrientation="0"
               uiTabsFrontTabFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3" uiTabsTabFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;3"
               uiTabsOutlineGlobalColour="0x00000000" uiTabsOutlineGlobalBackgroundColour="0x67000000"
               uiTabsOutlineTabColour="0xff303030" uiTabsTextTabColour="0xff909090"
               uiTabsFrontTabOutlineColour="0xff000000" uiTabsFrontTabTextColour="0xff000000"
               uiTabsAddTab="0" uiTabsRemoveTab="0" componentRectangle="16 128 193 269"
               uiTabsCurrentTab="0" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiTabs">
      <uiTabsTab uiTabsTabIndex="0" uiTabsTabName="EFX" uiTabsTabContentBackgroundColour="ffffff00"
                 uiTabsTabBackgroundColour="ffd3d3d3" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
      <uiTabsTab uiTabsTabIndex="1" uiTabsTabName="Other" uiTabsTabContentBackgroundColour="ffffff00"
                 uiTabsTabBackgroundColour="ffd3d3d3" uiTabsTabBackgroundImage="-- None"
                 uiTabsTabBackgroundImageLayout="36" uiTabsTabBackgroundImageAlpha="255"/>
    </component>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="dev_MIDI_Enable_Other" modulatorMin="0" PauseMidiDuringModChangeOnLoad="-1"
             TriggerModChangeMethodOnLoad="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Other"
               componentMouseCursor="2" componentGroupName="grpOnLoadFXControlsEnableSettings"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTextColourOn="0xff000000"
               uiToggleButtonFocusOutline="0x00000000" uiToggleButtonText="Other"
               uiButtonTrueValue="1" uiButtonFalseValue="0" uiButtonColourOff="0xff0000ff"
               componentRectangle="8 184 88 32" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiToggleButton"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grpOnLoadMAControlsEnableSettings" modulatorVstExported="0"
             vstIndex="" PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="modulator-4"
               componentMouseCursor="2" componentGroupName="" componentGroupped="1"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Master Controls"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="8 8 172 181"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentTabId="1" componentTabName="tabFxInsertGroups" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiGroup"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="dev_MIDI_Enable_Portamento" modulatorMin="0" PauseMidiDuringModChangeOnLoad="-1"
             TriggerModChangeMethodOnLoad="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Portamento"
               componentMouseCursor="2" componentGroupName="grpOnLoadMAControlsEnableSettings"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTextColourOn="0xff000000"
               uiToggleButtonFocusOutline="0x00000000" uiToggleButtonText="Portamento"
               uiButtonTrueValue="1" uiButtonFalseValue="0" uiButtonColourOff="0xff0000ff"
               componentRectangle="8 88 165 32" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiToggleButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="dev_MIDI_Enable_HQDist" modulatorMin="0" PauseMidiDuringModChangeOnLoad="-1"
             TriggerModChangeMethodOnLoad="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="HQ Distortion"
               componentMouseCursor="2" componentGroupName="grpOnLoadMAControlsEnableSettings"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTextColourOn="0xff000000"
               uiToggleButtonFocusOutline="0x00000000" uiToggleButtonText="HQ Distortion"
               uiButtonTrueValue="1" uiButtonFalseValue="0" uiButtonColourOff="0xff0000ff"
               componentRectangle="8 136 145 32" uiType="uiToggleButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="dev_MIDI_Enable_Reverb" modulatorMin="0" PauseMidiDuringModChangeOnLoad="-1"
             TriggerModChangeMethodOnLoad="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Reverb"
               componentMouseCursor="2" componentGroupName="grpOnLoadMAControlsEnableSettings"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTextColourOn="0xff000000"
               uiToggleButtonFocusOutline="0x00000000" uiToggleButtonText="Reverb"
               uiButtonTrueValue="1" uiButtonFalseValue="0" uiButtonColourOff="0xff0000ff"
               componentRectangle="8 40 158 32" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiToggleButton"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="grp_0_Portamento" modulatorVstExported="0" vstIndex=""
             PauseMidiDuringModChangeOnLoad="-1" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Portamento Controls"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiGroupText="Portamento Controls"
               uiGroupTextColour="0xff000000" uiGroupOutlineColour1="0xffa3a3a3"
               uiGroupOutlineColour2="0xffffffff" uiGroupBackgroundColour1="0xffa3a3a3"
               uiGroupBackgroundColour2="0xffffffff" uiGroupOutlineGradientType="Vertical"
               uiGroupBackgroundGradientType="1" uiGroupBackgroundImage="" componentRectangle="288 592 128 220"
               uiGroupBackgroundImageLayout="36" uiGroupBackgroundImageAlpha="255"
               uiGroupTextPlacement="top" uiGroupTextFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               uiGroupOutlineThickness="2" uiGroupOutlineRoundAngle="8" uiGroupTextMargin="0"
               componentLayerUid="e4c3411959000000feffffffffffffff" uiType="uiGroup"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="dev_listAllModulators" modulatorMin="0" PauseMidiDuringModChangeOnLoad="-1"
             TriggerModChangeMethodOnLoad="0" modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="List All Modulators"
               componentMouseCursor="2" componentGroupName="grpDevelopment"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="listAllModulators" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="0" uiButtonColourOn="0xff0000ff"
               uiButtonColourOff="0xff4364ff" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="0xff454545" uiButtonContent="False&#10;True"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="272 40 50 32" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="dev_MIDI_Enable_Pedal" modulatorMin="0" PauseMidiDuringModChangeOnLoad="-1"
             TriggerModChangeMethodOnLoad="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Pedals"
               componentMouseCursor="2" componentGroupName="grpOnLoadMAControlsEnableSettings"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTextColourOn="0xff000000"
               uiToggleButtonFocusOutline="0x00000000" uiToggleButtonText="Pedals"
               uiButtonTrueValue="1" uiButtonFalseValue="0" uiButtonColourOff="0xff0000ff"
               componentRectangle="8 112 145 32" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiToggleButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="dev_MIDI_Enable_Chorus" modulatorMin="0" PauseMidiDuringModChangeOnLoad="-1"
             TriggerModChangeMethodOnLoad="0" modulatorValue="1">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="Chorus"
               componentMouseCursor="2" componentGroupName="grpOnLoadMAControlsEnableSettings"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTextColourOn="0xff000000"
               uiToggleButtonFocusOutline="0x00000000" uiToggleButtonText="Chorus"
               uiButtonTrueValue="1" uiButtonFalseValue="0" uiButtonColourOff="0xff0000ff"
               componentRectangle="8 64 158 32" uiType="uiToggleButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="76" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx1_Mod_On" modulatorMin="0" serializeIndex="76" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,58,F0 00 F7:CC,Direct,Direct,98,63,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="ON/OFF"
               componentMouseCursor="2" componentGroupName="grp_1_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="1" uiButtonColourOn="ff00ff00"
               uiButtonColourOff="ffff0000" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="ff000000" uiButtonContent="OFF=0&#10;ON=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="16 56 73 57" componentLayerUid="e4c3411959000000feffffffffffffff"
               uiType="uiButton"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="146" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx2_Mod_On" modulatorMin="0" serializeIndex="146" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,59,F0 00 F7:CC,Direct,Direct,98,63,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="ON/OFF"
               componentMouseCursor="2" componentGroupName="grp_2_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="1" uiButtonColourOn="ff00ff00"
               uiButtonColourOff="ffff0000" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="ff000000" uiButtonContent="OFF=0&#10;ON=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="16 56 73 57" uiType="uiButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="216" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorMute="0"
             modulatorExcludeFromSnapshot="0" modulatorValueExpression="modulatorValue"
             modulatorValueExpressionReverse="midiValue" modulatorControllerExpression="value"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="Modulator" modulatorBaseValue="0"
             modulatorCustomIndex="0" modulatorCustomName="" modulatorCustomIndexGroup="0"
             modulatorCustomNameGroup="" modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="Efx3_Mod_On" modulatorMin="0" serializeIndex="216" componentRectangle=""
             TriggerModChangeMethodOnLoad="0" PauseMidiDuringModChangeOnLoad="1"
             modulatorValue="0">
    <midi midiMessageType="9" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,Direct,Direct,99,60,F0 00 F7:CC,Direct,Direct,98,63,F0 00 F7:CC,Direct,Direct,6,-1,F0 00 F7"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3" componentVisibleName="ON/OFF"
               componentMouseCursor="2" componentGroupName="grp_3_Insert_Controls"
               componentGroupped="1" componentSnapSize="0" componentIsLocked="0"
               componentDisabled="0" componentRadioGroupId="0" componentRadioGroupNotifyMidi="1"
               componentVisibility="1" componentEffect="0" componentEffectRadius="1"
               componentEffectColour="0xff000000" componentEffectOffsetX="0"
               componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               componentLuaMouseDown="-- None" componentLuaMouseDrag="-- None"
               componentLuaMouseDoubleClick="-- None" uiButtonTrueValue="1"
               uiButtonFalseValue="0" uiButtonIsToggle="1" uiButtonColourOn="ff00ff00"
               uiButtonColourOff="ffff0000" uiButtonTextColourOn="0xff000000"
               uiButtonTextColourOff="ff000000" uiButtonContent="OFF=0&#10;ON=1"
               uiButtonConnectedLeft="0" uiButtonConnectedRight="0" uiButtonConnectedTop="0"
               uiButtonConnectedBottom="0" uiButtonRepeat="0" uiButtonRepeatRate="100"
               uiButtonTriggerOnMouseDown="0" componentInternalFunction="-- None"
               componentRectangle="16 56 73 57" uiType="uiButton" componentLayerUid="e4c3411959000000feffffffffffffff"/>
  </modulator>
  <panelCustomData/>
</panel>
